KIDS Distribution saved on Jul 26, 2004@17:41:56
KIDS software distribution for patch KMPS*1.8*3
**KIDS**:KMPS*1.8*3^

**INSTALL NAME**
KMPS*1.8*3
"BLD",541,0)
KMPS*1.8*3^SAGG PROJECT^0^3040726^y
"BLD",541,1,0)
^^19^19^3040726^^
"BLD",541,1,1,0)
See patch KMPS*1.8*3 in the National Patch Module on FORUM for complete 
"BLD",541,1,2,0)
information on this patch.
"BLD",541,1,3,0)
 
"BLD",541,1,4,0)
This patch is being released by Capacity Planning (CP) to update the 
"BLD",541,1,5,0)
'Check SAGG Environment' [KMPS SAGG STATUS] option after the installation
"BLD",541,1,6,0)
of Kernel patch XU*8*268.
"BLD",541,1,7,0)
 
"BLD",541,1,8,0)
NOTE: Kernel patch XU*8*268 must be installed BEFORE installation of this
"BLD",541,1,9,0)
      patch.
"BLD",541,1,10,0)
 
"BLD",541,1,11,0)
All DSM, Cache for Windows NT and Cache for OpenVMS sites are instructed 
"BLD",541,1,12,0)
to install this patch after the installation of Kernel patch XU*8*268.
"BLD",541,1,13,0)
 
"BLD",541,1,14,0)
This patch will allow the 'Check SAGG Environment' option to properly 
"BLD",541,1,15,0)
display the current patches that are installed and required at the 
"BLD",541,1,16,0)
site.
"BLD",541,1,17,0)
 
"BLD",541,1,18,0)
This patch will also change the way SAGG obtains the M version for DSM 
"BLD",541,1,19,0)
sites.
"BLD",541,4,0)
^9.64PA^^
"BLD",541,"KRN",0)
^9.67PA^8989.52^18
"BLD",541,"KRN",.4,0)
.4
"BLD",541,"KRN",.401,0)
.401
"BLD",541,"KRN",.402,0)
.402
"BLD",541,"KRN",.403,0)
.403
"BLD",541,"KRN",.5,0)
.5
"BLD",541,"KRN",.84,0)
.84
"BLD",541,"KRN",3.6,0)
3.6
"BLD",541,"KRN",3.8,0)
3.8
"BLD",541,"KRN",9.2,0)
9.2
"BLD",541,"KRN",9.8,0)
9.8
"BLD",541,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",541,"KRN",9.8,"NM",1,0)
KMPSUTL^^0^B96161768
"BLD",541,"KRN",9.8,"NM",2,0)
KMPSLK^^0^B33156819
"BLD",541,"KRN",9.8,"NM",3,0)
KMPSUTL1^^0^B19706003
"BLD",541,"KRN",9.8,"NM",4,0)
KMPSGE^^0^B49068916
"BLD",541,"KRN",9.8,"NM","B","KMPSGE",4)

"BLD",541,"KRN",9.8,"NM","B","KMPSLK",2)

"BLD",541,"KRN",9.8,"NM","B","KMPSUTL",1)

"BLD",541,"KRN",9.8,"NM","B","KMPSUTL1",3)

"BLD",541,"KRN",19,0)
19
"BLD",541,"KRN",19.1,0)
19.1
"BLD",541,"KRN",101,0)
101
"BLD",541,"KRN",409.61,0)
409.61
"BLD",541,"KRN",771,0)
771
"BLD",541,"KRN",8989.51,0)
8989.51
"BLD",541,"KRN",8989.52,0)
8989.52
"BLD",541,"KRN",8994,0)
8994
"BLD",541,"KRN","B",.4,.4)

"BLD",541,"KRN","B",.401,.401)

"BLD",541,"KRN","B",.402,.402)

"BLD",541,"KRN","B",.403,.403)

"BLD",541,"KRN","B",.5,.5)

"BLD",541,"KRN","B",.84,.84)

"BLD",541,"KRN","B",3.6,3.6)

"BLD",541,"KRN","B",3.8,3.8)

"BLD",541,"KRN","B",9.2,9.2)

"BLD",541,"KRN","B",9.8,9.8)

"BLD",541,"KRN","B",19,19)

"BLD",541,"KRN","B",19.1,19.1)

"BLD",541,"KRN","B",101,101)

"BLD",541,"KRN","B",409.61,409.61)

"BLD",541,"KRN","B",771,771)

"BLD",541,"KRN","B",8989.51,8989.51)

"BLD",541,"KRN","B",8989.52,8989.52)

"BLD",541,"KRN","B",8994,8994)

"BLD",541,"QUES",0)
^9.62^^
"BLD",541,"REQB",0)
^9.611^2^2
"BLD",541,"REQB",1,0)
KMPS*1.8*2^2
"BLD",541,"REQB",2,0)
XU*8.0*197^2
"BLD",541,"REQB","B","KMPS*1.8*2",1)

"BLD",541,"REQB","B","XU*8.0*197",2)

"MBREQ")
0
"PKG",347,-1)
1^1
"PKG",347,0)
SAGG PROJECT^KMPS^SAGG (Statistical Analysis of Global Growth) Project
"PKG",347,20,0)
^9.402P^^
"PKG",347,22,0)
^9.49I^1^1
"PKG",347,22,1,0)
1.8^2980722^2980427^576
"PKG",347,22,1,"PAH",1,0)
3^3040726^576
"PKG",347,22,1,"PAH",1,1,0)
^^19^19^3040726
"PKG",347,22,1,"PAH",1,1,1,0)
See patch KMPS*1.8*3 in the National Patch Module on FORUM for complete 
"PKG",347,22,1,"PAH",1,1,2,0)
information on this patch.
"PKG",347,22,1,"PAH",1,1,3,0)
 
"PKG",347,22,1,"PAH",1,1,4,0)
This patch is being released by Capacity Planning (CP) to update the 
"PKG",347,22,1,"PAH",1,1,5,0)
'Check SAGG Environment' [KMPS SAGG STATUS] option after the installation
"PKG",347,22,1,"PAH",1,1,6,0)
of Kernel patch XU*8*268.
"PKG",347,22,1,"PAH",1,1,7,0)
 
"PKG",347,22,1,"PAH",1,1,8,0)
NOTE: Kernel patch XU*8*268 must be installed BEFORE installation of this
"PKG",347,22,1,"PAH",1,1,9,0)
      patch.
"PKG",347,22,1,"PAH",1,1,10,0)
 
"PKG",347,22,1,"PAH",1,1,11,0)
All DSM, Cache for Windows NT and Cache for OpenVMS sites are instructed 
"PKG",347,22,1,"PAH",1,1,12,0)
to install this patch after the installation of Kernel patch XU*8*268.
"PKG",347,22,1,"PAH",1,1,13,0)
 
"PKG",347,22,1,"PAH",1,1,14,0)
This patch will allow the 'Check SAGG Environment' option to properly 
"PKG",347,22,1,"PAH",1,1,15,0)
display the current patches that are installed and required at the 
"PKG",347,22,1,"PAH",1,1,16,0)
site.
"PKG",347,22,1,"PAH",1,1,17,0)
 
"PKG",347,22,1,"PAH",1,1,18,0)
This patch will also change the way SAGG obtains the M version for DSM 
"PKG",347,22,1,"PAH",1,1,19,0)
sites.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","KMPSGE")
0^4^B49068916
"RTN","KMPSGE",1,0)
KMPSGE ;OAK/KAK - Master Routine ;27 AUG 97 1:12 pm
"RTN","KMPSGE",2,0)
 ;;1.8;SAGG PROJECT;**1,2,3**;Jul 26, 2004
"RTN","KMPSGE",3,0)
 ;
"RTN","KMPSGE",4,0)
EN ;-- this routine can only be run as a TaskMan background job
"RTN","KMPSGE",5,0)
 ;
"RTN","KMPSGE",6,0)
 Q:'$D(ZTQUEUED)
"RTN","KMPSGE",7,0)
 ;
"RTN","KMPSGE",8,0)
 N CNT,COMPDT,HANG,KMPSVOLS,LOC,MAXJOB,MGR,NOWDT,OS
"RTN","KMPSGE",9,0)
 N PROD,QUIT,SESSNUM,SITENUM,TEMP,TEXT,UCI,UCIVOL,VOL,X
"RTN","KMPSGE",10,0)
 ;
"RTN","KMPSGE",11,0)
 ; maximum number of consecutively running jobs
"RTN","KMPSGE",12,0)
 S MAXJOB=6
"RTN","KMPSGE",13,0)
 ; hang time for LOOP and WAIT code
"RTN","KMPSGE",14,0)
 S HANG=300
"RTN","KMPSGE",15,0)
 ;
"RTN","KMPSGE",16,0)
 S SESSNUM=+$H,U="^",SITENUM=$P($$SITE^VASITE(),U,3)
"RTN","KMPSGE",17,0)
 ;
"RTN","KMPSGE",18,0)
 S NOWDT=$$NOW^XLFDT
"RTN","KMPSGE",19,0)
 ;
"RTN","KMPSGE",20,0)
 S OS=$$MPLTF^KMPSUTL1
"RTN","KMPSGE",21,0)
 I OS="UNK" D  Q
"RTN","KMPSGE",22,0)
 .S TEXT(1)="   SAGG Project for this M platform is NOT implemented !"
"RTN","KMPSGE",23,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",24,0)
 ;
"RTN","KMPSGE",25,0)
 S MGR=^%ZOSF("MGR"),PROD=$P(^%ZOSF("PROD"),",")
"RTN","KMPSGE",26,0)
 S PROD=$S($P(^KMPS(8970.1,1,0),U,3)="":PROD,1:$P(^(0),U,3))
"RTN","KMPSGE",27,0)
 S LOC=$P(^KMPS(8970.1,1,0),U,2)
"RTN","KMPSGE",28,0)
 ;
"RTN","KMPSGE",29,0)
 L +^XTMP("KMPS")
"RTN","KMPSGE",30,0)
 S ^XTMP("KMPS",0)=$$FMADD^XLFDT($$DT^XLFDT,14)_U_NOWDT_U_"SAGG data"
"RTN","KMPSGE",31,0)
 K ^XTMP("KMPS",SITENUM),^XTMP("KMPS","ERROR")
"RTN","KMPSGE",32,0)
 K ^XTMP("KMPS","START"),^XTMP("KMPS","STOP")
"RTN","KMPSGE",33,0)
 ;
"RTN","KMPSGE",34,0)
 ; routine KMPSUTL will always be updated with patch release
"RTN","KMPSGE",35,0)
 S X="KMPSUTL"
"RTN","KMPSGE",36,0)
 X "ZL @X S PTCHINFO=$T(+2)"
"RTN","KMPSGE",37,0)
 S PTCHINFO=$P(PTCHINFO,";",3)_" "_$P(PTCHINFO,";",5)
"RTN","KMPSGE",38,0)
 ; session number^M platform^SAGG version_" "_patch^start date-time^
"RTN","KMPSGE",39,0)
 ;     -> completed date-time will be set in $$PACK
"RTN","KMPSGE",40,0)
 S ^XTMP("KMPS",SITENUM,0)=SESSNUM_U_OS_U_PTCHINFO_U_NOWDT_U
"RTN","KMPSGE",41,0)
 S X="ERR1^KMPSGE",@^%ZOSF("TRAP")
"RTN","KMPSGE",42,0)
 S TEMP=SITENUM_U_SESSNUM_U_LOC_U_NOWDT_U_PROD
"RTN","KMPSGE",43,0)
 ;
"RTN","KMPSGE",44,0)
 S (CNT,VOL)=0
"RTN","KMPSGE",45,0)
 F  S VOL=$O(^KMPS(8970.1,1,1,"B",VOL)) Q:VOL=""!+$G(^XTMP("KMPS","STOP"))  D
"RTN","KMPSGE",46,0)
 .N UCI,UCIDA
"RTN","KMPSGE",47,0)
 .S UCIDA=0 F  S UCIDA=$O(^KMPS(8970.1,1,1,"B",VOL,UCIDA)) Q:UCIDA=""!+$G(^XTMP("KMPS","STOP"))  D
"RTN","KMPSGE",48,0)
 ..S UCI=$P(^KMPS(8970.1,1,1,UCIDA,0),U,2)
"RTN","KMPSGE",49,0)
 ..S:UCI="" UCI=PROD S UCIVOL(UCI_","_VOL)="",KMPSVOLS(VOL)=""
"RTN","KMPSGE",50,0)
 ..D @OS
"RTN","KMPSGE",51,0)
 ..S CNT=CNT+1
"RTN","KMPSGE",52,0)
 ..I CNT=MAXJOB S CNT=$$WAIT(HANG,MAXJOB)
"RTN","KMPSGE",53,0)
 ;
"RTN","KMPSGE",54,0)
 D EN^KMPSLK(SESSNUM,SITENUM)
"RTN","KMPSGE",55,0)
 S QUIT=0
"RTN","KMPSGE",56,0)
 D LOOP(HANG,SESSNUM,OS)
"RTN","KMPSGE",57,0)
 I 'QUIT D
"RTN","KMPSGE",58,0)
 .;N RESULT,XMZSENT
"RTN","KMPSGE",59,0)
 .S RESULT=$$PACK(SESSNUM,SITENUM)
"RTN","KMPSGE",60,0)
 .S XMZSENT=+RESULT,COMPDT=$P(RESULT,U,2)
"RTN","KMPSGE",61,0)
 .S X=$$OUT^KMPSLK(NOWDT,OS,SESSNUM,SITENUM,XMZSENT,.TEXT)
"RTN","KMPSGE",62,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT,COMPDT)
"RTN","KMPSGE",63,0)
 D END^KMPSLK
"RTN","KMPSGE",64,0)
 Q
"RTN","KMPSGE",65,0)
 ;
"RTN","KMPSGE",66,0)
LOOP(HANG,SESSNUM,OS)    ;
"RTN","KMPSGE",67,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",68,0)
 ; Loop until all volume sets complete
"RTN","KMPSGE",69,0)
 ;
"RTN","KMPSGE",70,0)
 ; HANG.....  time to wait to see if all volume sets have completed
"RTN","KMPSGE",71,0)
 ; OS.......  type of operating system
"RTN","KMPSGE",72,0)
 ; SESSNUM..  +$Horolog number of session
"RTN","KMPSGE",73,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",74,0)
 N GBL,UCIVOL1
"RTN","KMPSGE",75,0)
 ;
"RTN","KMPSGE",76,0)
 F  Q:'$D(^XTMP("KMPS","START"))!+$G(^XTMP("KMPS","STOP"))  H HANG I (+$H>(SESSNUM+3)) D TOOLNG Q
"RTN","KMPSGE",77,0)
 ;
"RTN","KMPSGE",78,0)
 Q:QUIT
"RTN","KMPSGE",79,0)
 ;
"RTN","KMPSGE",80,0)
 I $D(^XTMP("KMPS","ERROR")) D  Q
"RTN","KMPSGE",81,0)
 .N J,JEND,OUT,TEXT,VOL
"RTN","KMPSGE",82,0)
 .S QUIT=1
"RTN","KMPSGE",83,0)
 .S TEXT(1)=" The SAGG Project has recorded an error on volume set(s):"
"RTN","KMPSGE",84,0)
 .S OUT=0,VOL="",JEND=$S(OS="CVMS":2,OS="CWINNT":4,1:5)
"RTN","KMPSGE",85,0)
 .F I=3:1 Q:OUT  D
"RTN","KMPSGE",86,0)
 ..S TEXT(I)="      "
"RTN","KMPSGE",87,0)
 ..F J=1:1:JEND S VOL=$O(^XTMP("KMPS","ERROR",VOL)) S:VOL="" OUT=1 Q:VOL=""  S TEXT(I)=TEXT(I)_VOL_"   "
"RTN","KMPSGE",88,0)
 .S (TEXT(2),TEXT(I))=""
"RTN","KMPSGE",89,0)
 .S TEXT(I+1)=" See system error log for more details."
"RTN","KMPSGE",90,0)
 .I OS["C" D
"RTN","KMPSGE",91,0)
 ..S TEXT(I+2)=""
"RTN","KMPSGE",92,0)
 ..S TEXT(I+3)=" Also run "_$S(OS="CVMS":"Integrity",1:"INTEGRIT")_" on the listed volume(s)."
"RTN","KMPSGE",93,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",94,0)
 ;
"RTN","KMPSGE",95,0)
 I $D(^XTMP("KMPS","STOP")) D  Q
"RTN","KMPSGE",96,0)
 .N TEXT
"RTN","KMPSGE",97,0)
 .S QUIT=1
"RTN","KMPSGE",98,0)
 .S TEXT(1)=" The SAGG Project collection routines have been STOPPED!  No report"
"RTN","KMPSGE",99,0)
 .S TEXT(2)=" has been generated."
"RTN","KMPSGE",100,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",101,0)
 ;
"RTN","KMPSGE",102,0)
 I '$D(^XTMP("KMPS",SITENUM,SESSNUM,NOWDT)) D  Q
"RTN","KMPSGE",103,0)
 .N TEXT
"RTN","KMPSGE",104,0)
 .S QUIT=1
"RTN","KMPSGE",105,0)
 .S TEXT(1)=" The SAGG Project collection routines did NOT obtain ANY global"
"RTN","KMPSGE",106,0)
 .S TEXT(2)=" information.  Please ensure that the SAGG PROJECT file is"
"RTN","KMPSGE",107,0)
 .S TEXT(3)=" properly setup.  Then use the 'One-time Option Queue' under"
"RTN","KMPSGE",108,0)
 .S TEXT(4)=" Task Manager to re-run the 'SAGG Master Background Task'"
"RTN","KMPSGE",109,0)
 .S TEXT(5)=" [KMPS SAGG REPORT] option."
"RTN","KMPSGE",110,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",111,0)
 ;
"RTN","KMPSGE",112,0)
 S GBL=""
"RTN","KMPSGE",113,0)
 F  S GBL=$O(^XTMP("KMPS",SITENUM,SESSNUM,NOWDT,GBL)) Q:GBL=""  D
"RTN","KMPSGE",114,0)
 .S UCIVOL1=""
"RTN","KMPSGE",115,0)
 .F  S UCIVOL1=$O(^XTMP("KMPS",SITENUM,SESSNUM,NOWDT,GBL,UCIVOL1)) Q:UCIVOL1=""  K UCIVOL(UCIVOL1)
"RTN","KMPSGE",116,0)
 S UCIVOL1=""
"RTN","KMPSGE",117,0)
 F  S UCIVOL1=$O(^XTMP("KMPS",SITENUM,SESSNUM," NO GLOBALS ",UCIVOL1)) Q:UCIVOL1=""  K UCIVOL(UCIVOL1)
"RTN","KMPSGE",118,0)
 ;
"RTN","KMPSGE",119,0)
 I $D(UCIVOL) D  Q
"RTN","KMPSGE",120,0)
 .N I,J,K,TEXT
"RTN","KMPSGE",121,0)
 .S QUIT=1
"RTN","KMPSGE",122,0)
 .S TEXT(1)=" The SAGG Project collection routines did NOT monitor the following:",TEXT(2)=""
"RTN","KMPSGE",123,0)
 .S K=0,UCIVOL1=""
"RTN","KMPSGE",124,0)
 .F I=3:1 Q:K  D
"RTN","KMPSGE",125,0)
 ..S TEXT(I)="          "
"RTN","KMPSGE",126,0)
 ..F J=1:1:5 S UCIVOL1=$O(UCIVOL(UCIVOL1)) S:UCIVOL1="" K=1 Q:UCIVOL1=""  S TEXT(I)=TEXT(I)_UCIVOL1_"   "
"RTN","KMPSGE",127,0)
 .S TEXT(I)=""
"RTN","KMPSGE",128,0)
 .S TEXT(I+1)=" Please ensure that the SAGG PROJECT file is properly setup.  Then use"
"RTN","KMPSGE",129,0)
 .S TEXT(I+2)=" the 'One-time Option Queue' under Task Manager to re-run the 'SAGG"
"RTN","KMPSGE",130,0)
 .S TEXT(I+3)=" Master Background Task' [KMPS SAGG REPORT] option."
"RTN","KMPSGE",131,0)
 .D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",132,0)
 ;
"RTN","KMPSGE",133,0)
 Q
"RTN","KMPSGE",134,0)
 ;
"RTN","KMPSGE",135,0)
PACK(SESSNUM,SITENUM)       ;
"RTN","KMPSGE",136,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",137,0)
 ; PackMan ^XTMP global to KMP1-SAGG-SERVER at Albany FO
"RTN","KMPSGE",138,0)
 ;
"RTN","KMPSGE",139,0)
 ; SESSNUM..  +$Horolog number of session
"RTN","KMPSGE",140,0)
 ; SITENUM..  site number
"RTN","KMPSGE",141,0)
 ;
"RTN","KMPSGE",142,0)
 ; Return:
"RTN","KMPSGE",143,0)
 ; RETURN...  number of SAGG data message^completed date-time
"RTN","KMPSGE",144,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",145,0)
 ;
"RTN","KMPSGE",146,0)
 N COMPDT,N,NM,RETURN,X,XMSUB,XMTEXT,XMY,XMZ
"RTN","KMPSGE",147,0)
 ;
"RTN","KMPSGE",148,0)
 S U="^",N=$O(^DIC(4,"D",SITENUM,0))
"RTN","KMPSGE",149,0)
 S NM=$S($D(^DIC(4,N,0)):$P(^(0),U),1:SITENUM)
"RTN","KMPSGE",150,0)
 ;
"RTN","KMPSGE",151,0)
 S:'$D(XMDUZ) XMDUZ=.5 S:'$D(DUZ) DUZ=.5
"RTN","KMPSGE",152,0)
 K:$G(IO)="" IO
"RTN","KMPSGE",153,0)
 ;
"RTN","KMPSGE",154,0)
 ; set completed date-time
"RTN","KMPSGE",155,0)
 S COMPDT=$$NOW^XLFDT
"RTN","KMPSGE",156,0)
 S $P(^XTMP("KMPS",SITENUM,0),U,5)=COMPDT
"RTN","KMPSGE",157,0)
 ;
"RTN","KMPSGE",158,0)
 S XMSUB=NM_" (Session #"_SESSNUM_") XTMP(""KMPS"") Global"
"RTN","KMPSGE",159,0)
 I SITENUM=+SITENUM S XMTEXT="^XTMP(""KMPS"","_SITENUM_","
"RTN","KMPSGE",160,0)
 E  S XMTEXT="^XTMP(""KMPS"","""_SITENUM_""","
"RTN","KMPSGE",161,0)
 S XMY("S.KMP1-SAGG-SERVER@FO-ALBANY.MED.VA.GOV")=""
"RTN","KMPSGE",162,0)
 D ENT^XMPG
"RTN","KMPSGE",163,0)
 ;
"RTN","KMPSGE",164,0)
 S RETURN=XMZ_U_COMPDT
"RTN","KMPSGE",165,0)
 ;
"RTN","KMPSGE",166,0)
 Q RETURN
"RTN","KMPSGE",167,0)
 ;
"RTN","KMPSGE",168,0)
WAIT(HANG,MAXJOB)    ;
"RTN","KMPSGE",169,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",170,0)
 ; Wait here until less than MAXJOB volume sets are running
"RTN","KMPSGE",171,0)
 ;
"RTN","KMPSGE",172,0)
 ; HANG....  amount of time to wait
"RTN","KMPSGE",173,0)
 ; MAXJOB..  maximum number of jobs allowed to run
"RTN","KMPSGE",174,0)
 ;
"RTN","KMPSGE",175,0)
 ; Return:
"RTN","KMPSGE",176,0)
 ; RUN.....  number of currently running jobs
"RTN","KMPSGE",177,0)
 ;---------------------------------------------------------------------
"RTN","KMPSGE",178,0)
 ;
"RTN","KMPSGE",179,0)
 N RUN
"RTN","KMPSGE",180,0)
 ;
"RTN","KMPSGE",181,0)
 F  H HANG S RUN=$$RUN Q:(RUN<MAXJOB)!+$G(^XTMP("KMPS","STOP"))
"RTN","KMPSGE",182,0)
 ;
"RTN","KMPSGE",183,0)
 Q RUN
"RTN","KMPSGE",184,0)
 ;
"RTN","KMPSGE",185,0)
RUN() ;-- number of currently running jobs
"RTN","KMPSGE",186,0)
 N RUN,VOL
"RTN","KMPSGE",187,0)
 ;
"RTN","KMPSGE",188,0)
 S RUN=0,VOL=""
"RTN","KMPSGE",189,0)
 F  S VOL=$O(^XTMP("KMPS","START",VOL)) Q:VOL=""  S RUN=RUN+1
"RTN","KMPSGE",190,0)
 ;
"RTN","KMPSGE",191,0)
 Q RUN
"RTN","KMPSGE",192,0)
 ;
"RTN","KMPSGE",193,0)
TOOLNG ;-- job has been running too long
"RTN","KMPSGE",194,0)
 ;
"RTN","KMPSGE",195,0)
 N TEXT
"RTN","KMPSGE",196,0)
 ;
"RTN","KMPSGE",197,0)
 S QUIT=1
"RTN","KMPSGE",198,0)
 S TEXT(1)=" The SAGG Project collection routines have been running for more"
"RTN","KMPSGE",199,0)
 S TEXT(2)=" than 3 days.  No report has been generated."
"RTN","KMPSGE",200,0)
 D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",201,0)
 Q
"RTN","KMPSGE",202,0)
 ;
"RTN","KMPSGE",203,0)
ERR1 ;
"RTN","KMPSGE",204,0)
 S KMPSZE=$ZE,ZUZR=$ZR,X="",@^%ZOSF("TRAP")
"RTN","KMPSGE",205,0)
 D @^%ZOSF("ERRTN")
"RTN","KMPSGE",206,0)
 K TEXT
"RTN","KMPSGE",207,0)
 S TEXT(1)=" SAGG Project Error: "_KMPSZE
"RTN","KMPSGE",208,0)
 S TEXT(2)=" See system error log for more details."
"RTN","KMPSGE",209,0)
 S ^XTMP("KMPS","STOP")=""
"RTN","KMPSGE",210,0)
 D MSG^KMPSLK(NOWDT,SESSNUM,.TEXT)
"RTN","KMPSGE",211,0)
 G ^XUSCLEAN
"RTN","KMPSGE",212,0)
 ;
"RTN","KMPSGE",213,0)
DSM ;-- for DSM platform
"RTN","KMPSGE",214,0)
 J START^%ZOSVKSE:(OPTION="/ROUTINE=["_MGR_"]/UCI="_UCI_"/VOLUME="_VOL_"/DATA="""_TEMP_"""")
"RTN","KMPSGE",215,0)
 Q
"RTN","KMPSGE",216,0)
 ;
"RTN","KMPSGE",217,0)
MSM ;
"RTN","KMPSGE",218,0)
 J START^%ZOSVKSE(TEMP)[UCI,VOL]
"RTN","KMPSGE",219,0)
 Q
"RTN","KMPSGE",220,0)
 ;
"RTN","KMPSGE",221,0)
MSMV4 ;
"RTN","KMPSGE",222,0)
 N KMPSFS
"RTN","KMPSGE",223,0)
 ;
"RTN","KMPSGE",224,0)
 S KMPSFS=$E(VOL)_"S"_$E(VOL,3)
"RTN","KMPSGE",225,0)
 J START^%ZOSVKSE(TEMP)[UCI,VOL,KMPSFS]
"RTN","KMPSGE",226,0)
 Q
"RTN","KMPSGE",227,0)
 ;
"RTN","KMPSGE",228,0)
CVMS ;-- for Cache for VMS platform
"RTN","KMPSGE",229,0)
CWINNT ;-- for Cache for Windows NT platform
"RTN","KMPSGE",230,0)
 J START^%ZOSVKSE(TEMP_U_VOL)
"RTN","KMPSGE",231,0)
 Q
"RTN","KMPSLK")
0^2^B33156819
"RTN","KMPSLK",1,0)
KMPSLK ;OAK/KAK - Thru The Looking Glass ;27 AUG 97 2:07 pm
"RTN","KMPSLK",2,0)
 ;;1.8;SAGG PROJECT;**1,2,3**;Jul 26, 2004
"RTN","KMPSLK",3,0)
 ;
"RTN","KMPSLK",4,0)
EN(SESSNUM,SITENUM) ;
"RTN","KMPSLK",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",6,0)
 ; SESSNUM..  +$Horolog number of session
"RTN","KMPSLK",7,0)
 ; SITENUM..  site number
"RTN","KMPSLK",8,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",9,0)
 ;
"RTN","KMPSLK",10,0)
ZER ;-- collect zeroth node information
"RTN","KMPSLK",11,0)
 ;
"RTN","KMPSLK",12,0)
 N FNUM,GNAM
"RTN","KMPSLK",13,0)
 ;
"RTN","KMPSLK",14,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@ZER",0)=$P(^DIC(0),U)_U_$P(^DIC(0),U,4)_"^DIC(^"
"RTN","KMPSLK",15,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@ZER","TM")=$S($D(^%ZTSK(-1)):^(-1),1:^%ZTSK(0))
"RTN","KMPSLK",16,0)
 S FNUM=0 F  S FNUM=$O(^DIC(FNUM)) Q:'+FNUM  D
"RTN","KMPSLK",17,0)
 .Q:$G(^DIC(FNUM,0))=""
"RTN","KMPSLK",18,0)
 .Q:'$D(^DIC(FNUM,0,"GL"))
"RTN","KMPSLK",19,0)
 .S GNAM=$G(^DIC(FNUM,0,"GL")) Q:GNAM=""
"RTN","KMPSLK",20,0)
 .;
"RTN","KMPSLK",21,0)
 .; file# = file_name^# of entries^global_name^file_version^last id number
"RTN","KMPSLK",22,0)
 .; global_name (GNAM) has embedded '^' - no extra 'U' needed
"RTN","KMPSLK",23,0)
 .S ^XTMP("KMPS",SITENUM,SESSNUM,"@ZER",FNUM)=$P(^DIC(FNUM,0),U)_U_$P($G(@(GNAM_"0)")),U,4)_GNAM_U_$G(^DD(+$P(^DIC(FNUM,0),U,2),0,"VR"))_U_$P($G(@(GNAM_"0)")),U,3)
"RTN","KMPSLK",24,0)
 ;
"RTN","KMPSLK",25,0)
PKG ;-- collect package file information
"RTN","KMPSLK",26,0)
 ;
"RTN","KMPSLK",27,0)
 N PKNUM
"RTN","KMPSLK",28,0)
 ;
"RTN","KMPSLK",29,0)
 S PKNUM=0
"RTN","KMPSLK",30,0)
 F  S PKNUM=$O(^DIC(9.4,PKNUM)) Q:'+PKNUM  I $D(^DIC(9.4,PKNUM,0)) S KMPSD=$P($G(^DIC(9.4,PKNUM,0)),U,2) D
"RTN","KMPSLK",31,0)
 .I $E(KMPSD)="A" I ($A($E(KMPSD,2))>64)&($A($E(KMPSD,2))<88) I (($A($E(KMPSD,3))>64)&($A($E(KMPSD,3))<89)) Q
"RTN","KMPSLK",32,0)
 .S KMPSV=0,(KMPSVL,KMPSD)=""
"RTN","KMPSLK",33,0)
 .F  S KMPSV=$O(^DIC(9.4,PKNUM,22,KMPSV)) Q:'+KMPSV  S KMPSVL=KMPSV
"RTN","KMPSLK",34,0)
 .I +KMPSVL S KMPSV=$G(^DIC(9.4,PKNUM,22,KMPSVL,0)),KMPSD=$P(KMPSV,U,3),KMPSV=$P(KMPSV,U)
"RTN","KMPSLK",35,0)
 .;
"RTN","KMPSLK",36,0)
 .; pkg_name = pkg_prefix^current version^last version^install date
"RTN","KMPSLK",37,0)
 .S ^XTMP("KMPS",SITENUM,SESSNUM,"@PKG",$P(^DIC(9.4,PKNUM,0),U))=$P($G(^DIC(9.4,PKNUM,0)),U,2)_U_$G(^("VERSION"))_U_KMPSV_U_KMPSD
"RTN","KMPSLK",38,0)
 ;
"RTN","KMPSLK",39,0)
SYS ;  Collect volume set (@VOL) and system (@SYS) information
"RTN","KMPSLK",40,0)
 ;
"RTN","KMPSLK",41,0)
 D EN^%ZOSVKSD(SITENUM,SESSNUM,.KMPSVOLS,OS),@OS
"RTN","KMPSLK",42,0)
 ;
"RTN","KMPSLK",43,0)
 K KMPSD,KMPSNM,KMPSV,KMPSVL
"RTN","KMPSLK",44,0)
 Q
"RTN","KMPSLK",45,0)
 ;
"RTN","KMPSLK",46,0)
DSM ;-- for DSM platform
"RTN","KMPSLK",47,0)
 ;
"RTN","KMPSLK",48,0)
 N CLSTRMEM,CSID,CSIDARRY,NODEARRY,NODENM,X
"RTN","KMPSLK",49,0)
 ;
"RTN","KMPSLK",50,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS")=$ZV_U_$ZC(%GETSYI,"VERSION")
"RTN","KMPSLK",51,0)
 S CLSTRMEM=$ZC(%GETSYI,"CLUSTER_MEMBER")
"RTN","KMPSLK",52,0)
 I 'CLSTRMEM D  Q
"RTN","KMPSLK",53,0)
 .S NODENM=$ZC(%GETSYI,"NODENAME")
"RTN","KMPSLK",54,0)
 .S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS",NODENM)=$ZC(%GETSYI,"HW_NAME")_U_$ZC(%GETSYI,"ACTIVECPU_CNT")
"RTN","KMPSLK",55,0)
 D CLSTR
"RTN","KMPSLK",56,0)
 S NODENM=""
"RTN","KMPSLK",57,0)
 F  S NODENM=$O(NODEARRY(NODENM)) Q:NODENM=""  D
"RTN","KMPSLK",58,0)
 .S CSID=NODEARRY(NODENM)
"RTN","KMPSLK",59,0)
 .S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS",NODENM)=$ZC(%GETSYI,"HW_NAME",CSID)_U_$ZC(%GETSYI,"ACTIVECPU_CNT",CSID)
"RTN","KMPSLK",60,0)
 S X="ERR1^KMPSGE",@^%ZOSF("TRAP")
"RTN","KMPSLK",61,0)
 Q
"RTN","KMPSLK",62,0)
 ;
"RTN","KMPSLK",63,0)
CLSTR ;  Call $GETSYI using wild card to get CSID and NODENAME for all nodes
"RTN","KMPSLK",64,0)
 ;
"RTN","KMPSLK",65,0)
 S X="ERRCLU^KMPSLK",@^%ZOSF("TRAP"),$ZE=""
"RTN","KMPSLK",66,0)
 K CSIDARRY,NODEARRY
"RTN","KMPSLK",67,0)
 S CSIDARRY($ZC(%GETSYI,"NODE_CSID",-1))=""
"RTN","KMPSLK",68,0)
 F  S CSIDARRY($ZC(%GETSYI,"NODE_CSID",""))=""
"RTN","KMPSLK",69,0)
ERRCLU I $ZE'["NOMORENODE" ZQ
"RTN","KMPSLK",70,0)
 S CSID=""
"RTN","KMPSLK",71,0)
 F  S CSID=$O(CSIDARRY(CSID)) Q:CSID=""  S NODEARRY($ZC(%GETSYI,"NODENAME",CSID))=CSID
"RTN","KMPSLK",72,0)
 Q
"RTN","KMPSLK",73,0)
 ;
"RTN","KMPSLK",74,0)
MSM ;
"RTN","KMPSLK",75,0)
MSMV4 ;
"RTN","KMPSLK",76,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS")=$ZV_U_$ZOS(4)
"RTN","KMPSLK",77,0)
 Q
"RTN","KMPSLK",78,0)
 ;
"RTN","KMPSLK",79,0)
CVMS ;-- for Cache for VMS platform
"RTN","KMPSLK",80,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS")=$ZV_U
"RTN","KMPSLK",81,0)
 Q
"RTN","KMPSLK",82,0)
 ;
"RTN","KMPSLK",83,0)
CWINNT ;-- for Cache for NT platform
"RTN","KMPSLK",84,0)
 S ^XTMP("KMPS",SITENUM,SESSNUM,"@SYS")=$ZV_U_$S($ZU(100)=0:"Windows NT",$ZU(100)=1:"Windows 95",1:$ZU(100))
"RTN","KMPSLK",85,0)
 Q
"RTN","KMPSLK",86,0)
 ;        
"RTN","KMPSLK",87,0)
OUT(NOWDT,OS,SESSNUM,SITENUM,XMZSENT,TEXT)     ;
"RTN","KMPSLK",88,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",89,0)
 ;   Create 'successful' end-game message text
"RTN","KMPSLK",90,0)
 ; NOWDT....   FM date and time that SAGG started
"RTN","KMPSLK",91,0)
 ; OS.......   type of operating system
"RTN","KMPSLK",92,0)
 ; SESSNUM..   +$Horolog number of session
"RTN","KMPSLK",93,0)
 ; SITENUM..   site number
"RTN","KMPSLK",94,0)
 ; XMZSENT..   mailman message number created by SAGG
"RTN","KMPSLK",95,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",96,0)
 ;
"RTN","KMPSLK",97,0)
 N DOW,GBL,I,J,JEND,UCIVOL,VOLS,X
"RTN","KMPSLK",98,0)
 ;
"RTN","KMPSLK",99,0)
 ; check to see if SAGG not started over weekend (Fri - Sun)
"RTN","KMPSLK",100,0)
 S DOW=$$DOW^XLFDT(NOWDT,1)
"RTN","KMPSLK",101,0)
 I (DOW>0)&(DOW<5) D
"RTN","KMPSLK",102,0)
 .S TEXT(1)=" *** It is STRONGLY recommended that the 'SAGG Master Background Task' ***"
"RTN","KMPSLK",103,0)
 .S TEXT(2)=" *** [KMPS SAGG REPORT] be rescheduled to run over the weekend hours.  ***"
"RTN","KMPSLK",104,0)
 .S TEXT(3)=""
"RTN","KMPSLK",105,0)
 ;
"RTN","KMPSLK",106,0)
 S TEXT(4)=" The SAGG Project collection routines monitored the following:"
"RTN","KMPSLK",107,0)
 S TEXT(5)=""
"RTN","KMPSLK",108,0)
 K VOLS
"RTN","KMPSLK",109,0)
 S GBL=""
"RTN","KMPSLK",110,0)
 F  S GBL=$O(^XTMP("KMPS",SITENUM,SESSNUM,NOWDT,GBL)) Q:GBL=""  D
"RTN","KMPSLK",111,0)
 .S UCIVOL=""
"RTN","KMPSLK",112,0)
 .F  S UCIVOL=$O(^XTMP("KMPS",SITENUM,SESSNUM,NOWDT,GBL,UCIVOL)) Q:UCIVOL=""  S VOLS(UCIVOL)=""
"RTN","KMPSLK",113,0)
 S X=0,UCIVOL="",JEND=$S(OS="CVMS":2,OS="CWINNT":4,1:5)
"RTN","KMPSLK",114,0)
 F I=6:1 Q:X  D
"RTN","KMPSLK",115,0)
 .S TEXT(I)="          "
"RTN","KMPSLK",116,0)
 .F J=1:1:JEND S UCIVOL=$O(VOLS(UCIVOL)) S:UCIVOL="" X=1 Q:UCIVOL=""  S TEXT(I)=TEXT(I)_UCIVOL_"   "
"RTN","KMPSLK",117,0)
 S TEXT(I)=""
"RTN","KMPSLK",118,0)
 S TEXT(I+1)=" Please ensure that this list concurs with your present volume set"
"RTN","KMPSLK",119,0)
 S TEXT(I+2)=" configuration.",TEXT(I+3)=""
"RTN","KMPSLK",120,0)
 S TEXT(I+4)=" A local e-mail message #"_XMZSENT_" was created by the collection"
"RTN","KMPSLK",121,0)
 S TEXT(I+5)=" routines.  Check the FO-ALBANY.MED.VA.GOV NetMail Queue to ensure"
"RTN","KMPSLK",122,0)
 S TEXT(I+6)=" transmission delivery."
"RTN","KMPSLK",123,0)
 ;
"RTN","KMPSLK",124,0)
 Q ""
"RTN","KMPSLK",125,0)
 ;
"RTN","KMPSLK",126,0)
MSG(STRTDT,SESSNUM,TEXT,COMPDT)       ;-- send e-mail message to local KMP-CAPMAN mailgroup
"RTN","KMPSLK",127,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",128,0)
 ; Send e-mail message to local KMP-CAPMAN mailgroup
"RTN","KMPSLK",129,0)
 ;
"RTN","KMPSLK",130,0)
 ; STRTDT...  SAGG start date and time
"RTN","KMPSLK",131,0)
 ; SESSNUM..  +$Horolog number of session
"RTN","KMPSLK",132,0)
 ; TEXT.....  text of message
"RTN","KMPSLK",133,0)
 ; COMPDT...  (optional) SAGG completion date and time
"RTN","KMPSLK",134,0)
 ;---------------------------------------------------------------------
"RTN","KMPSLK",135,0)
 N XMSUB,XMTEXT,XMY
"RTN","KMPSLK",136,0)
 ;
"RTN","KMPSLK",137,0)
 S COMPDT=+$G(COMPDT)
"RTN","KMPSLK",138,0)
 ;
"RTN","KMPSLK",139,0)
 S:'$D(XMDUZ) XMDUZ=.5
"RTN","KMPSLK",140,0)
 S:'$D(DUZ) DUZ=.5 S U="^"
"RTN","KMPSLK",141,0)
 ;
"RTN","KMPSLK",142,0)
 S TEXT(.1)=" SAGG Session: "_SESSNUM
"RTN","KMPSLK",143,0)
 S TEXT(.2)=" Started:      "_$$FMTE^XLFDT(STRTDT,"P")_" ("_$$DOW^XLFDT(STRTDT)_")"
"RTN","KMPSLK",144,0)
 S:+COMPDT TEXT(.3)=" Completed:    "_$$FMTE^XLFDT(COMPDT,"P")_" ("_$$DOW^XLFDT(COMPDT)_")"
"RTN","KMPSLK",145,0)
 S TEXT(.4)=""
"RTN","KMPSLK",146,0)
 S XMSUB="SAGG Project Message (Session #"_SESSNUM_")",XMTEXT="TEXT("
"RTN","KMPSLK",147,0)
 I $D(^XMB(3.8,"B","KMP-CAPMAN")) S XMY("G.KMP-CAPMAN")=""
"RTN","KMPSLK",148,0)
 D:$D(XMY) ^XMD
"RTN","KMPSLK",149,0)
 Q
"RTN","KMPSLK",150,0)
 ;
"RTN","KMPSLK",151,0)
END ;
"RTN","KMPSLK",152,0)
 K ^XTMP("KMPS",SITENUM),^XTMP("KMPS","ERROR")
"RTN","KMPSLK",153,0)
 K ^XTMP("KMPS","START"),^XTMP("KMPS","STOP"),^XTMP("KMPS",0)
"RTN","KMPSLK",154,0)
 K X,XMDUZ
"RTN","KMPSLK",155,0)
 S ZTREQ="@"
"RTN","KMPSLK",156,0)
 L -^XTMP("KMPS")
"RTN","KMPSLK",157,0)
 Q
"RTN","KMPSUTL")
0^1^B96161768
"RTN","KMPSUTL",1,0)
KMPSUTL ;OAK/KAK - SAGG Utilities ;01 SEP 97 11:15 am
"RTN","KMPSUTL",2,0)
 ;;1.8;SAGG PROJECT;**1,2,3**;Jul 26, 2004
"RTN","KMPSUTL",3,0)
 ;
"RTN","KMPSUTL",4,0)
STAT() ;-- check SAGG environment
"RTN","KMPSUTL",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL",6,0)
 ;
"RTN","KMPSUTL",7,0)
 N ACTV,CURSTAT,DASH,DOW,DX,DY,FREQ,HORDT,LOC,MSG,NEED,OPT,OUT,PKGNMSPC
"RTN","KMPSUTL",8,0)
 N PLTFRM,POP,PROD,PTCH,RTN,SESSNUM,SITNUM,STAT,USER,VOL,VOLDA,X,Y
"RTN","KMPSUTL",9,0)
 ;
"RTN","KMPSUTL",10,0)
 D HOME^%ZIS
"RTN","KMPSUTL",11,0)
 W @IOF
"RTN","KMPSUTL",12,0)
 S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPSUTL",13,0)
 W ?31,"SAGG Environment",!
"RTN","KMPSUTL",14,0)
 S X="Version "_$P($T(+2),";",3)
"RTN","KMPSUTL",15,0)
 W ?(80-$L(X)\2),X,!!
"RTN","KMPSUTL",16,0)
 S (MSG,OUT)=0,SITNUM=$P($$SITE^VASITE(),U,3)
"RTN","KMPSUTL",17,0)
 S OPT="KMPS SAGG REPORT",STAT=$$TSKSTAT^KMPSUTL1(OPT),CURSTAT=$$CURSTAT(STAT)
"RTN","KMPSUTL",18,0)
 W ?5,"Current Status:",?35,$P(CURSTAT,U,2),!!
"RTN","KMPSUTL",19,0)
 I $D(^XTMP("KMPS",SITNUM,0)) D
"RTN","KMPSUTL",20,0)
 .S SESSNUM=^XTMP("KMPS",SITNUM,0),STRTDT=$P(SESSNUM,U,4),SESSNUM=+SESSNUM
"RTN","KMPSUTL",21,0)
 .W ?5,"Session Number:",?35,SESSNUM,!
"RTN","KMPSUTL",22,0)
 .S DOW=$$DOW^XLFDT(STRTDT)
"RTN","KMPSUTL",23,0)
 .W ?5,"Start Date:",?35,$$FMTE^XLFDT(STRTDT,"P")," (",DOW,")",!!
"RTN","KMPSUTL",24,0)
 ;
"RTN","KMPSUTL",25,0)
 W ?5,"SAGG Master Background Task:  ",OPT
"RTN","KMPSUTL",26,0)
 ; missing
"RTN","KMPSUTL",27,0)
 I +STAT=3 W " option is missing !",*7,!
"RTN","KMPSUTL",28,0)
 E  D
"RTN","KMPSUTL",29,0)
 .W !,?5,"Queued to run at:",?35
"RTN","KMPSUTL",30,0)
 .; not scheduled
"RTN","KMPSUTL",31,0)
 .I +STAT=1 W $P(STAT,U,2)
"RTN","KMPSUTL",32,0)
 .E  W $P(STAT,U,3)
"RTN","KMPSUTL",33,0)
 .W !,?5,"Rescheduling frequency:",?35
"RTN","KMPSUTL",34,0)
 .W $P(STAT,U,5)
"RTN","KMPSUTL",35,0)
 .; check to see if SAGG is not running on the weekend (Fri-Sun)
"RTN","KMPSUTL",36,0)
 .S DOW=$P(STAT,U,4),FREQ=$P(STAT,U,6)
"RTN","KMPSUTL",37,0)
 .I (DOW<0)!((DOW>0)&(DOW<5))!(FREQ<0)!(FREQ'="28D") D
"RTN","KMPSUTL",38,0)
 ..S MSG=1
"RTN","KMPSUTL",39,0)
 ..W !,?5,"***It is STRONGLY recommended that this job be rescheduled to run",!
"RTN","KMPSUTL",40,0)
 ..W ?8,"over the weekend every 28 days.***",!
"RTN","KMPSUTL",41,0)
 .W !,?5,"Task ID:",?35,$P(STAT,U,7)
"RTN","KMPSUTL",42,0)
 .W !,?5,"Queued by:",?35,$P(STAT,U,8),!
"RTN","KMPSUTL",43,0)
 .I $P(STAT,U,9)="NOT ACTIVE" D
"RTN","KMPSUTL",44,0)
 ..S MSG=1
"RTN","KMPSUTL",45,0)
 ..W ?5,"***The user that originally queued this task is no longer active.",!
"RTN","KMPSUTL",46,0)
 ..W ?8,"Therefore the 'SAGG Master Background Task' [KMPS SAGG REPORT]",!
"RTN","KMPSUTL",47,0)
 ..W ?8,"must be scheduled again by an active user.***",!
"RTN","KMPSUTL",48,0)
 ;
"RTN","KMPSUTL",49,0)
 W !,?5,"Temporary collection global",!,?7,"^XTMP(""KMPS""):"
"RTN","KMPSUTL",50,0)
 W ?35,$S($D(^XTMP("KMPS",SITNUM,0)):"DATA PRESENT",1:"EMPTY"),!
"RTN","KMPSUTL",51,0)
 S PLTFRM=$$MPLTF^KMPSUTL1,PROD=$P(^%ZOSF("PROD"),",")
"RTN","KMPSUTL",52,0)
 I PLTFRM="DSM" D
"RTN","KMPSUTL",53,0)
 .S LOC=$G(^KMPS(8970.1,1,0))
"RTN","KMPSUTL",54,0)
 .W ?7,"Global Location:"
"RTN","KMPSUTL",55,0)
 .W ?35,$S($P(LOC,U,3)="":PROD,1:$P(LOC,U,3))
"RTN","KMPSUTL",56,0)
 .W ",",$S($P(LOC,U,2)="":"UNKNOWN",1:$P(LOC,U,2)),!
"RTN","KMPSUTL",57,0)
 W !
"RTN","KMPSUTL",58,0)
 ;
"RTN","KMPSUTL",59,0)
 ; show members that will receive SAGG messages
"RTN","KMPSUTL",60,0)
 D MAILGRP
"RTN","KMPSUTL",61,0)
 ;
"RTN","KMPSUTL",62,0)
 Q:$$CONT^KMPSUTL1(1)
"RTN","KMPSUTL",63,0)
 ;
"RTN","KMPSUTL",64,0)
 W @IOF
"RTN","KMPSUTL",65,0)
 S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPSUTL",66,0)
 W ?27,"SAGG Environment (cont.)",!!
"RTN","KMPSUTL",67,0)
 W ?5,"SAGG Project collection routines will monitor the following:",!!,?7
"RTN","KMPSUTL",68,0)
 S DASH=0,VOL=""
"RTN","KMPSUTL",69,0)
 F  S VOL=$O(^KMPS(8970.1,1,1,"B",VOL)) Q:VOL=""  D
"RTN","KMPSUTL",70,0)
 .S VOLDA=$O(^KMPS(8970.1,1,1,"B",VOL,0))
"RTN","KMPSUTL",71,0)
 .S LOC=$P(^KMPS(8970.1,1,1,VOLDA,0),U,2)
"RTN","KMPSUTL",72,0)
 .S:LOC="" LOC=PROD
"RTN","KMPSUTL",73,0)
 .W:DASH " - "
"RTN","KMPSUTL",74,0)
 .W $S(PLTFRM="DSM":LOC_",",1:""),VOL
"RTN","KMPSUTL",75,0)
 .S DASH=1
"RTN","KMPSUTL",76,0)
 .I $X>60 S DASH=0 W !,?7
"RTN","KMPSUTL",77,0)
 W !!
"RTN","KMPSUTL",78,0)
 ;
"RTN","KMPSUTL",79,0)
 I $Y>(IOSL-3) Q:$$CONT^KMPSUTL1(1)  W @IOF S (DX,DY)=0 X ^%ZOSF("XY") W ?27,"SAGG Environment (cont.)",!!
"RTN","KMPSUTL",80,0)
 ;
"RTN","KMPSUTL",81,0)
 I '+CURSTAT&$D(^XTMP("KMPS","START")) D  W !!
"RTN","KMPSUTL",82,0)
 .W ?5,"SAGG Project collection routines are still running on:",!!,?7
"RTN","KMPSUTL",83,0)
 .S DASH=0,VOL=""
"RTN","KMPSUTL",84,0)
 .F  S VOL=$O(^XTMP("KMPS","START",VOL)) Q:VOL=""  D
"RTN","KMPSUTL",85,0)
 ..W:DASH " - "
"RTN","KMPSUTL",86,0)
 ..W VOL
"RTN","KMPSUTL",87,0)
 ..S DASH=1
"RTN","KMPSUTL",88,0)
 ..I $X>60 S DASH=0 W !,?7
"RTN","KMPSUTL",89,0)
 ;
"RTN","KMPSUTL",90,0)
 ; check for any reported errors
"RTN","KMPSUTL",91,0)
 I $D(^XTMP("KMPS","ERROR")) D  W !!
"RTN","KMPSUTL",92,0)
 .W ?5,"SAGG Project collection routines have recorded an error on",!
"RTN","KMPSUTL",93,0)
 .W ?5,"the following Volume Set(s):",!!,?7
"RTN","KMPSUTL",94,0)
 .S DASH=0,VOL=""
"RTN","KMPSUTL",95,0)
 .F  S VOL=$O(^XTMP("KMPS","ERROR",VOL)) Q:VOL=""  D
"RTN","KMPSUTL",96,0)
 ..W:DASH " - "
"RTN","KMPSUTL",97,0)
 ..W VOL
"RTN","KMPSUTL",98,0)
 ..S DASH=1
"RTN","KMPSUTL",99,0)
 ..I $X>60 S DASH=0 W !,?7
"RTN","KMPSUTL",100,0)
 ;
"RTN","KMPSUTL",101,0)
 ; check to see if SAGG was told to stop or has reported errors
"RTN","KMPSUTL",102,0)
 I +CURSTAT>3 Q:$$CONT^KMPSUTL1(1)  D
"RTN","KMPSUTL",103,0)
 .W @IOF
"RTN","KMPSUTL",104,0)
 .S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPSUTL",105,0)
 .W ?27,"SAGG Environment (cont.)",!!!!
"RTN","KMPSUTL",106,0)
 .I +CURSTAT=4 D
"RTN","KMPSUTL",107,0)
 ..W ?5,"SAGG has been running over a day. Use ^%S",$S(PLTFRM="DSM":"Y",1:"S")," and check to see if",!
"RTN","KMPSUTL",108,0)
 ..W ?5,"the KMPSGE routine is still running.",!!
"RTN","KMPSUTL",109,0)
 .W ?5,"NOTE:  Any incomplete data that has been collected will be",!
"RTN","KMPSUTL",110,0)
 .W ?12,"deleted automatically the next time that SAGG runs.",!
"RTN","KMPSUTL",111,0)
 .I $D(^XTMP("KMPS","ERROR")) W ?12,"First determine the cause of any volume set errors.",!
"RTN","KMPSUTL",112,0)
 .W ?12,"Reschedule SAGG to collect global data if necessary.",!
"RTN","KMPSUTL",113,0)
 ;
"RTN","KMPSUTL",114,0)
 Q:$$CONT^KMPSUTL1(1)
"RTN","KMPSUTL",115,0)
 ;
"RTN","KMPSUTL",116,0)
 W @IOF
"RTN","KMPSUTL",117,0)
 S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPSUTL",118,0)
 W ?27,"SAGG Environment (cont.)",!,?32,"Patch Status",!!
"RTN","KMPSUTL",119,0)
 D VERPTCH^KMPSUTL1("S",.PTCH)
"RTN","KMPSUTL",120,0)
 I +$G(PTCH)=-1 W "<No routine patch information available>",! Q
"RTN","KMPSUTL",121,0)
 W ?20,"Currently",?51,"Need to",!
"RTN","KMPSUTL",122,0)
 W ?2,"Routine",?20,"Installed",?51,"Install",!
"RTN","KMPSUTL",123,0)
 S RTN=0,DASH=$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPSUTL",124,0)
 W DASH,!!
"RTN","KMPSUTL",125,0)
 F  S RTN=$O(PTCH(RTN)) Q:RTN=""  D  W !
"RTN","KMPSUTL",126,0)
 .N REL,SITE
"RTN","KMPSUTL",127,0)
 .S REL=$P(PTCH(RTN),U,6)_"*"_$P(PTCH(RTN),U,2)_" "_$P(PTCH(RTN),U,3)
"RTN","KMPSUTL",128,0)
 .S NEED=$P(PTCH(RTN),U,6)_"*"_$P(PTCH(RTN),U,2)_" **"_$P(PTCH(RTN),U,7)_"**"
"RTN","KMPSUTL",129,0)
 .S SITE=$P(PTCH(RTN),U,6)_"*"_$P(PTCH(RTN),U,4)_" "_$P(PTCH(RTN),U,5)
"RTN","KMPSUTL",130,0)
 .W ?2,RTN
"RTN","KMPSUTL",131,0)
 .I +PTCH(RTN)=2 W ?15,"<<<missing routine>>>"
"RTN","KMPSUTL",132,0)
 .E  W ?14,SITE
"RTN","KMPSUTL",133,0)
 .I +PTCH(RTN) W ?48,NEED
"RTN","KMPSUTL",134,0)
 .E  W ?54,"Ok"
"RTN","KMPSUTL",135,0)
 .W !
"RTN","KMPSUTL",136,0)
 W DASH,!
"RTN","KMPSUTL",137,0)
 S X=$$CONT^KMPSUTL1()
"RTN","KMPSUTL",138,0)
 Q
"RTN","KMPSUTL",139,0)
 ;
"RTN","KMPSUTL",140,0)
CURSTAT(STAT)   ;-- current status
"RTN","KMPSUTL",141,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL",142,0)
 ; input:  STAT (optional) = data from $$TSKSTAT^KMPSUTL1
"RTN","KMPSUTL",143,0)
 ; output: See codes below
"RTN","KMPSUTL",144,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL",145,0)
 ;
"RTN","KMPSUTL",146,0)
 N RESULT,SITNUM,STRTDT
"RTN","KMPSUTL",147,0)
 ;
"RTN","KMPSUTL",148,0)
 S RESULT="",SITNUM=^DD("SITE",1),STRTDT=$G(^XTMP("KMPS",SITNUM,0))
"RTN","KMPSUTL",149,0)
 ;
"RTN","KMPSUTL",150,0)
 I $D(^XTMP("KMPS","ERROR")) Q "6^ERRORS RECORDED"
"RTN","KMPSUTL",151,0)
 I $D(^XTMP("KMPS","STOP")) Q "7^STOPPING"
"RTN","KMPSUTL",152,0)
 I $D(^XTMP("KMPS","START")) L +^XTMP("KMPS"):0 I $T L -^XTMP("KMPS") Q "5^DID NOT COMPLETE"
"RTN","KMPSUTL",153,0)
 I +STRTDT I +$H-STRTDT>2 Q "5^DID NOT COMPLETE"
"RTN","KMPSUTL",154,0)
 I +STRTDT I +$H-STRTDT>1 Q "4^RUNNING TOO LONG"
"RTN","KMPSUTL",155,0)
 I $D(^XTMP("KMPS","START")) Q "0^RUNNING"
"RTN","KMPSUTL",156,0)
 I $D(STAT) Q $P(STAT,U,1,2)
"RTN","KMPSUTL",157,0)
 E  Q "3^NOT RUNNING"
"RTN","KMPSUTL",158,0)
 Q "9^UNKNOWN"
"RTN","KMPSUTL",159,0)
 ;
"RTN","KMPSUTL",160,0)
STOP ;-- stop SAGG collection routines
"RTN","KMPSUTL",161,0)
 ;
"RTN","KMPSUTL",162,0)
 N DIR,X,Y
"RTN","KMPSUTL",163,0)
 ;
"RTN","KMPSUTL",164,0)
 I '$D(^XTMP("KMPS","START")) D  Q
"RTN","KMPSUTL",165,0)
 .W !!,?5,"The SAGG Project collection routines are not running.",!
"RTN","KMPSUTL",166,0)
 E  W !!,"Current status of SAGG is ",$P($$CURSTAT(),U,2),!
"RTN","KMPSUTL",167,0)
 S DIR("A")="Do you wish to manually STOP the SAGG Project collection routines (Y/N)",DIR("B")="N",DIR(0)="Y"
"RTN","KMPSUTL",168,0)
 D ^DIR W !
"RTN","KMPSUTL",169,0)
 I Y D
"RTN","KMPSUTL",170,0)
 .S ^XTMP("KMPS","STOP")=1
"RTN","KMPSUTL",171,0)
 .W !,?5,"The SAGG Project collection routines have been notified to begin an"
"RTN","KMPSUTL",172,0)
 .W !,?5,"orderly shut-down process.",!
"RTN","KMPSUTL",173,0)
 Q
"RTN","KMPSUTL",174,0)
 ;
"RTN","KMPSUTL",175,0)
FILE ;-- modifies data in the SAGG PROJECT file #8970.1
"RTN","KMPSUTL",176,0)
 ;
"RTN","KMPSUTL",177,0)
 N DA,DIC,DIE,DLAYGO,DR,PLTFRM,X
"RTN","KMPSUTL",178,0)
 ;
"RTN","KMPSUTL",179,0)
 S PLTFRM=$$MPLTF^KMPSUTL1
"RTN","KMPSUTL",180,0)
 I PLTFRM="DSM" D
"RTN","KMPSUTL",181,0)
 .W !!,"Please specify the Volume Set and UCI which will hold the ^XTMP(""KMPS"") global.",!
"RTN","KMPSUTL",182,0)
 .S DIE="^KMPS(8970.1,",DLAYGO=8970.1,DA=1,DR=".02;.025"
"RTN","KMPSUTL",183,0)
 .D ^DIE
"RTN","KMPSUTL",184,0)
 W !!,"Specify the ",$S(PLTFRM="DSM":"Volume Sets",1:"Directories")
"RTN","KMPSUTL",185,0)
 W " which hold your VistA production globals.",!!,"For example:",!!,?5
"RTN","KMPSUTL",186,0)
 I PLTFRM="CWINNT" W "Cache for Windows NT =>  W:\VAA, W:\VBB, W:\VCC ... V:\Vxx"
"RTN","KMPSUTL",187,0)
 I PLTFRM="CVMS" W "Cache for OpenVMS =>  _$1$DKAn:[CACHSYS.VAA] ... _$1$DKAx:[CACHSYS.Vxx]"
"RTN","KMPSUTL",188,0)
 I PLTFRM="DSM" W "DSM =>  ROU, VAA, VBB, VCC ... Vxx"
"RTN","KMPSUTL",189,0)
 I PLTFRM="UNK" W "Specify all locations of VistA globals"
"RTN","KMPSUTL",190,0)
 W !!,"Do NOT specify 'test/training' ",$S(PLTFRM="DSM":"Volume Sets",1:"Directories")," (i.e., UTL,TST, etc.).",!
"RTN","KMPSUTL",191,0)
 S DIE="^KMPS(8970.1,",DA=1,DR=.03
"RTN","KMPSUTL",192,0)
 S:PLTFRM'="DSM" DR(2,8970.11)=.01
"RTN","KMPSUTL",193,0)
 D ^DIE
"RTN","KMPSUTL",194,0)
 Q
"RTN","KMPSUTL",195,0)
 ;
"RTN","KMPSUTL",196,0)
MAILGRP ;-- display mail group members that will receive mail messages
"RTN","KMPSUTL",197,0)
 ;
"RTN","KMPSUTL",198,0)
 N DA,MEMGDA
"RTN","KMPSUTL",199,0)
 ;
"RTN","KMPSUTL",200,0)
 W ?5,"KMP-CAPMAN mail group:"
"RTN","KMPSUTL",201,0)
 S DA=$O(^XMB(3.8,"B","KMP-CAPMAN",0))
"RTN","KMPSUTL",202,0)
 I '+DA W "MISSING",! Q
"RTN","KMPSUTL",203,0)
 D MEMBER(DA,35)
"RTN","KMPSUTL",204,0)
 ; check MEMBER GROUPS field #11
"RTN","KMPSUTL",205,0)
 S MEMGDA=0
"RTN","KMPSUTL",206,0)
 F  S MEMGDA=$O(^XMB(3.8,DA,5,"B",MEMGDA)) Q:'MEMGDA  D
"RTN","KMPSUTL",207,0)
 .S MEMGRPNM=$P($G(^XMB(3.8,MEMGDA,0)),U)
"RTN","KMPSUTL",208,0)
 .W ?35,"G.",MEMGRPNM," (MEMBER GROUP)",!
"RTN","KMPSUTL",209,0)
 .D MEMBER(MEMGDA,37)
"RTN","KMPSUTL",210,0)
 ; check MEMBERS - REMOTE field #12
"RTN","KMPSUTL",211,0)
 S MEMREM=""
"RTN","KMPSUTL",212,0)
 F  S MEMREM=$O(^XMB(3.8,DA,6,"B",MEMREM)) Q:MEMREM=""  D
"RTN","KMPSUTL",213,0)
 .W ?35,MEMREM," (REMOTE)",!
"RTN","KMPSUTL",214,0)
 ; check DISTRIBUTION LIST field #13
"RTN","KMPSUTL",215,0)
 S DISLSTDA=0
"RTN","KMPSUTL",216,0)
 F  S DISLSTDA=$O(^XMB(3.8,DA,7,"B",DISLSTDA)) Q:'DISLSTDA  D
"RTN","KMPSUTL",217,0)
 .S DISLIST=$P($G(^XMB(3.816,DISLSTDA,0)),U)
"RTN","KMPSUTL",218,0)
 .W ?35,DISLIST," (DISTRIBUTION LIST)",!
"RTN","KMPSUTL",219,0)
 ; check FAX RECIPIENT field #14
"RTN","KMPSUTL",220,0)
 S FAXRDA=0
"RTN","KMPSUTL",221,0)
 F  S FAXRDA=$O(^XMB(3.8,DA,8,"B",FAXRDA)) Q:'FAXRDA  D
"RTN","KMPSUTL",222,0)
 .S FAXRCPT=$P($G(^AKF("FAXR",FAXRDA,0)),U)
"RTN","KMPSUTL",223,0)
 .W ?35,FAXRCPT," (FAX RECEIPIENT)",!
"RTN","KMPSUTL",224,0)
 ; check FAX GROUP field #15
"RTN","KMPSUTL",225,0)
 S FAXGRPDA=0
"RTN","KMPSUTL",226,0)
 F  S FAXGRPDA=$O(^XMB(3.8,DA,9,"B",FAXGRPDA)) Q:'FAXGRPDA  D
"RTN","KMPSUTL",227,0)
 .S FAXGRP=$P($G(^AKF("FAXG",FAXGRPDA,0)),U)
"RTN","KMPSUTL",228,0)
 .W ?35,FAXGRP," (FAX GROUP)",!
"RTN","KMPSUTL",229,0)
 Q
"RTN","KMPSUTL",230,0)
 ;
"RTN","KMPSUTL",231,0)
MEMBER(IEN,TAB) ;-- display mail group members
"RTN","KMPSUTL",232,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL",233,0)
 ; input: IEN = entry number of mail group
"RTN","KMPSUTL",234,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL",235,0)
 ;
"RTN","KMPSUTL",236,0)
 N NAME,NMARRY,USER
"RTN","KMPSUTL",237,0)
 ;
"RTN","KMPSUTL",238,0)
 ; check MEMBER field #2
"RTN","KMPSUTL",239,0)
 S USER=0
"RTN","KMPSUTL",240,0)
 F  S USER=$O(^XMB(3.8,DA,1,"B",USER)) Q:'USER  D
"RTN","KMPSUTL",241,0)
 .S NAME=$P($G(^VA(200,USER,0)),U)
"RTN","KMPSUTL",242,0)
 .I NAME'="" S NMARRY(NAME)=USER
"RTN","KMPSUTL",243,0)
 I '$D(NMARRY) W ?35,"NO USERS",! Q
"RTN","KMPSUTL",244,0)
 S NAME=""
"RTN","KMPSUTL",245,0)
 F  S NAME=$O(NMARRY(NAME)) Q:NAME=""  D
"RTN","KMPSUTL",246,0)
 .S USER=NMARRY(NAME)
"RTN","KMPSUTL",247,0)
 .W ?TAB,NAME
"RTN","KMPSUTL",248,0)
 .S USER=$$ACTIVE^XUSER(USER) I '+USER W " (",$P(USER,U,2),")"
"RTN","KMPSUTL",249,0)
 .W !
"RTN","KMPSUTL",250,0)
 Q
"RTN","KMPSUTL",251,0)
 ;
"RTN","KMPSUTL",252,0)
HELP ;-- extended help for SAGG PROJECT file VOLUME SET TO MONITOR (.01) field
"RTN","KMPSUTL",253,0)
 ;
"RTN","KMPSUTL",254,0)
 N PLTFRM
"RTN","KMPSUTL",255,0)
 ;
"RTN","KMPSUTL",256,0)
 S PLTFRM=$$MPLTF^KMPSUTL1
"RTN","KMPSUTL",257,0)
 W !," This field will contain the name of the ",$S(PLTFRM="DSM":"Volume Sets",1:"Directories")
"RTN","KMPSUTL",258,0)
 W " that the site wants",!," to monitor with the SAGG Project collection routines. The site should",!
"RTN","KMPSUTL",259,0)
 W " specify only the ",$S(PLTFRM="DSM":"Volume Sets",1:"Directories")
"RTN","KMPSUTL",260,0)
 W " which hold their VistA production globals:",!!
"RTN","KMPSUTL",261,0)
 W " For example:",!!
"RTN","KMPSUTL",262,0)
 I PLTFRM="CWINNT" W "    Cache for Windows NT =>  W:\VAA, W:\VBB, W:\VCC ... V:\Vxx",!!
"RTN","KMPSUTL",263,0)
 I PLTFRM="CVMS" W "    Cache for OpenVMS =>  _$1$DKAn:[CACHSYS.VAA] ... _$1$DKAx:[CACHSYS.Vxx]",!!
"RTN","KMPSUTL",264,0)
 I PLTFRM="DSM" W "    DSM =>  ROU, VAA, VBB ... Vxx",!!
"RTN","KMPSUTL",265,0)
 W " Do NOT specify 'test/training' ",$S(PLTFRM="DSM":"Volume Sets",1:"Directories")," (e.g., UTL, TST, etc.).",!
"RTN","KMPSUTL",266,0)
 Q
"RTN","KMPSUTL",267,0)
 ;
"RTN","KMPSUTL",268,0)
PTCHINFO        ; -- patch information: routine name ^ current version ^ current patch(es) ^ package namespace
"RTN","KMPSUTL",269,0)
 ;;KMPSGE^1.8^**1,2,3**^KMPS
"RTN","KMPSUTL",270,0)
 ;;KMPSLK^1.8^**1,2,3**^KMPS
"RTN","KMPSUTL",271,0)
 ;;KMPSUTL^1.8^**1,2,3**^KMPS
"RTN","KMPSUTL",272,0)
 ;;KMPSUTL1^1.8^**1,2,3**^KMPS
"RTN","KMPSUTL",273,0)
 ;;%ZOSVKSD^8.0^**121,197,268**^XU
"RTN","KMPSUTL",274,0)
 ;;%ZOSVKSE^8.0^**90,94,197,268**^XU
"RTN","KMPSUTL",275,0)
 ;;%ZOSVKSS^8.0^**90,94,197,268**^XU
"RTN","KMPSUTL",276,0)
 ;;
"RTN","KMPSUTL",277,0)
 
"RTN","KMPSUTL1")
0^3^B19706003
"RTN","KMPSUTL1",1,0)
KMPSUTL1        ;OAK/KAK - SAGG Utilities ;01 SEP 97 11:15 am
"RTN","KMPSUTL1",2,0)
 ;;1.8;SAGG PROJECT;**1,2,3**;Jul 26, 2004
"RTN","KMPSUTL1",3,0)
 ;
"RTN","KMPSUTL1",4,0)
 ; *** This code will be moved into a future CM Tools (KMPD) patch ***
"RTN","KMPSUTL1",5,0)
 ;        
"RTN","KMPSUTL1",6,0)
CONT(EXT)  ;-- function displays 'return to continue' message at bottom of page
"RTN","KMPSUTL1",7,0)
 ;--------------------------------------------------------------------
"RTN","KMPSUTL1",8,0)
 ; input:  0 = do not show 'to exit' text
"RTN","KMPSUTL1",9,0)
 ;         1 = show 'to exit' text
"RTN","KMPSUTL1",10,0)
 ; return: 0 = continue
"RTN","KMPSUTL1",11,0)
 ;         1 = quit
"RTN","KMPSUTL1",12,0)
 ;--------------------------------------------------------------------
"RTN","KMPSUTL1",13,0)
 ;
"RTN","KMPSUTL1",14,0)
 N X
"RTN","KMPSUTL1",15,0)
 ;
"RTN","KMPSUTL1",16,0)
 S EXT=+$G(EXT)
"RTN","KMPSUTL1",17,0)
 F  Q:$Y>(IOSL-2)  W !
"RTN","KMPSUTL1",18,0)
 W "Press RETURN to continue" W $S(EXT:" or '^' to exit: ",1:": ")
"RTN","KMPSUTL1",19,0)
 R X:DTIME
"RTN","KMPSUTL1",20,0)
 I X["^"!('$T) Q 1
"RTN","KMPSUTL1",21,0)
 Q 0
"RTN","KMPSUTL1",22,0)
 ;
"RTN","KMPSUTL1",23,0)
MPLTF() ;-- returns the type of M platform
"RTN","KMPSUTL1",24,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",25,0)
 ; Returns:  DSM    for DSM platform
"RTN","KMPSUTL1",26,0)
 ;           CVMS   for Cache for OpenVMS platform
"RTN","KMPSUTL1",27,0)
 ;           CWINNT for Cache for Windows NT platform
"RTN","KMPSUTL1",28,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",29,0)
 ;
"RTN","KMPSUTL1",30,0)
 N MPLTF,ZV
"RTN","KMPSUTL1",31,0)
 ;
"RTN","KMPSUTL1",32,0)
 S ZV=$ZV
"RTN","KMPSUTL1",33,0)
 S MPLTF=$S(ZV["DSM":"DSM",ZV["VMS":"CVMS",ZV["Windows":"CWINNT",1:"UNK")
"RTN","KMPSUTL1",34,0)
 Q MPLTF
"RTN","KMPSUTL1",35,0)
 ;
"RTN","KMPSUTL1",36,0)
TSKSTAT(OPT)       ;-- status of scheduled task option
"RTN","KMPSUTL1",37,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",38,0)
 ; input  OPT = option name
"RTN","KMPSUTL1",39,0)
 ; output RTN = status code^literal condition
"RTN","KMPSUTL1",40,0)
 ;              ...^scheduled date@time (day)^numeric day-of-week
"RTN","KMPSUTL1",41,0)
 ;              ...^expanded scheduled frequency^short form frequency
"RTN","KMPSUTL1",42,0)
 ;              ...^task id^queued by^user status
"RTN","KMPSUTL1",43,0)
 ;
"RTN","KMPSUTL1",44,0)
 ; where status code^condition:
"RTN","KMPSUTL1",45,0)
 ;            = 0^SCHEDULED
"RTN","KMPSUTL1",46,0)
 ;            = 1^NOT SCHEDULED and 'scheduled date@time' will
"RTN","KMPSUTL1",47,0)
 ;                   be UNKNOWN and 'numeric day of week' will be -1
"RTN","KMPSUTL1",48,0)
 ;            = 2^NOT RESCHEDULED
"RTN","KMPSUTL1",49,0)
 ;            = 3^MISSING when OPT does not exist
"RTN","KMPSUTL1",50,0)
 ;            = 9^UNKNOWN
"RTN","KMPSUTL1",51,0)
 ;
"RTN","KMPSUTL1",52,0)
 ; where user status = ACTIVE or NOT ACTIVE
"RTN","KMPSUTL1",53,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",54,0)
 ;
"RTN","KMPSUTL1",55,0)
 N ACTV,DA,DAY,DOW,FREQ,RTN,TSK,TSKINFO,USER,Y
"RTN","KMPSUTL1",56,0)
 ;
"RTN","KMPSUTL1",57,0)
 S (DOW,FREQ)=-1
"RTN","KMPSUTL1",58,0)
 S RTN="9^UNKNOWN^NO DATE^-1^UNKNOWN^^^UNKNOWN^NOT ACTIVE"
"RTN","KMPSUTL1",59,0)
 ;
"RTN","KMPSUTL1",60,0)
 I '$D(^DIC(19,"B",OPT)) S $P(RTN,U,1,2)="3^MISSING" Q RTN
"RTN","KMPSUTL1",61,0)
 S DA=$O(^DIC(19,"B",OPT,0)),DA=+$O(^DIC(19.2,"B",DA,0))
"RTN","KMPSUTL1",62,0)
 S TSKINFO=$G(^DIC(19.2,DA,0)),(DOW,Y)=$P(TSKINFO,U,2),FREQ=$P(TSKINFO,U,6)
"RTN","KMPSUTL1",63,0)
 D:+Y DD^%DT S $P(TSKINFO,U,2)=Y
"RTN","KMPSUTL1",64,0)
 I DOW'="" S DAY=$$DOW^XLFDT(DOW),DOW=$$DOW^XLFDT(DOW,1)
"RTN","KMPSUTL1",65,0)
 S TSK=+$G(^DIC(19.2,+DA,1))
"RTN","KMPSUTL1",66,0)
 I (DOW="")!(TSK="") S $P(RTN,U,1,2)="1^NOT SCHEDULED"
"RTN","KMPSUTL1",67,0)
 E  D
"RTN","KMPSUTL1",68,0)
 .S $P(RTN,U,1,2)="0^SCHEDULED"
"RTN","KMPSUTL1",69,0)
 .I FREQ="" S $P(RTN,U,1,2)="2^NOT RESCHEDULED"
"RTN","KMPSUTL1",70,0)
 .; queued to run at
"RTN","KMPSUTL1",71,0)
 .S $P(RTN,U,3,4)=$S($P(TSKINFO,U,2)="":"NO DATE",1:$P(TSKINFO,U,2))_$S($D(DAY):" ("_DAY_")",1:"")_U_DOW
"RTN","KMPSUTL1",72,0)
 ; rescheduling frequency
"RTN","KMPSUTL1",73,0)
 I FREQ?1.3N1A D
"RTN","KMPSUTL1",74,0)
 .S $P(RTN,U,5,6)=+FREQ_" "_$S(FREQ["D":"day",FREQ["M":"month",1:FREQ)_$S(+FREQ>1:"s",1:"")_U_FREQ
"RTN","KMPSUTL1",75,0)
 E  S $P(RTN,U,5,6)=$S(FREQ="":"UNKNOWN",1:FREQ)_U_FREQ
"RTN","KMPSUTL1",76,0)
 ; task id
"RTN","KMPSUTL1",77,0)
 S $P(RTN,U,7)=TSK
"RTN","KMPSUTL1",78,0)
 ; find if the user is active
"RTN","KMPSUTL1",79,0)
 I TSK D
"RTN","KMPSUTL1",80,0)
 .S TSKINFO=$G(^%ZTSK(TSK,0))
"RTN","KMPSUTL1",81,0)
 .S USER=+$P(TSKINFO,U,3)
"RTN","KMPSUTL1",82,0)
 .S ACTV=+$$ACTIVE^XUSER(USER)
"RTN","KMPSUTL1",83,0)
 .; queued by
"RTN","KMPSUTL1",84,0)
 .S $P(RTN,U,8)=$P($G(^VA(200,USER,0)),U)
"RTN","KMPSUTL1",85,0)
 I $G(ACTV) S $P(RTN,U,9)="ACTIVE"
"RTN","KMPSUTL1",86,0)
 Q RTN
"RTN","KMPSUTL1",87,0)
 ;
"RTN","KMPSUTL1",88,0)
VERPTCH(PKG,RTNARRY)    ;-- returns current version and patch status of specified CM package
"RTN","KMPSUTL1",89,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",90,0)
 ; input PKG = 'D' for CM TOOLS
"RTN","KMPSUTL1",91,0)
 ;             'R' for RUM
"RTN","KMPSUTL1",92,0)
 ;             'S' for SAGG
"RTN","KMPSUTL1",93,0)
 ; Return array (passed by reference) in format:
"RTN","KMPSUTL1",94,0)
 ; output RTNARRY = -1 for error
"RTN","KMPSUTL1",95,0)
 ;        RTNARRY(0) = number of routines^total rtns ok^total rtns bad^total rtns missing
"RTN","KMPSUTL1",96,0)
 ;        RTNARRY(rtn name) = {0=good 1=bad 2=missing routine}^released version^released patch(es)
"RTN","KMPSUTL1",97,0)
 ;                            ... ^site version^site patch(es)^package namespace^missing patch(es)
"RTN","KMPSUTL1",98,0)
 ;
"RTN","KMPSUTL1",99,0)
 ; This code will reference line tag PTCHINFO^KMP_pkg_UTL for the
"RTN","KMPSUTL1",100,0)
 ; following patch information text starting at PTCHINFO+1:
"RTN","KMPSUTL1",101,0)
 ;
"RTN","KMPSUTL1",102,0)
 ;        ;;routine name ^ current version ^ current patch(es) ^ package namespace
"RTN","KMPSUTL1",103,0)
 ;
"RTN","KMPSUTL1",104,0)
 ; Example:    
"RTN","KMPSUTL1",105,0)
 ;           PATCHINFO  ;-- patch information
"RTN","KMPSUTL1",106,0)
 ;                      ;;KMPSGE^1.8^**1,2**^KMPS
"RTN","KMPSUTL1",107,0)
 ;                      ;;KMPSUTL^1.8^**1,2**^KMPS
"RTN","KMPSUTL1",108,0)
 ;  last line >         ;;
"RTN","KMPSUTL1",109,0)
 ;---------------------------------------------------------------------
"RTN","KMPSUTL1",110,0)
 ;
"RTN","KMPSUTL1",111,0)
 K RTNARRY
"RTN","KMPSUTL1",112,0)
 ;
"RTN","KMPSUTL1",113,0)
 N BAD,I,INFO,INFOSITE,NEED,OK,OUT,PATREL,PATSITE,PKGNMSPC,PTCH,PTCHSITE,RTN
"RTN","KMPSUTL1",114,0)
 N TAG,TOTBAD,TOTMISS,TOTOK,TOTRTN,X,VER,VERSITE
"RTN","KMPSUTL1",115,0)
 ;
"RTN","KMPSUTL1",116,0)
 I $G(PKG)=""!("DRS"'[$G(PKG))!($L(PKG)'=1) S RTNARRY=-1 Q
"RTN","KMPSUTL1",117,0)
 S X="KMP"_PKG_"UTL"
"RTN","KMPSUTL1",118,0)
 X ^%ZOSF("TEST") I '$T S RTNARRY=-1 Q
"RTN","KMPSUTL1",119,0)
 ;
"RTN","KMPSUTL1",120,0)
 S (OUT,TOTBAD,TOTMISS,TOTOK,TOTRTN)=0
"RTN","KMPSUTL1",121,0)
 F I=1:1 D  Q:OUT
"RTN","KMPSUTL1",122,0)
 .S TAG="PTCHINFO+"_I_"^KMP"_PKG_"UTL"
"RTN","KMPSUTL1",123,0)
 .S INFO=$P($T(@TAG),";;",2)
"RTN","KMPSUTL1",124,0)
 .I INFO="" S OUT=1 Q
"RTN","KMPSUTL1",125,0)
 .S RTN=$P(INFO,U),VER=$P(INFO,U,2),PTCH=$P(INFO,U,3),PKGNMSPC=$P(INFO,U,4)
"RTN","KMPSUTL1",126,0)
 .; if routine is missing
"RTN","KMPSUTL1",127,0)
 .I $T(@(RTN_"^"_RTN))="" D  Q
"RTN","KMPSUTL1",128,0)
 ..S TOTMISS=TOTMISS+1,TOTRTN=TOTRTN+1
"RTN","KMPSUTL1",129,0)
 ..S RTNARRY(RTN)="2^"_VER_U_PTCH_"^^"
"RTN","KMPSUTL1",130,0)
 .X "ZL @RTN S INFOSITE=$T(+2)"
"RTN","KMPSUTL1",131,0)
 .S VERSITE=$P(INFOSITE,";",3),PTCHSITE=$P(INFOSITE,";",5)
"RTN","KMPSUTL1",132,0)
 .I VERSITE'=VER!(PTCHSITE'=PTCH) D
"RTN","KMPSUTL1",133,0)
 ..S BAD=1,OK=0
"RTN","KMPSUTL1",134,0)
 ..S PATSITE=$E(PTCHSITE,3,$L(PTCHSITE)-2)
"RTN","KMPSUTL1",135,0)
 ..S PATREL=$E(PTCH,3,$L(PTCH)-2)
"RTN","KMPSUTL1",136,0)
 ..S NEED=$P($P(PATREL,PATSITE,2),",",2,9999)
"RTN","KMPSUTL1",137,0)
 .E  S BAD=0,OK=1,NEED=""
"RTN","KMPSUTL1",138,0)
 .S TOTBAD=TOTBAD+BAD,TOTOK=TOTOK+OK,TOTRTN=TOTRTN+1
"RTN","KMPSUTL1",139,0)
 .S RTNARRY(RTN)=BAD_U_VER_U_PTCH_U_VERSITE_U_PTCHSITE_U_PKGNMSPC_U_NEED
"RTN","KMPSUTL1",140,0)
 S RTNARRY(0)=TOTRTN_U_TOTOK_U_TOTBAD_U_TOTMISS
"RTN","KMPSUTL1",141,0)
 Q
"RTN","KMPSUTL1",142,0)
 ;
"RTN","KMPSUTL1",143,0)
 
"VER")
8.0^22.0
**END**
**END**
