KIDS Distribution saved on Jan 25, 2017@14:08:08
PX*1.0*211
**KIDS**:PX*1.0*211^

**INSTALL NAME**
PX*1.0*211
"BLD",9282,0)
PX*1.0*211^PCE PATIENT CARE ENCOUNTER^0^3170125^y
"BLD",9282,1,0)
^^3^3^3150910^^^
"BLD",9282,1,1,0)
PCE data standardization, see the release notes and patch description
"BLD",9282,1,2,0)
for complete details.
"BLD",9282,1,3,0)

"BLD",9282,4,0)
^9.64PA^9000010.07^10
"BLD",9282,4,815,0)
815
"BLD",9282,4,815,222)
y^y^f^^^^n
"BLD",9282,4,9000010.07,0)
9000010.07
"BLD",9282,4,9000010.07,222)
y^y^f^^^^n
"BLD",9282,4,9000010.13,0)
9000010.13
"BLD",9282,4,9000010.13,222)
y^y^f^^^^n
"BLD",9282,4,9000010.16,0)
9000010.16
"BLD",9282,4,9000010.16,222)
y^y^f^^^^n
"BLD",9282,4,9000010.18,0)
9000010.18
"BLD",9282,4,9000010.18,222)
y^y^f^^^^n
"BLD",9282,4,9000010.23,0)
9000010.23
"BLD",9282,4,9000010.23,222)
y^y^f^^^^n
"BLD",9282,4,9000010.71,0)
9000010.71
"BLD",9282,4,9000010.71,222)
y^y^f^^^^n
"BLD",9282,4,9999999.09,0)
9999999.09
"BLD",9282,4,9999999.09,222)
y^y^f^^n^^y^o^n
"BLD",9282,4,9999999.09,224)
I Y=41
"BLD",9282,4,9999999.15,0)
9999999.15
"BLD",9282,4,9999999.15,222)
y^y^f^^n^^y^^n
"BLD",9282,4,9999999.15,224)
I Y=30
"BLD",9282,4,9999999.64,0)
9999999.64
"BLD",9282,4,9999999.64,222)
y^y^f^^n^^y^o^n
"BLD",9282,4,9999999.64,224)
I Y=7060
"BLD",9282,4,"B",815,815)

"BLD",9282,4,"B",9000010.07,9000010.07)

"BLD",9282,4,"B",9000010.13,9000010.13)

"BLD",9282,4,"B",9000010.16,9000010.16)

"BLD",9282,4,"B",9000010.18,9000010.18)

"BLD",9282,4,"B",9000010.23,9000010.23)

"BLD",9282,4,"B",9000010.71,9000010.71)

"BLD",9282,4,"B",9999999.09,9999999.09)

"BLD",9282,4,"B",9999999.15,9999999.15)

"BLD",9282,4,"B",9999999.64,9999999.64)

"BLD",9282,6)
^154
"BLD",9282,6.3)
84
"BLD",9282,"ABPKG")
n
"BLD",9282,"INI")
PRE^PXP211I
"BLD",9282,"INIT")
POST^PXP211I
"BLD",9282,"KRN",0)
^9.67PA^779.2^20
"BLD",9282,"KRN",.4,0)
.4
"BLD",9282,"KRN",.401,0)
.401
"BLD",9282,"KRN",.402,0)
.402
"BLD",9282,"KRN",.403,0)
.403
"BLD",9282,"KRN",.403,"NM",0)
^9.68A^11^7
"BLD",9282,"KRN",.403,"NM",2,0)
PX EXAM CHANGE LOG    FILE #9999999.15^9999999.15^0
"BLD",9282,"KRN",.403,"NM",4,0)
PX EXAM EDIT    FILE #9999999.15^9999999.15^0
"BLD",9282,"KRN",.403,"NM",7,0)
PX HEALTH FACTOR CHANGE LOG    FILE #9999999.64^9999999.64^0
"BLD",9282,"KRN",.403,"NM",8,0)
PX HEALTH FACTOR EDIT    FILE #9999999.64^9999999.64^0
"BLD",9282,"KRN",.403,"NM",9,0)
PX VSC EDIT    FILE #9000010.71^9000010.71^0
"BLD",9282,"KRN",.403,"NM",10,0)
PX EDUCATION TOPIC CHANGE LOG    FILE #9999999.09^9999999.09^0
"BLD",9282,"KRN",.403,"NM",11,0)
PX EDUCATION TOPIC EDIT    FILE #9999999.09^9999999.09^0
"BLD",9282,"KRN",.403,"NM","B","PX EDUCATION TOPIC CHANGE LOG    FILE #9999999.09",10)

"BLD",9282,"KRN",.403,"NM","B","PX EDUCATION TOPIC EDIT    FILE #9999999.09",11)

"BLD",9282,"KRN",.403,"NM","B","PX EXAM CHANGE LOG    FILE #9999999.15",2)

"BLD",9282,"KRN",.403,"NM","B","PX EXAM EDIT    FILE #9999999.15",4)

"BLD",9282,"KRN",.403,"NM","B","PX HEALTH FACTOR CHANGE LOG    FILE #9999999.64",7)

"BLD",9282,"KRN",.403,"NM","B","PX HEALTH FACTOR EDIT    FILE #9999999.64",8)

"BLD",9282,"KRN",.403,"NM","B","PX VSC EDIT    FILE #9000010.71",9)

"BLD",9282,"KRN",.5,0)
.5
"BLD",9282,"KRN",.84,0)
.84
"BLD",9282,"KRN",3.6,0)
3.6
"BLD",9282,"KRN",3.8,0)
3.8
"BLD",9282,"KRN",9.2,0)
9.2
"BLD",9282,"KRN",9.8,0)
9.8
"BLD",9282,"KRN",9.8,"NM",0)
^9.68A^43^42
"BLD",9282,"KRN",9.8,"NM",1,0)
PXP211I^^0^B229813073
"BLD",9282,"KRN",9.8,"NM",2,0)
PXEDUINQ^^0^B16226994
"BLD",9282,"KRN",9.8,"NM",3,0)
PXEDUMGR^^0^B43817187
"BLD",9282,"KRN",9.8,"NM",4,0)
PXEDUSM^^0^B27354817
"BLD",9282,"KRN",9.8,"NM",5,0)
PXLEX^^0^B9267006
"BLD",9282,"KRN",9.8,"NM",6,0)
PXCOPY^^0^B13344110
"BLD",9282,"KRN",9.8,"NM",7,0)
PXINPTR^^0^B5933655
"BLD",9282,"KRN",9.8,"NM",8,0)
PXEXINQ^^0^B8926688
"BLD",9282,"KRN",9.8,"NM",9,0)
PXEXMGR^^0^B41148512
"BLD",9282,"KRN",9.8,"NM",10,0)
PXEXSM^^0^B24473496
"BLD",9282,"KRN",9.8,"NM",11,0)
PXHFINQ^^0^B13212938
"BLD",9282,"KRN",9.8,"NM",12,0)
PXHFMGR^^0^B41400239
"BLD",9282,"KRN",9.8,"NM",13,0)
PXHFSM^^0^B23623801
"BLD",9282,"KRN",9.8,"NM",14,0)
PXMCLINK^^0^B90678468
"BLD",9282,"KRN",9.8,"NM",15,0)
PXVSC^^0^B2079807
"BLD",9282,"KRN",9.8,"NM",16,0)
PXKWSRCH^^0^B42503838
"BLD",9282,"KRN",9.8,"NM",17,0)
PXMCODES^^0^B8655204
"BLD",9282,"KRN",9.8,"NM",18,0)
PXSMAN^^0^B2333991
"BLD",9282,"KRN",9.8,"NM",19,0)
PXAI^^0^B44282682
"BLD",9282,"KRN",9.8,"NM",20,0)
PXAISC^^0^B9004744
"BLD",9282,"KRN",9.8,"NM",21,0)
PXAISCV^^0^B5533538
"BLD",9282,"KRN",9.8,"NM",23,0)
PXBGSC^^0^B475760
"BLD",9282,"KRN",9.8,"NM",24,0)
PXCESC^^0^B31822255
"BLD",9282,"KRN",9.8,"NM",25,0)
PXKFSC^^0^B1969432
"BLD",9282,"KRN",9.8,"NM",26,0)
PXAIHF^^0^B6746831
"BLD",9282,"KRN",9.8,"NM",27,0)
PXAIPED^^0^B6655515
"BLD",9282,"KRN",9.8,"NM",28,0)
PXAIXAM^^0^B6516631
"BLD",9282,"KRN",9.8,"NM",29,0)
PXKFPED^^0^B1977716
"BLD",9282,"KRN",9.8,"NM",30,0)
PXKFXAM^^0^B1932215
"BLD",9282,"KRN",9.8,"NM",31,0)
PXKFHF^^0^B2002717
"BLD",9282,"KRN",9.8,"NM",32,0)
PXCEAE1^^0^B28872545
"BLD",9282,"KRN",9.8,"NM",33,0)
PXCEAE^^0^B33181486
"BLD",9282,"KRN",9.8,"NM",34,0)
PXLEXS^^0^B107791393
"BLD",9282,"KRN",9.8,"NM",35,0)
PXVSCSM^^0^B5919193
"BLD",9282,"KRN",9.8,"NM",36,0)
PXKENC^^0^B29418539
"BLD",9282,"KRN",9.8,"NM",37,0)
PXCEHF^^0^B9804821
"BLD",9282,"KRN",9.8,"NM",38,0)
PXCEPED^^0^B8801037
"BLD",9282,"KRN",9.8,"NM",39,0)
PXCEXAM^^0^B8384465
"BLD",9282,"KRN",9.8,"NM",40,0)
PXCASOR^^0^B2775351
"BLD",9282,"KRN",9.8,"NM",41,0)
PXCASC^^0^B7285331
"BLD",9282,"KRN",9.8,"NM",42,0)
PXAPIDEL^^0^B57866031
"BLD",9282,"KRN",9.8,"NM",43,0)
PXCEVFIL^^0^B44603236
"BLD",9282,"KRN",9.8,"NM","B","PXAI",19)

"BLD",9282,"KRN",9.8,"NM","B","PXAIHF",26)

"BLD",9282,"KRN",9.8,"NM","B","PXAIPED",27)

"BLD",9282,"KRN",9.8,"NM","B","PXAISC",20)

"BLD",9282,"KRN",9.8,"NM","B","PXAISCV",21)

"BLD",9282,"KRN",9.8,"NM","B","PXAIXAM",28)

"BLD",9282,"KRN",9.8,"NM","B","PXAPIDEL",42)

"BLD",9282,"KRN",9.8,"NM","B","PXBGSC",23)

"BLD",9282,"KRN",9.8,"NM","B","PXCASC",41)

"BLD",9282,"KRN",9.8,"NM","B","PXCASOR",40)

"BLD",9282,"KRN",9.8,"NM","B","PXCEAE",33)

"BLD",9282,"KRN",9.8,"NM","B","PXCEAE1",32)

"BLD",9282,"KRN",9.8,"NM","B","PXCEHF",37)

"BLD",9282,"KRN",9.8,"NM","B","PXCEPED",38)

"BLD",9282,"KRN",9.8,"NM","B","PXCESC",24)

"BLD",9282,"KRN",9.8,"NM","B","PXCEVFIL",43)

"BLD",9282,"KRN",9.8,"NM","B","PXCEXAM",39)

"BLD",9282,"KRN",9.8,"NM","B","PXCOPY",6)

"BLD",9282,"KRN",9.8,"NM","B","PXEDUINQ",2)

"BLD",9282,"KRN",9.8,"NM","B","PXEDUMGR",3)

"BLD",9282,"KRN",9.8,"NM","B","PXEDUSM",4)

"BLD",9282,"KRN",9.8,"NM","B","PXEXINQ",8)

"BLD",9282,"KRN",9.8,"NM","B","PXEXMGR",9)

"BLD",9282,"KRN",9.8,"NM","B","PXEXSM",10)

"BLD",9282,"KRN",9.8,"NM","B","PXHFINQ",11)

"BLD",9282,"KRN",9.8,"NM","B","PXHFMGR",12)

"BLD",9282,"KRN",9.8,"NM","B","PXHFSM",13)

"BLD",9282,"KRN",9.8,"NM","B","PXINPTR",7)

"BLD",9282,"KRN",9.8,"NM","B","PXKENC",36)

"BLD",9282,"KRN",9.8,"NM","B","PXKFHF",31)

"BLD",9282,"KRN",9.8,"NM","B","PXKFPED",29)

"BLD",9282,"KRN",9.8,"NM","B","PXKFSC",25)

"BLD",9282,"KRN",9.8,"NM","B","PXKFXAM",30)

"BLD",9282,"KRN",9.8,"NM","B","PXKWSRCH",16)

"BLD",9282,"KRN",9.8,"NM","B","PXLEX",5)

"BLD",9282,"KRN",9.8,"NM","B","PXLEXS",34)

"BLD",9282,"KRN",9.8,"NM","B","PXMCLINK",14)

"BLD",9282,"KRN",9.8,"NM","B","PXMCODES",17)

"BLD",9282,"KRN",9.8,"NM","B","PXP211I",1)

"BLD",9282,"KRN",9.8,"NM","B","PXSMAN",18)

"BLD",9282,"KRN",9.8,"NM","B","PXVSC",15)

"BLD",9282,"KRN",9.8,"NM","B","PXVSCSM",35)

"BLD",9282,"KRN",19,0)
19
"BLD",9282,"KRN",19,"NM",0)
^9.68A^9^8
"BLD",9282,"KRN",19,"NM",1,0)
PXTT EDU TOPICS MANAGEMENT^^0
"BLD",9282,"KRN",19,"NM",2,0)
PXTT EXAM MANAGEMENT^^0
"BLD",9282,"KRN",19,"NM",4,0)
PXTT HEALTH FACTOR MANAGEMENT^^0
"BLD",9282,"KRN",19,"NM",5,0)
PXTT TEXT/KEYWORD SEARCH^^0
"BLD",9282,"KRN",19,"NM",6,0)
PXTT EDIT EDUCATION TOPICS^^0
"BLD",9282,"KRN",19,"NM",7,0)
PXTT EDIT EXAM^^0
"BLD",9282,"KRN",19,"NM",8,0)
PXTT EDIT HEALTH FACTORS^^0
"BLD",9282,"KRN",19,"NM",9,0)
PXTT TABLE MAINTENANCE^^0
"BLD",9282,"KRN",19,"NM","B","PXTT EDIT EDUCATION TOPICS",6)

"BLD",9282,"KRN",19,"NM","B","PXTT EDIT EXAM",7)

"BLD",9282,"KRN",19,"NM","B","PXTT EDIT HEALTH FACTORS",8)

"BLD",9282,"KRN",19,"NM","B","PXTT EDU TOPICS MANAGEMENT",1)

"BLD",9282,"KRN",19,"NM","B","PXTT EXAM MANAGEMENT",2)

"BLD",9282,"KRN",19,"NM","B","PXTT HEALTH FACTOR MANAGEMENT",4)

"BLD",9282,"KRN",19,"NM","B","PXTT TABLE MAINTENANCE",9)

"BLD",9282,"KRN",19,"NM","B","PXTT TEXT/KEYWORD SEARCH",5)

"BLD",9282,"KRN",19.1,0)
19.1
"BLD",9282,"KRN",101,0)
101
"BLD",9282,"KRN",101,"NM",0)
^9.68A^37^27
"BLD",9282,"KRN",101,"NM",1,0)
PX EDUCATION TOPICS ADD^^0
"BLD",9282,"KRN",101,"NM",2,0)
PX EDUCATION TOPICS CHANGE LOG^^0
"BLD",9282,"KRN",101,"NM",3,0)
PX EDUCATION TOPICS COPY^^0
"BLD",9282,"KRN",101,"NM",4,0)
PX EDUCATION TOPICS EDIT^^0
"BLD",9282,"KRN",101,"NM",5,0)
PX EDUCATION TOPICS INQUIRE^^0
"BLD",9282,"KRN",101,"NM",6,0)
PX EDUCATION TOPICS MANAGEMENT MENU^^0
"BLD",9282,"KRN",101,"NM",7,0)
PX EDUCATION TOPICS SELECT ENTRY^^0
"BLD",9282,"KRN",101,"NM",8,0)
PX EXAM ADD^^0
"BLD",9282,"KRN",101,"NM",9,0)
PX EXAM CHANGE LOG^^0
"BLD",9282,"KRN",101,"NM",10,0)
PX EXAM COPY^^0
"BLD",9282,"KRN",101,"NM",11,0)
PX EXAM EDIT^^0
"BLD",9282,"KRN",101,"NM",12,0)
PX EXAM INQUIRE^^0
"BLD",9282,"KRN",101,"NM",13,0)
PX EXAM MANAGEMENT MENU^^0
"BLD",9282,"KRN",101,"NM",14,0)
PX EXAM SELECT ENTRY^^0
"BLD",9282,"KRN",101,"NM",22,0)
PX HEALTH FACTOR ADD^^0
"BLD",9282,"KRN",101,"NM",23,0)
PX HEALTH FACTOR CHANGE LOG^^0
"BLD",9282,"KRN",101,"NM",24,0)
PX HEALTH FACTOR COPY^^0
"BLD",9282,"KRN",101,"NM",25,0)
PX HEALTH FACTOR EDIT^^0
"BLD",9282,"KRN",101,"NM",26,0)
PX HEALTH FACTOR INQUIRE^^0
"BLD",9282,"KRN",101,"NM",27,0)
PX HEALTH FACTOR MANAGEMENT MENU^^0
"BLD",9282,"KRN",101,"NM",28,0)
PX HEALTH FACTOR SELECT ENTRY^^0
"BLD",9282,"KRN",101,"NM",32,0)
PXCE LEXICON REMOVE CODE(S)^^0
"BLD",9282,"KRN",101,"NM",33,0)
PXCE LEXICON SELECT CODE(S)^^0
"BLD",9282,"KRN",101,"NM",34,0)
PXCE LEXICON SELECT MENU^^0
"BLD",9282,"KRN",101,"NM",35,0)
PXCE ADD/EDIT MENU^^3
"BLD",9282,"KRN",101,"NM",36,0)
PXCE STANDARD CODES ADD^^0
"BLD",9282,"KRN",101,"NM",37,0)
PXCE LEXICON SELECT ENTRY^^0
"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS ADD",1)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS CHANGE LOG",2)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS COPY",3)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS EDIT",4)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS INQUIRE",5)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS MANAGEMENT MENU",6)

"BLD",9282,"KRN",101,"NM","B","PX EDUCATION TOPICS SELECT ENTRY",7)

"BLD",9282,"KRN",101,"NM","B","PX EXAM ADD",8)

"BLD",9282,"KRN",101,"NM","B","PX EXAM CHANGE LOG",9)

"BLD",9282,"KRN",101,"NM","B","PX EXAM COPY",10)

"BLD",9282,"KRN",101,"NM","B","PX EXAM EDIT",11)

"BLD",9282,"KRN",101,"NM","B","PX EXAM INQUIRE",12)

"BLD",9282,"KRN",101,"NM","B","PX EXAM MANAGEMENT MENU",13)

"BLD",9282,"KRN",101,"NM","B","PX EXAM SELECT ENTRY",14)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR ADD",22)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR CHANGE LOG",23)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR COPY",24)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR EDIT",25)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR INQUIRE",26)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR MANAGEMENT MENU",27)

"BLD",9282,"KRN",101,"NM","B","PX HEALTH FACTOR SELECT ENTRY",28)

"BLD",9282,"KRN",101,"NM","B","PXCE ADD/EDIT MENU",35)

"BLD",9282,"KRN",101,"NM","B","PXCE LEXICON REMOVE CODE(S)",32)

"BLD",9282,"KRN",101,"NM","B","PXCE LEXICON SELECT CODE(S)",33)

"BLD",9282,"KRN",101,"NM","B","PXCE LEXICON SELECT ENTRY",37)

"BLD",9282,"KRN",101,"NM","B","PXCE LEXICON SELECT MENU",34)

"BLD",9282,"KRN",101,"NM","B","PXCE STANDARD CODES ADD",36)

"BLD",9282,"KRN",409.61,0)
409.61
"BLD",9282,"KRN",409.61,"NM",0)
^9.68A^6^5
"BLD",9282,"KRN",409.61,"NM",1,0)
PX EDUCATION TOPICS MANAGEMENT^^0
"BLD",9282,"KRN",409.61,"NM",2,0)
PX EXAM MANAGEMENT^^0
"BLD",9282,"KRN",409.61,"NM",4,0)
PX HEALTH FACTOR MANAGEMENT^^0
"BLD",9282,"KRN",409.61,"NM",5,0)
PXCE STANDARD CODES SELECT^^0
"BLD",9282,"KRN",409.61,"NM",6,0)
PXCE ADD/EDIT MENU^^0
"BLD",9282,"KRN",409.61,"NM","B","PX EDUCATION TOPICS MANAGEMENT",1)

"BLD",9282,"KRN",409.61,"NM","B","PX EXAM MANAGEMENT",2)

"BLD",9282,"KRN",409.61,"NM","B","PX HEALTH FACTOR MANAGEMENT",4)

"BLD",9282,"KRN",409.61,"NM","B","PXCE ADD/EDIT MENU",6)

"BLD",9282,"KRN",409.61,"NM","B","PXCE STANDARD CODES SELECT",5)

"BLD",9282,"KRN",771,0)
771
"BLD",9282,"KRN",779.2,0)
779.2
"BLD",9282,"KRN",870,0)
870
"BLD",9282,"KRN",8989.51,0)
8989.51
"BLD",9282,"KRN",8989.52,0)
8989.52
"BLD",9282,"KRN",8994,0)
8994
"BLD",9282,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",9282,"KRN","B",.4,.4)

"BLD",9282,"KRN","B",.401,.401)

"BLD",9282,"KRN","B",.402,.402)

"BLD",9282,"KRN","B",.403,.403)

"BLD",9282,"KRN","B",.5,.5)

"BLD",9282,"KRN","B",.84,.84)

"BLD",9282,"KRN","B",3.6,3.6)

"BLD",9282,"KRN","B",3.8,3.8)

"BLD",9282,"KRN","B",9.2,9.2)

"BLD",9282,"KRN","B",9.8,9.8)

"BLD",9282,"KRN","B",19,19)

"BLD",9282,"KRN","B",19.1,19.1)

"BLD",9282,"KRN","B",101,101)

"BLD",9282,"KRN","B",409.61,409.61)

"BLD",9282,"KRN","B",771,771)

"BLD",9282,"KRN","B",779.2,779.2)

"BLD",9282,"KRN","B",870,870)

"BLD",9282,"KRN","B",8989.51,8989.51)

"BLD",9282,"KRN","B",8989.52,8989.52)

"BLD",9282,"KRN","B",8994,8994)

"BLD",9282,"PRE")
PXP211EC
"BLD",9282,"PRET")
PRETRAN^ZZPXNATC
"BLD",9282,"QUES",0)
^9.62^^
"BLD",9282,"REQB",0)
^9.611^4^4
"BLD",9282,"REQB",1,0)
LEX*2.0*102^1
"BLD",9282,"REQB",2,0)
XU*8.0*657^1
"BLD",9282,"REQB",3,0)
PX*1.0*216^1
"BLD",9282,"REQB",4,0)
DI*22.2*3^1
"BLD",9282,"REQB","B","DI*22.2*3",4)

"BLD",9282,"REQB","B","LEX*2.0*102",1)

"BLD",9282,"REQB","B","PX*1.0*216",3)

"BLD",9282,"REQB","B","XU*8.0*657",2)

"DATA",9999999.09,41,0)
VA-NATIONAL CLASS TEST^^^National Class Test
"DATA",9999999.09,41,100)
N
"DATA",9999999.09,41,110,0)
^9999999.1DA^1^1
"DATA",9999999.09,41,110,1,0)
3161103.085906^1342
"DATA",9999999.09,41,110,1,1,0)
^^1^1^3161103
"DATA",9999999.09,41,110,1,1,1,0)
 Creation.
"DATA",9999999.09,41,201,0)
^^5^5^3161103^
"DATA",9999999.09,41,201,1,0)
This Education Topic has been created solely for testing purposes; it
"DATA",9999999.09,41,201,2,0)
has a national Class and should not be editable. Do not record this
"DATA",9999999.09,41,201,3,0)
Education Topic as being given to a patient; it will be deleted when
"DATA",9999999.09,41,201,4,0)
testing is complete.
"DATA",9999999.09,41,201,5,0)

"DATA",9999999.15,30,0)
VA-NATIONAL CLASS TEST
"DATA",9999999.15,30,100)
N
"DATA",9999999.15,30,110,0)
^9999999.16DA^1^1
"DATA",9999999.15,30,110,1,0)
3161103.090019^1342
"DATA",9999999.15,30,110,1,1,0)
^^1^1^3161103
"DATA",9999999.15,30,110,1,1,1,0)
 Creation.
"DATA",9999999.15,30,200)
National Class Test
"DATA",9999999.15,30,201,0)
^^4^4^3161103^
"DATA",9999999.15,30,201,1,0)
This Exam has been created solely for testing purposes; it has a
"DATA",9999999.15,30,201,2,0)
national Class and should not be editable. Do not record this Exam as
"DATA",9999999.15,30,201,3,0)
being given to a patient; it will be deleted when testing is complete.
"DATA",9999999.15,30,201,4,0)

"DATA",9999999.64,7060,0)
VA-NATIONAL CLASS TEST^^41^^^^^N^^F
"DATA",9999999.64,7060,100)
N
"DATA",9999999.64,7060,110,0)
^9999999.65DA^1^1
"DATA",9999999.64,7060,110,1,0)
3161103.090226^1342
"DATA",9999999.64,7060,110,1,1,0)
^^1^1^3161103
"DATA",9999999.64,7060,110,1,1,1,0)
 Creation.
"DATA",9999999.64,7060,200)
National Class Test
"DATA",9999999.64,7060,201,0)
^^5^5^3161103^
"DATA",9999999.64,7060,201,1,0)
This Health Factor has been created solely for testing purposes; it has
"DATA",9999999.64,7060,201,2,0)
a national Class and should not be editable. Do not record this Health
"DATA",9999999.64,7060,201,3,0)
Factor as being given to a patient; it will be deleted when testing is
"DATA",9999999.64,7060,201,4,0)
complete.
"DATA",9999999.64,7060,201,5,0)

"FIA",815)
PCE PARAMETERS
"FIA",815,0)
^PX(815,
"FIA",815,0,0)
815
"FIA",815,0,1)
y^y^f^^^^n
"FIA",815,0,10)

"FIA",815,0,11)

"FIA",815,0,"RLRO")

"FIA",815,0,"VR")
1.0^PX
"FIA",815,815)
0
"FIA",815,815.0401)
0
"FIA",815,815.0701)
0
"FIA",815,815.0702)
0
"FIA",815,815.0801)
0
"FIA",815,815.0802)
0
"FIA",815,815.0803)
0
"FIA",815,815.0804)
0
"FIA",815,815.0805)
0
"FIA",9000010.07)
V POV
"FIA",9000010.07,0)
^AUPNVPOV(
"FIA",9000010.07,0,0)
9000010.07IP
"FIA",9000010.07,0,1)
y^y^f^^^^n
"FIA",9000010.07,0,10)

"FIA",9000010.07,0,11)

"FIA",9000010.07,0,"RLRO")

"FIA",9000010.07,0,"VR")
1.0^PX
"FIA",9000010.07,9000010.07)
0
"FIA",9000010.13)
V EXAM
"FIA",9000010.13,0)
^AUPNVXAM(
"FIA",9000010.13,0,0)
9000010.13IP
"FIA",9000010.13,0,1)
y^y^f^^^^n
"FIA",9000010.13,0,10)

"FIA",9000010.13,0,11)

"FIA",9000010.13,0,"RLRO")

"FIA",9000010.13,0,"VR")
1.0^PX
"FIA",9000010.13,9000010.13)
0
"FIA",9000010.16)
V PATIENT ED
"FIA",9000010.16,0)
^AUPNVPED(
"FIA",9000010.16,0,0)
9000010.16IP
"FIA",9000010.16,0,1)
y^y^f^^^^n
"FIA",9000010.16,0,10)

"FIA",9000010.16,0,11)

"FIA",9000010.16,0,"RLRO")

"FIA",9000010.16,0,"VR")
1.0^PX
"FIA",9000010.16,9000010.16)
0
"FIA",9000010.18)
V CPT
"FIA",9000010.18,0)
^AUPNVCPT(
"FIA",9000010.18,0,0)
9000010.18IP
"FIA",9000010.18,0,1)
y^y^f^^^^n
"FIA",9000010.18,0,10)

"FIA",9000010.18,0,11)

"FIA",9000010.18,0,"RLRO")

"FIA",9000010.18,0,"VR")
1.0^PX
"FIA",9000010.18,9000010.18)
0
"FIA",9000010.18,9000010.181)
0
"FIA",9000010.23)
V HEALTH FACTORS
"FIA",9000010.23,0)
^AUPNVHF(
"FIA",9000010.23,0,0)
9000010.23IP
"FIA",9000010.23,0,1)
y^y^f^^^^n
"FIA",9000010.23,0,10)

"FIA",9000010.23,0,11)

"FIA",9000010.23,0,"RLRO")

"FIA",9000010.23,0,"VR")
1.0^PX
"FIA",9000010.23,9000010.23)
0
"FIA",9000010.71)
V STANDARD CODES
"FIA",9000010.71,0)
^AUPNVSC(
"FIA",9000010.71,0,0)
9000010.71
"FIA",9000010.71,0,1)
y^y^f^^^^n
"FIA",9000010.71,0,10)

"FIA",9000010.71,0,11)

"FIA",9000010.71,0,"RLRO")

"FIA",9000010.71,0,"VR")
1.0^PX
"FIA",9000010.71,9000010.71)
0
"FIA",9999999.09)
EDUCATION TOPICS
"FIA",9999999.09,0)
^AUTTEDT(
"FIA",9999999.09,0,0)
9999999.09I
"FIA",9999999.09,0,1)
y^y^f^^n^^y^o^n
"FIA",9999999.09,0,10)

"FIA",9999999.09,0,11)
I Y=41
"FIA",9999999.09,0,"RLRO")

"FIA",9999999.09,0,"VR")
1.0^PX
"FIA",9999999.09,9999999.09)
0
"FIA",9999999.09,9999999.091001)
0
"FIA",9999999.09,9999999.0911)
0
"FIA",9999999.09,9999999.0912)
0
"FIA",9999999.09,9999999.1)
0
"FIA",9999999.09,9999999.11)
0
"FIA",9999999.09,9999999.12)
0
"FIA",9999999.09,9999999.9201)
0
"FIA",9999999.15)
EXAM
"FIA",9999999.15,0)
^AUTTEXAM(
"FIA",9999999.15,0,0)
9999999.15I
"FIA",9999999.15,0,1)
y^y^f^^n^^y^^n
"FIA",9999999.15,0,10)

"FIA",9999999.15,0,11)
I Y=30
"FIA",9999999.15,0,"RLRO")

"FIA",9999999.15,0,"VR")
1.0^PX
"FIA",9999999.15,9999999.15)
0
"FIA",9999999.15,9999999.15201)
0
"FIA",9999999.15,9999999.16)
0
"FIA",9999999.15,9999999.162)
0
"FIA",9999999.15,9999999.18)
0
"FIA",9999999.64)
HEALTH FACTORS
"FIA",9999999.64,0)
^AUTTHF(
"FIA",9999999.64,0,0)
9999999.64I
"FIA",9999999.64,0,1)
y^y^f^^n^^y^o^n
"FIA",9999999.64,0,10)

"FIA",9999999.64,0,11)
I Y=7060
"FIA",9999999.64,0,"RLRO")

"FIA",9999999.64,0,"VR")
1.0^PX
"FIA",9999999.64,9999999.64)
0
"FIA",9999999.64,9999999.641101)
0
"FIA",9999999.64,9999999.64201)
0
"FIA",9999999.64,9999999.65)
0
"FIA",9999999.64,9999999.652)
0
"FIA",9999999.64,9999999.66)
0
"INI")
PRE^PXP211I
"INIT")
POST^PXP211I
"IX",9000010.07,9000010.07,"ACR",0)
9000010.07^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.07^^^^^A
"IX",9000010.07,9000010.07,"ACR",.1,0)
^^8^8^3131009^^^^
"IX",9000010.07,9000010.07,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.07,9000010.07,"ACR",.1,2,0)
all patients with a particular diagnosis code and one for finding all
"IX",9000010.07,9000010.07,"ACR",.1,3,0)
the diagnosis codes a patient has.
"IX",9000010.07,9000010.07,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.07,9000010.07,"ACR",.1,5,0)
 ^PXRMINDX(9000010.07,"IPP",ICD IEN,PS,DFN,VISIT DATE,DAS) and
"IX",9000010.07,9000010.07,"ACR",.1,6,0)
 ^PXRMINDX(9000010.07,"PPI",DFN,PS,ICD IEN,VISIT DATE,DAS)
"IX",9000010.07,9000010.07,"ACR",.1,7,0)
respectively. PS is the primary/secondary code. Possible values are P (primary), S (secondary) or U (undefined).
"IX",9000010.07,9000010.07,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.07,9000010.07,"ACR",1)
D SVFILEC^PXPXRM(9000010.07,.X,.DA)
"IX",9000010.07,9000010.07,"ACR",2)
D KVFILEC^PXPXRM(9000010.07,.X,.DA)
"IX",9000010.07,9000010.07,"ACR",2.5)
K ^PXRMINDX(9000010.07)
"IX",9000010.07,9000010.07,"ACR",11.1,0)
^.114IA^4^4
"IX",9000010.07,9000010.07,"ACR",11.1,1,0)
1^F^9000010.07^.01^^1^F
"IX",9000010.07,9000010.07,"ACR",11.1,2,0)
2^F^9000010.07^.02^^2^F
"IX",9000010.07,9000010.07,"ACR",11.1,3,0)
3^F^9000010.07^.03^^3^F
"IX",9000010.07,9000010.07,"ACR",11.1,4,0)
4^F^9000010.07^.12
"IX",9000010.07,9000010.07,"SC",0)
9000010.07^SC^Create an index of mappped source and code.^R^^R^IR^I^9000010.07^^^^^LS
"IX",9000010.07,9000010.07,"SC",1)
S ^AUPNVPOV("SC",$E(X(1),1,40),X(2),DA)=""
"IX",9000010.07,9000010.07,"SC",2)
K ^AUPNVPOV("SC",$E(X(1),1,40),X(2),DA)
"IX",9000010.07,9000010.07,"SC",2.5)
K ^AUPNVPOV("SC")
"IX",9000010.07,9000010.07,"SC",11.1,0)
^.114IA^2^2
"IX",9000010.07,9000010.07,"SC",11.1,1,0)
1^F^9000010.07^300^40^1^F
"IX",9000010.07,9000010.07,"SC",11.1,2,0)
2^F^9000010.07^.01^^2^F
"IX",9000010.13,9000010.13,"ACR",0)
9000010.13^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.13^^^^^A
"IX",9000010.13,9000010.13,"ACR",.1,0)
^^8^8^3041008
"IX",9000010.13,9000010.13,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.13,9000010.13,"ACR",.1,2,0)
all patients with a particular exam and one for finding all
"IX",9000010.13,9000010.13,"ACR",.1,3,0)
the exams a patient has.
"IX",9000010.13,9000010.13,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.13,9000010.13,"ACR",.1,5,0)
 ^PXRMINDX(9000010.13,"IP",EXAM,DFN,VISIT DATE,DAS) and
"IX",9000010.13,9000010.13,"ACR",.1,6,0)
 ^PXRMINDX(9000010.13,"PI",DFN,EXAM,VISIT DATE,DAS)
"IX",9000010.13,9000010.13,"ACR",.1,7,0)
respectively.
"IX",9000010.13,9000010.13,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.13,9000010.13,"ACR",1)
D SVFILE^PXPXRM(9000010.13,.X,.DA)
"IX",9000010.13,9000010.13,"ACR",2)
D KVFILE^PXPXRM(9000010.13,.X,.DA)
"IX",9000010.13,9000010.13,"ACR",2.5)
K ^PXRMINDX(9000010.13)
"IX",9000010.13,9000010.13,"ACR",11.1,0)
^.114IA^3^3
"IX",9000010.13,9000010.13,"ACR",11.1,1,0)
1^F^9000010.13^.01^^1^F
"IX",9000010.13,9000010.13,"ACR",11.1,2,0)
2^F^9000010.13^.02^^2^F
"IX",9000010.13,9000010.13,"ACR",11.1,3,0)
3^F^9000010.13^.03^^3^F
"IX",9000010.16,9000010.16,"ACR",0)
9000010.16^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.16^^^^^A
"IX",9000010.16,9000010.16,"ACR",.1,0)
^^8^8^3041008
"IX",9000010.16,9000010.16,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.16,9000010.16,"ACR",.1,2,0)
all patients with a particular education topic and one for finding all
"IX",9000010.16,9000010.16,"ACR",.1,3,0)
the education topics a patient has.
"IX",9000010.16,9000010.16,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.16,9000010.16,"ACR",.1,5,0)
 ^PXRMINDX(9000010.16,"IP",EDUCATION TOPIC,DFN,VISIT DATE,DAS) and
"IX",9000010.16,9000010.16,"ACR",.1,6,0)
 ^PXRMINDX(9000010.16,"PI",DFN,EDUCATION TOPIC,VISIT DATE,DAS)
"IX",9000010.16,9000010.16,"ACR",.1,7,0)
respectively.
"IX",9000010.16,9000010.16,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.16,9000010.16,"ACR",1)
D SVFILE^PXPXRM(9000010.16,.X,.DA)
"IX",9000010.16,9000010.16,"ACR",2)
D KVFILE^PXPXRM(9000010.16,.X,.DA)
"IX",9000010.16,9000010.16,"ACR",2.5)
K ^PXRMINDX(9000010.16)
"IX",9000010.16,9000010.16,"ACR",11.1,0)
^.114IA^3^3
"IX",9000010.16,9000010.16,"ACR",11.1,1,0)
1^F^9000010.16^.01^^1^F
"IX",9000010.16,9000010.16,"ACR",11.1,2,0)
2^F^9000010.16^.02^^2^F
"IX",9000010.16,9000010.16,"ACR",11.1,3,0)
3^F^9000010.16^.03^^3^F
"IX",9000010.18,9000010.18,"ACR",0)
9000010.18^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.18^^^^^A
"IX",9000010.18,9000010.18,"ACR",.1,0)
^^8^8^3041012
"IX",9000010.18,9000010.18,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.18,9000010.18,"ACR",.1,2,0)
all patients with a particular CPT code and one for finding all
"IX",9000010.18,9000010.18,"ACR",.1,3,0)
the CPT codes a patient has.
"IX",9000010.18,9000010.18,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.18,9000010.18,"ACR",.1,5,0)
 ^PXRMINDX(9000010.18,"IPP",CPT CODE,PP,DFN,VISIT DATE,DAS) and
"IX",9000010.18,9000010.18,"ACR",.1,6,0)
 ^PXRMINDX(9000010.18,"PPI",DFN,PP,CPT CODE,VISIT DATE,DAS)
"IX",9000010.18,9000010.18,"ACR",.1,7,0)
respectively. PP is the principal procedure code. Possible values are Y (yes), N (no) or U (undefined).
"IX",9000010.18,9000010.18,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.18,9000010.18,"ACR",1)
D SVFILEC^PXPXRM(9000010.18,.X,.DA)
"IX",9000010.18,9000010.18,"ACR",2)
D KVFILEC^PXPXRM(9000010.18,.X,.DA)
"IX",9000010.18,9000010.18,"ACR",2.5)
K ^PXRMINDX(9000010.18)
"IX",9000010.18,9000010.18,"ACR",11.1,0)
^.114IA^4^4
"IX",9000010.18,9000010.18,"ACR",11.1,1,0)
1^F^9000010.18^.01^^1^F
"IX",9000010.18,9000010.18,"ACR",11.1,2,0)
2^F^9000010.18^.02^^2^F
"IX",9000010.18,9000010.18,"ACR",11.1,3,0)
3^F^9000010.18^.03^^3^F
"IX",9000010.18,9000010.18,"ACR",11.1,4,0)
4^F^9000010.18^.07
"IX",9000010.18,9000010.18,"SC",0)
9000010.18^SC^Create an index of mapped source and code.^R^^R^IR^I^9000010.18^^^^^LS
"IX",9000010.18,9000010.18,"SC",1)
S ^AUPNVCPT("SC",$E(X(1),1,40),X(2),DA)=""
"IX",9000010.18,9000010.18,"SC",2)
K ^AUPNVCPT("SC",$E(X(1),1,40),X(2),DA)
"IX",9000010.18,9000010.18,"SC",2.5)
K ^AUPNVCPT("SC")
"IX",9000010.18,9000010.18,"SC",11.1,0)
^.114IA^2^2
"IX",9000010.18,9000010.18,"SC",11.1,1,0)
1^F^9000010.18^300^40^1^F
"IX",9000010.18,9000010.18,"SC",11.1,2,0)
2^F^9000010.18^.01^^2^F
"IX",9000010.23,9000010.23,"ACR",0)
9000010.23^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.23^^^^^A
"IX",9000010.23,9000010.23,"ACR",.1,0)
^^8^8^3041008
"IX",9000010.23,9000010.23,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.23,9000010.23,"ACR",.1,2,0)
all patients with a particular health factor and one for finding all
"IX",9000010.23,9000010.23,"ACR",.1,3,0)
the health factors a patient has.
"IX",9000010.23,9000010.23,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.23,9000010.23,"ACR",.1,5,0)
 ^PXRMINDX(9000010.23,"IP",HEALTH FACTOR,DFN,VISIT DATE,DAS) and
"IX",9000010.23,9000010.23,"ACR",.1,6,0)
 ^PXRMINDX(9000010.23,"PI",DFN,HEALTH FACTOR,VISIT DATE,DAS)
"IX",9000010.23,9000010.23,"ACR",.1,7,0)
respectively.
"IX",9000010.23,9000010.23,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.23,9000010.23,"ACR",1)
D SVFILE^PXPXRM(9000010.23,.X,.DA)
"IX",9000010.23,9000010.23,"ACR",2)
D KVFILE^PXPXRM(9000010.23,.X,.DA)
"IX",9000010.23,9000010.23,"ACR",2.5)
K ^PXRMINDX(9000010.23)
"IX",9000010.23,9000010.23,"ACR",11.1,0)
^.114IA^3^3
"IX",9000010.23,9000010.23,"ACR",11.1,1,0)
1^F^9000010.23^.01^^1^F
"IX",9000010.23,9000010.23,"ACR",11.1,2,0)
2^F^9000010.23^.02^^2^F
"IX",9000010.23,9000010.23,"ACR",11.1,3,0)
3^F^9000010.23^.03^^3^F
"IX",9000010.23,9000010.23,"AED",0)
9000010.23^AED^AED,EVENT DATE AND TIME,DATA SOURCE,DA^R^^R^IR^I^9000010.23^^^^^S
"IX",9000010.23,9000010.23,"AED",.1,0)
^^2^2^3041008
"IX",9000010.23,9000010.23,"AED",.1,1,0)
This cross-reference creates an index of the Event
"IX",9000010.23,9000010.23,"AED",.1,2,0)
Date and Time field and the Data Source field.
"IX",9000010.23,9000010.23,"AED",1)
S ^AUPNVHF("AED",X(1),X(3),X(2),DA)=""
"IX",9000010.23,9000010.23,"AED",2)
K ^AUPNVHF("AED",X(1),X(3),X(2),DA)
"IX",9000010.23,9000010.23,"AED",2.5)
K ^AUPNVHF("AED")
"IX",9000010.23,9000010.23,"AED",11.1,0)
^.114IA^3^3
"IX",9000010.23,9000010.23,"AED",11.1,1,0)
1^F^9000010.23^1201^^1^F
"IX",9000010.23,9000010.23,"AED",11.1,2,0)
2^F^9000010.23^81203^^3^F
"IX",9000010.23,9000010.23,"AED",11.1,3,0)
3^F^9000010.23^.02^^2^F
"IX",9000010.71,9000010.71,"ACR",0)
9000010.71^ACR^Clinical Reminders index^MU^^R^IR^I^9000010.71^^^^^A
"IX",9000010.71,9000010.71,"ACR",.1,0)
^^11^11^3160204^
"IX",9000010.71,9000010.71,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding all patients
"IX",9000010.71,9000010.71,"ACR",.1,2,0)
with a particular (coding system, code) and one for finding all the
"IX",9000010.71,9000010.71,"ACR",.1,3,0)
(coding system, codes) a patient has. The indexes are stored in the
"IX",9000010.71,9000010.71,"ACR",.1,4,0)
Clinical Reminders index global as:
"IX",9000010.71,9000010.71,"ACR",.1,5,0)
 ^PXRMINDX(9000010.71,"IP",CODING SYSTEM,CODE,DFN,DATE,DAS)
"IX",9000010.71,9000010.71,"ACR",.1,6,0)
and
"IX",9000010.71,9000010.71,"ACR",.1,7,0)
 ^PXRMINDX(9000010.71,"PI",DFN,CODING SYSTEM,CODE,DATE,DAS)
"IX",9000010.71,9000010.71,"ACR",.1,8,0)
respectively. DATE is Event Date/Time, if it exists, otherwise it is the
"IX",9000010.71,9000010.71,"ACR",.1,9,0)
Visit Date/Time. For all the details, see the Clinical Reminders Index
"IX",9000010.71,9000010.71,"ACR",.1,10,0)
Technical Guide/Programmer's Manual.
"IX",9000010.71,9000010.71,"ACR",.1,11,0)

"IX",9000010.71,9000010.71,"ACR",1)
D SVSC^PXVSC(.X,.DA)
"IX",9000010.71,9000010.71,"ACR",2)
D KVSC^PXVSC(.X,.DA)
"IX",9000010.71,9000010.71,"ACR",11.1,0)
^.114IA^4^4
"IX",9000010.71,9000010.71,"ACR",11.1,1,0)
1^F^9000010.71^.05^^1^F
"IX",9000010.71,9000010.71,"ACR",11.1,1,3)

"IX",9000010.71,9000010.71,"ACR",11.1,2,0)
2^F^9000010.71^.01^^2^F
"IX",9000010.71,9000010.71,"ACR",11.1,2,3)

"IX",9000010.71,9000010.71,"ACR",11.1,3,0)
3^F^9000010.71^.02^^3^F
"IX",9000010.71,9000010.71,"ACR",11.1,3,3)

"IX",9000010.71,9000010.71,"ACR",11.1,4,0)
4^F^9000010.71^.03^^4^F
"IX",9000010.71,9000010.71,"ACR",11.1,4,3)

"IX",9000010.71,9000010.71,"AD",0)
9000010.71^AD^VISIT index^MU^^F^IR^I^9000010.71^^^^^A
"IX",9000010.71,9000010.71,"AD",.1,0)
^^3^3^3160808^
"IX",9000010.71,9000010.71,"AD",.1,1,0)
This cross-reference is used for searches by the visit pointer and internal
"IX",9000010.71,9000010.71,"AD",.1,2,0)
entry number.
"IX",9000010.71,9000010.71,"AD",.1,3,0)

"IX",9000010.71,9000010.71,"AD",1)
S ^AUPNVSC("AD",X,DA)=""
"IX",9000010.71,9000010.71,"AD",2)
K ^AUPNVSC("AD",X,DA)
"IX",9000010.71,9000010.71,"AD",11.1,0)
^.114IA^1^1
"IX",9000010.71,9000010.71,"AD",11.1,1,0)
1^F^9000010.71^.03^^1^F
"IX",9000010.71,9000010.71,"SCC",0)
9000010.71^SCC^Create index of mapped source, coding system, and code.^R^^R^IR^I^9000010.71^^^^^LS
"IX",9000010.71,9000010.71,"SCC",1)
S ^AUPNVSC("SCC",$E(X(1),1,40),$E(X(2),1,7),$E(X(3),1,40),DA)=""
"IX",9000010.71,9000010.71,"SCC",2)
K ^AUPNVSC("SCC",$E(X(1),1,40),$E(X(2),1,7),$E(X(3),1,40),DA)
"IX",9000010.71,9000010.71,"SCC",2.5)
K ^AUPNVSC("SCC")
"IX",9000010.71,9000010.71,"SCC",11.1,0)
^.114IA^3^3
"IX",9000010.71,9000010.71,"SCC",11.1,1,0)
1^F^9000010.71^300^40^1^F
"IX",9000010.71,9000010.71,"SCC",11.1,2,0)
2^F^9000010.71^.05^7^2^F
"IX",9000010.71,9000010.71,"SCC",11.1,3,0)
3^F^9000010.71^.01^40^3^F
"IX",9999999.09,9999999.09,"B",0)
9999999.09^B^New-style "B" cross-reference.^R^^F^IR^I^9999999.09^^^^^LS
"IX",9999999.09,9999999.09,"B",1)
S ^AUTTEDT("B",$E(X,1,70),DA)=""
"IX",9999999.09,9999999.09,"B",2)
K ^AUTTEDT("B",$E(X,1,70),DA)
"IX",9999999.09,9999999.09,"B",2.5)
K ^AUTTEDT("B")
"IX",9999999.09,9999999.09,"B",11.1,0)
^.114IA^1^1
"IX",9999999.09,9999999.09,"B",11.1,1,0)
1^F^9999999.09^.01^70^1^F
"IX",9999999.09,9999999.11,"ADT",0)
9999999.11^ADT^Set the date/time when a code is mapped.^MU^^F^IR^I^9999999.11^^^^^A
"IX",9999999.09,9999999.11,"ADT",1)
S $P(^AUTTEDT(DA(1),210,DA,0),U,3)=$$NOW^XLFDT
"IX",9999999.09,9999999.11,"ADT",2)
S $P(^AUTTEDT(DA(1),210,DA,0),U,3)=""
"IX",9999999.09,9999999.11,"ADT",11.1,0)
^.114IA^1^1
"IX",9999999.09,9999999.11,"ADT",11.1,1,0)
1^F^9999999.11^1^^1^F
"IX",9999999.15,9999999.15,"B",0)
9999999.15^B^New-style "B" cross-reference.^R^^F^IR^I^9999999.15^^^^^LS
"IX",9999999.15,9999999.15,"B",1)
S ^AUTTEXAM("B",$E(X,1,64),DA)=""
"IX",9999999.15,9999999.15,"B",2)
K ^AUTTEXAM("B",$E(X,1,64),DA)
"IX",9999999.15,9999999.15,"B",2.5)
K ^AUTTEXAM("B")
"IX",9999999.15,9999999.15,"B",11.1,0)
^.114IA^1^1
"IX",9999999.15,9999999.15,"B",11.1,1,0)
1^F^9999999.15^.01^64^1^F
"IX",9999999.15,9999999.18,"ADT",0)
9999999.18^ADT^Set the date/time when a code is mapped.^MU^^F^IR^I^9999999.18^^^^^A
"IX",9999999.15,9999999.18,"ADT",1)
S $P(^AUTTEXAM(DA(1),210,DA,0),U,3)=$$NOW^XLFDT
"IX",9999999.15,9999999.18,"ADT",2)
S $P(^AUTTEXAM(DA(1),210,DA,0),U,3)=""
"IX",9999999.15,9999999.18,"ADT",11.1,0)
^.114IA^1^1
"IX",9999999.15,9999999.18,"ADT",11.1,1,0)
1^F^9999999.18^1^^1^F
"IX",9999999.64,9999999.64,"B",0)
9999999.64^B^New-style B cross-reference^R^^F^IR^I^9999999.64^^^^^LS
"IX",9999999.64,9999999.64,"B",1)
S ^AUTTHF("B",$E(X,1,64),DA)=""
"IX",9999999.64,9999999.64,"B",2)
K ^AUTTHF("B",$E(X,1,64),DA)
"IX",9999999.64,9999999.64,"B",2.5)
K ^AUTTHF("B")
"IX",9999999.64,9999999.64,"B",11.1,0)
^.114IA^1^1
"IX",9999999.64,9999999.64,"B",11.1,1,0)
1^F^9999999.64^.01^64^1^F
"IX",9999999.64,9999999.66,"ADT",0)
9999999.66^ADT^Set the date/time when a code is mapped.^MU^^F^IR^I^9999999.66^^^^^A
"IX",9999999.64,9999999.66,"ADT",1)
S $P(^AUTTHF(DA(1),210,DA,0),U,3)=$$NOW^XLFDT
"IX",9999999.64,9999999.66,"ADT",2)
S $P(^AUTTHF(DA(1),210,DA,0),U,3)=""
"IX",9999999.64,9999999.66,"ADT",11.1,0)
^.114IA^1^1
"IX",9999999.64,9999999.66,"ADT",11.1,1,0)
1^F^9999999.66^1^^1^F
"KEY",9999999.09,9999999.09,"A",0)
9999999.09^A^P^769
"KEY",9999999.09,9999999.09,"A",2,0)
^.312IA^1^1
"KEY",9999999.09,9999999.09,"A",2,1,0)
.01^9999999.09^1
"KEY",9999999.15,9999999.15,"A",0)
9999999.15^A^P^768
"KEY",9999999.15,9999999.15,"A",2,0)
^.312IA^1^1
"KEY",9999999.15,9999999.15,"A",2,1,0)
.01^9999999.15^1
"KEY",9999999.64,9999999.64,"A",0)
9999999.64^A^P^767
"KEY",9999999.64,9999999.64,"A",2,0)
^.312IA^1^1
"KEY",9999999.64,9999999.64,"A",2,1,0)
.01^9999999.64^1
"KEYPTR",9999999.09,9999999.09,"A")
9999999.09^B
"KEYPTR",9999999.15,9999999.15,"A")
9999999.15^B
"KEYPTR",9999999.64,9999999.64,"A")
9999999.64^B
"KRN",.403,136,-1)
0^11
"KRN",.403,136,0)
PX EDUCATION TOPIC EDIT^@^@^^3150911.1515^^^9999999.09^0^0^1
"KRN",.403,136,14)
D FPOSTSAV^PXEDUSM(.DA)
"KRN",.403,136,20)
D FDATAVAL^PXEDUSM(.DA)
"KRN",.403,136,40,0)
^.4031I^2^2
"KRN",.403,136,40,1,0)
1^^1,1
"KRN",.403,136,40,1,1)
Page 1
"KRN",.403,136,40,1,40,0)
^.4032IP^566^2
"KRN",.403,136,40,1,40,564,0)
PX EDUCATION TOPICS MAIN BLOCK^1^1,1^e
"KRN",.403,136,40,1,40,566,0)
PX EDU CODE MAPPINGS BLOCK^3^12,1^e
"KRN",.403,136,40,1,40,566,2)
2^^
"KRN",.403,136,40,1,40,566,11)
D MCBLKPRE^PXEDUSM(.DA)
"KRN",.403,136,40,2,0)
2^^1,1^^^1^15,79
"KRN",.403,136,40,2,1)
Page 2
"KRN",.403,136,40,2,40,0)
^.4032IP^577^2
"KRN",.403,136,40,2,40,576,0)
PX EDU SUBTOPICS^1^2,2^e
"KRN",.403,136,40,2,40,577,0)
PX EDU SUBTOPICS LIST^2^5,2^e
"KRN",.403,136,40,2,40,577,2)
5^^n
"KRN",.403,137,-1)
0^10
"KRN",.403,137,0)
PX EDUCATION TOPIC CHANGE LOG^@^@^^3151110.1422^^^9999999.09^0^0^1
"KRN",.403,137,40,0)
^.4031I^1^1
"KRN",.403,137,40,1,0)
1^^1,1
"KRN",.403,137,40,1,1)
Page 1
"KRN",.403,137,40,1,40,0)
^.4032IP^567^1
"KRN",.403,137,40,1,40,567,0)
PX EDUCATION TOPICS CHANGE LOG^1^1,1^e
"KRN",.403,138,-1)
0^4
"KRN",.403,138,0)
PX EXAM EDIT^@^@^^3151116.1151^^^9999999.15^0^0^1
"KRN",.403,138,14)
D FPOSTSAV^PXEXSM(.DA)
"KRN",.403,138,20)
D FDATAVAL^PXEXSM(.DA)
"KRN",.403,138,40,0)
^.4031I^1^1
"KRN",.403,138,40,1,0)
1^^1,1
"KRN",.403,138,40,1,1)
Page 1
"KRN",.403,138,40,1,40,0)
^.4032IP^569^2
"KRN",.403,138,40,1,40,568,0)
PX EXAM MAIN BLOCK^1^1,1^e
"KRN",.403,138,40,1,40,569,0)
PX EXAM CODE MAPPINGS BLOCK^2^11,1^e
"KRN",.403,138,40,1,40,569,2)
3^^
"KRN",.403,138,40,1,40,569,11)
D MCBLKPRE^PXEXSM(.DA)
"KRN",.403,139,-1)
0^2
"KRN",.403,139,0)
PX EXAM CHANGE LOG^@^@^^3151116.1456^^^9999999.15^0^0^1
"KRN",.403,139,40,0)
^.4031I^1^1
"KRN",.403,139,40,1,0)
1^^1,1
"KRN",.403,139,40,1,1)
Page 1
"KRN",.403,139,40,1,40,0)
^.4032IP^570^1
"KRN",.403,139,40,1,40,570,0)
PX EXAM CHANGE LOG^1^1,1^e
"KRN",.403,140,-1)
0^8
"KRN",.403,140,0)
PX HEALTH FACTOR EDIT^@^@^^3151127.1119^^^9999999.64^0^0^1
"KRN",.403,140,11)

"KRN",.403,140,14)
D FPOSTSAV^PXHFSM(.DA)
"KRN",.403,140,20)
D FDATAVAL^PXHFSM(.DA)
"KRN",.403,140,40,0)
^.4031I^2^2
"KRN",.403,140,40,1,0)
1^^1,1
"KRN",.403,140,40,1,1)
Page 1
"KRN",.403,140,40,1,40,0)
^.4032IP^572^2
"KRN",.403,140,40,1,40,571,0)
PX HEALTH FACTOR MAIN BLOCK^1^1,1^e
"KRN",.403,140,40,1,40,572,0)
PX HF CODE MAPPINGS BLOCK^2^13,1^e
"KRN",.403,140,40,1,40,572,2)
3
"KRN",.403,140,40,1,40,572,11)
D MCBLKPRE^PXHFSM(.DA)
"KRN",.403,140,40,2,0)
2^^1,1^^^1^15,75
"KRN",.403,140,40,2,1)
Page 2
"KRN",.403,140,40,2,40,0)
^.4032IP^575^2
"KRN",.403,140,40,2,40,574,0)
PX HF NOT USED WITH^1^2,2^e
"KRN",.403,140,40,2,40,574,2)
^^^^^
"KRN",.403,140,40,2,40,575,0)
PX HF NOT USED WITH LIST^2^5,2^e
"KRN",.403,140,40,2,40,575,2)
4^^n
"KRN",.403,141,-1)
0^7
"KRN",.403,141,0)
PX HEALTH FACTOR CHANGE LOG^@^@^^3151201.1111^^^9999999.64^0^0^1
"KRN",.403,141,40,0)
^.4031I^1^1
"KRN",.403,141,40,1,0)
1^^1,1
"KRN",.403,141,40,1,1)
Page 1
"KRN",.403,141,40,1,40,0)
^.4032IP^573^1
"KRN",.403,141,40,1,40,573,0)
PX HEALTH FACTOR CHANGE LOG^1^1,1^e
"KRN",.403,142,-1)
0^9
"KRN",.403,142,0)
PX VSC EDIT^@^@^^3160922.1028^^^9000010.71^0^0^1
"KRN",.403,142,40,0)
^.4031I^1^1
"KRN",.403,142,40,1,0)
1^^1,1
"KRN",.403,142,40,1,1)
Page 1
"KRN",.403,142,40,1,40,0)
^.4032IP^578^1
"KRN",.403,142,40,1,40,578,0)
PX VSC MAIN BLOCK^1^1,1^e
"KRN",.404,564,0)
PX EDUCATION TOPICS MAIN BLOCK^9999999.09
"KRN",.404,564,40,0)
^.4044I^19^17
"KRN",.404,564,40,1,0)
1^NAME^3
"KRN",.404,564,40,1,1)
.01
"KRN",.404,564,40,1,2)
1,7^70^1,1
"KRN",.404,564,40,2,0)
2^PRINT NAME^3
"KRN",.404,564,40,2,1)
.04
"KRN",.404,564,40,2,2)
2,13^64^2,1
"KRN",.404,564,40,3,0)
3^!M^3^^DESCRIPTION
"KRN",.404,564,40,3,.1)
S Y=$$WPECAP^PXSMAN(9999999.09,DA,"DESCRIPTION",63)
"KRN",.404,564,40,3,1)
201
"KRN",.404,564,40,3,2)
3,14^1^3,1^1
"KRN",.404,564,40,3,11)
D HLP^DDSUTL("Press Enter to edit the Description.")
"KRN",.404,564,40,4,0)
4^INACTIVE FLAG^3
"KRN",.404,564,40,4,1)
.03
"KRN",.404,564,40,4,2)
4,16^8^4,1
"KRN",.404,564,40,4,11)
D FSOC^PXSMAN(9999999.09,"INACTIVE FLAG")
"KRN",.404,564,40,5,0)
5^!M^3
"KRN",.404,564,40,5,.1)
S Y=$$WPECAP^PXSMAN(9999999.09,DA,"EDUCATIONAL OUTCOME",63)
"KRN",.404,564,40,5,1)
11
"KRN",.404,564,40,5,2)
5,21^1^5,1^1
"KRN",.404,564,40,5,11)
D HLP^DDSUTL("Press Enter to edit the Educational Outcome.")
"KRN",.404,564,40,6,0)
6^!M^3
"KRN",.404,564,40,6,.1)
S Y=$$WPECAP^PXSMAN(9999999.09,DA,"EDUCATIONAL STANDARDS",63)
"KRN",.404,564,40,6,1)
12
"KRN",.404,564,40,6,2)
6,23^1^6,1^1
"KRN",.404,564,40,6,11)
D HLP^DDSUTL("Press Enter to edit the Educational Standards.")
"KRN",.404,564,40,8,0)
12^Coding Sys^1
"KRN",.404,564,40,8,2)
^^13,1
"KRN",.404,564,40,9,0)
8^MIN VALUE^3^^MINIMUM VALUE
"KRN",.404,564,40,9,1)
220
"KRN",.404,564,40,9,2)
10,12^18^10,1
"KRN",.404,564,40,10,0)
9^MAX VALUE^3^^MAXIMUM VALUE
"KRN",.404,564,40,10,1)
221
"KRN",.404,564,40,10,2)
10,43^18^10,32
"KRN",.404,564,40,12,0)
16^CLASS^3
"KRN",.404,564,40,12,1)
100
"KRN",.404,564,40,12,2)
17,8^8^17,1
"KRN",.404,564,40,12,11)
D FSOC^PXSMAN(9999999.09,"CLASS")
"KRN",.404,564,40,13,0)
17^SPONSOR^3^^SPONSOR
"KRN",.404,564,40,13,1)
101
"KRN",.404,564,40,13,2)
17,27^53^17,18
"KRN",.404,564,40,14,0)
7^!M^2
"KRN",.404,564,40,14,.1)
S Y=$$STEXCAP^PXEDUSM(.DA)
"KRN",.404,564,40,14,2)
8,11^1^8,1^1
"KRN",.404,564,40,14,10)
S DDSSTACK=2
"KRN",.404,564,40,14,11)
D HLP^DDSUTL("Press Enter to edit the SUBTOPICS LIST.")
"KRN",.404,564,40,14,20)
Y
"KRN",.404,564,40,15,0)
13^Code^1
"KRN",.404,564,40,15,2)
^^13,28
"KRN",.404,564,40,16,0)
14^Linked^1
"KRN",.404,564,40,16,2)
^^13,55
"KRN",.404,564,40,17,0)
15^Unlink^1
"KRN",.404,564,40,17,2)
^^13,63
"KRN",.404,564,40,18,0)
10^MAX DECIMALS^3^^MAXIMUM DECIMALS
"KRN",.404,564,40,18,1)
222
"KRN",.404,564,40,18,2)
10,76^2^10,62
"KRN",.404,564,40,19,0)
11^UCUM CODE^3
"KRN",.404,564,40,19,1)
223
"KRN",.404,564,40,19,2)
11,12^68^11,1
"KRN",.404,566,0)
PX EDU CODE MAPPINGS BLOCK^9999999.11
"KRN",.404,566,40,0)
^.4044I^4^4
"KRN",.404,566,40,1,0)
1^^3^^CODING SYSTEM
"KRN",.404,566,40,1,1)
.01
"KRN",.404,566,40,1,2)
3,2^7
"KRN",.404,566,40,1,11)
D HLP^DDSUTL("Enter a coding system, type '?' for a list. To enter a second instance of a coding system, use quotes around the coding system abbreviation.")
"KRN",.404,566,40,1,13)
D CSYSPAOC^PXEDUSM(.DA)
"KRN",.404,566,40,2,0)
2^^3^^CODE
"KRN",.404,566,40,2,1)
1
"KRN",.404,566,40,2,2)
3,13^40
"KRN",.404,566,40,2,11)
D CODEPRE^PXEDUSM(.DA)
"KRN",.404,566,40,2,13)
D CODEPAOC^PXEDUSM(.DA)
"KRN",.404,566,40,3,0)
3^!M^1
"KRN",.404,566,40,3,.1)
S Y=$$LINKED^PXEDUSM(.DA)
"KRN",.404,566,40,3,2)
^^3,57
"KRN",.404,566,40,4,0)
4^^2^^UNLINK
"KRN",.404,566,40,4,2)
3,65^1
"KRN",.404,566,40,4,4)
^^^1
"KRN",.404,566,40,4,11)
D HLP^DDSUTL("Enter Y if you want to unlink this code.")
"KRN",.404,566,40,4,20)
Y
"KRN",.404,566,40,4,21,0)
^^2^2^3160218^
"KRN",.404,566,40,4,21,1,0)
Enter "Y" to unlink this code. Test does this display?
"KRN",.404,566,40,4,21,2,0)

"KRN",.404,566,40,4,23)
D UNLINK^PXEDUSM(X,.DA)
"KRN",.404,567,0)
PX EDUCATION TOPICS CHANGE LOG^9999999.1
"KRN",.404,567,40,0)
^.4044I^3^3
"KRN",.404,567,40,1,0)
1^Change Log^1
"KRN",.404,567,40,1,2)
^^1,32
"KRN",.404,567,40,2,0)
2^!M^1
"KRN",.404,567,40,2,.1)
S Y="Edit by: "_$$GET^DDSVAL(9999999.1,.DA,1,,"E")_" on "_$$FMTE^XLFDT($$GET^DDSVAL(9999999.1,.DA,.01,,"I"),"5Z")
"KRN",.404,567,40,2,2)
^^3,1
"KRN",.404,567,40,3,0)
3^^3
"KRN",.404,567,40,3,1)
2
"KRN",.404,567,40,3,2)
5,1^1
"KRN",.404,567,40,3,11)
D HLP^DDSUTL("Press enter to add a description of the changes made.")
"KRN",.404,568,0)
PX EXAM MAIN BLOCK^9999999.15
"KRN",.404,568,40,0)
^.4044I^16^15
"KRN",.404,568,40,1,0)
1^NAME^3
"KRN",.404,568,40,1,1)
.01
"KRN",.404,568,40,1,2)
1,7^64^1,1
"KRN",.404,568,40,2,0)
2^PRINT NAME^3
"KRN",.404,568,40,2,1)
200
"KRN",.404,568,40,2,2)
2,13^64^2,1
"KRN",.404,568,40,3,0)
3^!M^3^^DESCRIPTION
"KRN",.404,568,40,3,.1)
S Y=$$WPECAP^PXSMAN(9999999.15,DA,"DESCRIPTION",63)
"KRN",.404,568,40,3,1)
201
"KRN",.404,568,40,3,2)
3,14^1^3,1^1
"KRN",.404,568,40,3,11)
D HLP^DDSUTL("Press Enter to edit the Description.")
"KRN",.404,568,40,4,0)
4^INACTIVE FLAG^3
"KRN",.404,568,40,4,1)
.04
"KRN",.404,568,40,4,2)
4,16^8^4,1
"KRN",.404,568,40,4,11)
D FSOC^PXSMAN(9999999.15,"INACTIVE FLAG")
"KRN",.404,568,40,6,0)
6^MIN^3^^MINIMUM VALUE
"KRN",.404,568,40,6,1)
220
"KRN",.404,568,40,6,2)
7,6^24^7,1
"KRN",.404,568,40,7,0)
7^MAX^3^^MAXIMUM VALUE
"KRN",.404,568,40,7,1)
221
"KRN",.404,568,40,7,2)
7,36^24^7,31
"KRN",.404,568,40,8,0)
9^UCUM CODE^3
"KRN",.404,568,40,8,1)
223
"KRN",.404,568,40,8,2)
8,12^68^8,1
"KRN",.404,568,40,9,0)
14^CLASS^3
"KRN",.404,568,40,9,1)
100
"KRN",.404,568,40,9,2)
16,8^8^16,1
"KRN",.404,568,40,9,11)
D FSOC^PXSMAN(9999999.15,"CLASS")
"KRN",.404,568,40,10,0)
15^SPONSOR^3
"KRN",.404,568,40,10,1)
101
"KRN",.404,568,40,10,2)
16,26^54^16,17
"KRN",.404,568,40,11,0)
5^SEX SPECIFIC^3
"KRN",.404,568,40,11,1)
.03
"KRN",.404,568,40,11,2)
5,15^6^5,1
"KRN",.404,568,40,11,11)
D FSOC^PXSMAN(9999999.15,"SEX SPECIFIC")
"KRN",.404,568,40,12,0)
10^Coding Sys^1
"KRN",.404,568,40,12,2)
^^10,1
"KRN",.404,568,40,13,0)
11^Code^1
"KRN",.404,568,40,13,2)
^^10,28
"KRN",.404,568,40,14,0)
12^Linked^1
"KRN",.404,568,40,14,2)
^^10,55
"KRN",.404,568,40,15,0)
13^Unlink^1
"KRN",.404,568,40,15,2)
^^10,63
"KRN",.404,568,40,16,0)
8^MAX DECIMALS^3^^MAXIMUM DECIMALS
"KRN",.404,568,40,16,1)
222
"KRN",.404,568,40,16,2)
7,75^2^7,61
"KRN",.404,569,0)
PX EXAM CODE MAPPINGS BLOCK^9999999.18
"KRN",.404,569,40,0)
^.4044I^4^4
"KRN",.404,569,40,1,0)
1^^3^^CODING SYSTEM
"KRN",.404,569,40,1,1)
.01
"KRN",.404,569,40,1,2)
1,2^7
"KRN",.404,569,40,1,11)
D HLP^DDSUTL("Enter a coding system, type '?' for a list. To enter a second instance of a coding system, use quotes around the coding system abbreviation.")
"KRN",.404,569,40,1,13)
D CSYSPAOC^PXEXSM(.DA)
"KRN",.404,569,40,2,0)
2^^3^^CODE
"KRN",.404,569,40,2,1)
1
"KRN",.404,569,40,2,2)
1,13^40
"KRN",.404,569,40,2,11)
D CODEPRE^PXEXSM(.DA)
"KRN",.404,569,40,2,13)
D CODEPAOC^PXEXSM(.DA)
"KRN",.404,569,40,3,0)
3^!M^1
"KRN",.404,569,40,3,.1)
S Y=$$LINKED^PXEXSM(.DA)
"KRN",.404,569,40,3,2)
^^1,58
"KRN",.404,569,40,4,0)
4^^2^^UNLINK
"KRN",.404,569,40,4,2)
1,65^1
"KRN",.404,569,40,4,4)
^^^1
"KRN",.404,569,40,4,11)
D HLP^DDSUTL("Enter Y if you want to unlink this code.")
"KRN",.404,569,40,4,20)
Y
"KRN",.404,569,40,4,21,0)
^^2^2^3160226^
"KRN",.404,569,40,4,21,1,0)
Enter "Y" to unlink this code.
"KRN",.404,569,40,4,21,2,0)

"KRN",.404,569,40,4,23)
D UNLINK^PXEXSM(X,.DA)
"KRN",.404,570,0)
PX EXAM CHANGE LOG^9999999.16
"KRN",.404,570,40,0)
^.4044I^3^3
"KRN",.404,570,40,1,0)
1^Change Log^1
"KRN",.404,570,40,1,2)
^^1,32
"KRN",.404,570,40,2,0)
2^!M^1
"KRN",.404,570,40,2,.1)
S Y="Edit by: "_$$GET^DDSVAL(9999999.16,.DA,1,,"E")_" on "_$$FMTE^XLFDT($$GET^DDSVAL(9999999.16,.DA,.01,,"I"),"5Z")
"KRN",.404,570,40,2,2)
^^3,1
"KRN",.404,570,40,3,0)
3^^3
"KRN",.404,570,40,3,1)
2
"KRN",.404,570,40,3,2)
5,1^1
"KRN",.404,570,40,3,11)
D HLP^DDSUTL("Press enter to add a description of the changes made.")
"KRN",.404,571,0)
PX HEALTH FACTOR MAIN BLOCK^9999999.64
"KRN",.404,571,40,0)
^.4044I^25^23
"KRN",.404,571,40,1,0)
1^NAME^3
"KRN",.404,571,40,1,1)
.01
"KRN",.404,571,40,1,2)
1,7^64^1,1
"KRN",.404,571,40,2,0)
2^PRINT NAME^3
"KRN",.404,571,40,2,1)
200
"KRN",.404,571,40,2,2)
2,13^64^2,1
"KRN",.404,571,40,3,0)
3^!M^3^^DESCRIPTION
"KRN",.404,571,40,3,.1)
S Y=$$WPECAP^PXSMAN(9999999.64,DA,"DESCRIPTION",63)
"KRN",.404,571,40,3,1)
201
"KRN",.404,571,40,3,2)
3,14^1^3,1^1
"KRN",.404,571,40,3,11)
D HLP^DDSUTL("Press Enter to edit the Description.")
"KRN",.404,571,40,4,0)
7^CATEGORY^3
"KRN",.404,571,40,4,1)
.03
"KRN",.404,571,40,4,2)
5,11^64^5,1
"KRN",.404,571,40,5,0)
8^SHORT NAME^3
"KRN",.404,571,40,5,1)
.04
"KRN",.404,571,40,5,2)
6,13^10^6,1
"KRN",.404,571,40,6,0)
12^USE ONLY WITH SEX^3
"KRN",.404,571,40,6,1)
.05
"KRN",.404,571,40,6,2)
7,56^6^7,37
"KRN",.404,571,40,6,11)
D FSOC^PXSMAN(9999999.64,"USE ONLY WITH SEX")
"KRN",.404,571,40,7,0)
10^LOWER AGE^3
"KRN",.404,571,40,7,1)
.06
"KRN",.404,571,40,7,2)
7,12^5^7,1
"KRN",.404,571,40,8,0)
11^UPPER AGE^3
"KRN",.404,571,40,8,1)
.07
"KRN",.404,571,40,8,2)
7,30^5^7,19
"KRN",.404,571,40,8,14)
D VUPAGE^PXSMAN(9999999.64,X,.DA,.DDSERROR)
"KRN",.404,571,40,9,0)
5^DISPLAY ON HEALTH SUMMARY^3
"KRN",.404,571,40,9,1)
.08
"KRN",.404,571,40,9,2)
4,50^3^4,23
"KRN",.404,571,40,9,11)
D FSOC^PXSMAN(9999999.64,"DISPLAY ON HEALTH SUMMARY")
"KRN",.404,571,40,10,0)
9^SYNONYM^3
"KRN",.404,571,40,10,1)
.09
"KRN",.404,571,40,10,2)
6,33^30^6,25
"KRN",.404,571,40,11,0)
4^ENTRY TYPE^3
"KRN",.404,571,40,11,1)
.1
"KRN",.404,571,40,11,2)
4,13^8^4,1
"KRN",.404,571,40,11,11)
D FSOC^PXSMAN(9999999.64,"ENTRY TYPE")
"KRN",.404,571,40,13,0)
14^MIN VALUE^3^^MINIMUM VALUE
"KRN",.404,571,40,13,1)
220
"KRN",.404,571,40,13,2)
9,12^18^9,1
"KRN",.404,571,40,14,0)
15^MAX VALUE^3^^MAXIMUM VALUE
"KRN",.404,571,40,14,1)
221
"KRN",.404,571,40,14,2)
9,42^18^9,31
"KRN",.404,571,40,15,0)
17^UCUM CODE^3^^UCUM CODE
"KRN",.404,571,40,15,1)
223
"KRN",.404,571,40,15,2)
10,12^68^10,1
"KRN",.404,571,40,16,0)
22^CLASS^3
"KRN",.404,571,40,16,1)
100
"KRN",.404,571,40,16,2)
17,8^8^17,1
"KRN",.404,571,40,16,11)
D FSOC^PXSMAN(9999999.64,"CLASS")
"KRN",.404,571,40,17,0)
23^SPONSOR^3
"KRN",.404,571,40,17,1)
101
"KRN",.404,571,40,17,2)
17,26^54^17,17
"KRN",.404,571,40,19,0)
13^NOT USED WITH^2
"KRN",.404,571,40,19,2)
8,16^1^8,1
"KRN",.404,571,40,19,10)
S DDSSTACK=2
"KRN",.404,571,40,19,11)
D HLP^DDSUTL("Press Enter to edit the NOT USED WITH LIST.")
"KRN",.404,571,40,19,20)
Y
"KRN",.404,571,40,20,0)
6^INACTIVE FLAG^3
"KRN",.404,571,40,20,1)
.11
"KRN",.404,571,40,20,2)
4,69^8^4,54
"KRN",.404,571,40,21,0)
18^Coding Sys^1
"KRN",.404,571,40,21,2)
^^12,1
"KRN",.404,571,40,22,0)
19^Code^1
"KRN",.404,571,40,22,2)
^^12,28
"KRN",.404,571,40,23,0)
20^Linked^1
"KRN",.404,571,40,23,2)
^^12,55
"KRN",.404,571,40,24,0)
21^Unlink^1
"KRN",.404,571,40,24,2)
^^12,63
"KRN",.404,571,40,25,0)
16^MAX DECIMALS^3
"KRN",.404,571,40,25,1)
222
"KRN",.404,571,40,25,2)
9,75^2^9,61
"KRN",.404,572,0)
PX HF CODE MAPPINGS BLOCK^9999999.66
"KRN",.404,572,40,0)
^.4044I^4^4
"KRN",.404,572,40,1,0)
1^^3^^CODING SYSTEM
"KRN",.404,572,40,1,1)
.01
"KRN",.404,572,40,1,2)
1,3^7^
"KRN",.404,572,40,1,11)
D HLP^DDSUTL("Enter a coding system, type '?' for a list. To enter a second instance of a coding system, use quotes around the coding system abbreviation.")
"KRN",.404,572,40,1,13)
D CSYSPAOC^PXHFSM(.DA)
"KRN",.404,572,40,2,0)
2^^3^^CODE
"KRN",.404,572,40,2,1)
1
"KRN",.404,572,40,2,2)
1,13^40^
"KRN",.404,572,40,2,11)
D CODEPRE^PXHFSM(.DA)
"KRN",.404,572,40,2,13)
D CODEPAOC^PXHFSM(.DA)
"KRN",.404,572,40,3,0)
3^!M^1
"KRN",.404,572,40,3,.1)
S Y=$$LINKED^PXHFSM(.DA)
"KRN",.404,572,40,3,2)
^^1,58
"KRN",.404,572,40,4,0)
4^^2^^UNLINK
"KRN",.404,572,40,4,2)
1,65^1
"KRN",.404,572,40,4,4)
^^^1
"KRN",.404,572,40,4,11)
D HLP^DDSUTL("Enter Y if you want to unlink this code.")
"KRN",.404,572,40,4,20)
Y
"KRN",.404,572,40,4,21,0)
^^2^2^3160226^^^^
"KRN",.404,572,40,4,21,1,0)
Enter "Y" to unlink this code.
"KRN",.404,572,40,4,21,2,0)

"KRN",.404,572,40,4,23)
D UNLINK^PXHFSM(X,.DA)
"KRN",.404,573,0)
PX HEALTH FACTOR CHANGE LOG^9999999.65
"KRN",.404,573,40,0)
^.4044I^3^3
"KRN",.404,573,40,1,0)
1^Change Log^1
"KRN",.404,573,40,1,2)
^^1,32
"KRN",.404,573,40,2,0)
2^!M^1
"KRN",.404,573,40,2,.1)
S Y="Edit by: "_$$GET^DDSVAL(9999999.65,.DA,1,,"E")_" on "_$$FMTE^XLFDT($$GET^DDSVAL(9999999.65,.DA,.01,,"I"),"5Z")
"KRN",.404,573,40,2,2)
^^3,1
"KRN",.404,573,40,3,0)
3^^3
"KRN",.404,573,40,3,1)
2
"KRN",.404,573,40,3,2)
5,1^1
"KRN",.404,573,40,3,11)
D HLP^DDSUTL("Press enter to add a description of the changes made.")
"KRN",.404,574,0)
PX HF NOT USED WITH^9999999.641101
"KRN",.404,574,40,0)
^.4044I^1^1
"KRN",.404,574,40,1,0)
1^NOT USED WITH LIST^1
"KRN",.404,574,40,1,2)
^^1,27
"KRN",.404,575,0)
PX HF NOT USED WITH LIST^9999999.641101
"KRN",.404,575,40,0)
^.4044I^1^1
"KRN",.404,575,40,1,0)
1^^3
"KRN",.404,575,40,1,1)
.01
"KRN",.404,575,40,1,2)
1,2^64
"KRN",.404,576,0)
PX EDU SUBTOPICS^9999999.09
"KRN",.404,576,40,0)
^.4044I^4^4
"KRN",.404,576,40,1,0)
1^Subtopics List^1
"KRN",.404,576,40,1,2)
^^1,30
"KRN",.404,576,40,2,0)
2^Subtopic^1
"KRN",.404,576,40,2,2)
^^3,3
"KRN",.404,576,40,3,0)
4^Seq^1
"KRN",.404,576,40,3,2)
^^69,11
"KRN",.404,576,40,4,0)
3^Seq^1
"KRN",.404,576,40,4,2)
^^3,73
"KRN",.404,577,0)
PX EDU SUBTOPICS LIST^9999999.091001
"KRN",.404,577,40,0)
^.4044I^2^2
"KRN",.404,577,40,1,0)
2^^3^^SEQUENCE
"KRN",.404,577,40,1,1)
3
"KRN",.404,577,40,1,2)
1,73^5
"KRN",.404,577,40,2,0)
1^^3^^SUBTOPIC
"KRN",.404,577,40,2,1)
.01
"KRN",.404,577,40,2,2)
1,2^70
"KRN",.404,578,0)
PX VSC MAIN BLOCK^9000010.71
"KRN",.404,578,40,0)
^.4044I^7^7
"KRN",.404,578,40,1,0)
1^CODING SYSTEM^3
"KRN",.404,578,40,1,1)
.05
"KRN",.404,578,40,1,2)
1,16^7^1,1
"KRN",.404,578,40,1,11)
D CSYSPRE^PXVSCSM
"KRN",.404,578,40,1,14)
I '$$VCSYS^PXVSCSM(.X) S DDSERROR=1
"KRN",.404,578,40,2,0)
2^CODE^3^^CODE
"KRN",.404,578,40,2,1)
.01
"KRN",.404,578,40,2,2)
1,30^40^1,24
"KRN",.404,578,40,2,11)
D CODEPRE^PXVSCSM(.DA)
"KRN",.404,578,40,2,13)
D CODEPAOC^PXVSCSM(.DA)
"KRN",.404,578,40,3,0)
3^EVENT DATE AND TIME^3
"KRN",.404,578,40,3,1)
1201
"KRN",.404,578,40,3,2)
3,22^20^3,1
"KRN",.404,578,40,4,0)
5^MAGNITUDE^3
"KRN",.404,578,40,4,1)
220
"KRN",.404,578,40,4,2)
7,12^24^7,1
"KRN",.404,578,40,5,0)
6^UCUM CODE^3
"KRN",.404,578,40,5,1)
221
"KRN",.404,578,40,5,2)
7,48^32^7,37
"KRN",.404,578,40,6,0)
7^COMMENTS^3
"KRN",.404,578,40,6,1)
81101
"KRN",.404,578,40,6,2)
9,11^69^9,1
"KRN",.404,578,40,7,0)
4^ENCOUNTER PROVIDER^3
"KRN",.404,578,40,7,1)
1204
"KRN",.404,578,40,7,2)
5,21^35^5,1
"KRN",19,5296,-1)
0^6
"KRN",19,5296,0)
PXTT EDIT EDUCATION TOPICS^Education Topic Add/Edit^Do not use! Placed out of order by PX*1*211.^E^^^^^^^n^^^1^1
"KRN",19,5296,1,0)
^19.06^18^18^3010806^^^^
"KRN",19,5296,1,1,0)
This option allows a user to create a new Education Topic or edit an
"KRN",19,5296,1,2,0)
Education Topic that was originally created at your site.  Education
"KRN",19,5296,1,3,0)
topics that are distributed with the PCE package cn be inactivated using
"KRN",19,5296,1,4,0)
the PCE "Activate/Inactivate Table Items" menu.
"KRN",19,5296,1,5,0)
 
"KRN",19,5296,1,6,0)
Once an education topic is defined in this table, it should not be deleted
"KRN",19,5296,1,7,0)
if there is any encounter form definitions which may be referencing the
"KRN",19,5296,1,8,0)
education topic, or if there is any patient encounter data which may be
"KRN",19,5296,1,9,0)
referencing this education topic historically. Use the "Inactive Flag"
"KRN",19,5296,1,10,0)
field to make an eduction topic "INACTIVE" for selection in the encounter
"KRN",19,5296,1,11,0)
form definition process and the PCE encounter data entry process.
"KRN",19,5296,1,12,0)
 
"KRN",19,5296,1,13,0)
If education topics are to be included on the clinic's encounter form, the
"KRN",19,5296,1,14,0)
exams must first be defined in the Education Topic file using this option.
"KRN",19,5296,1,15,0)
 
"KRN",19,5296,1,16,0)
The scanning of encounter forms with the AICS package will provide PCE
"KRN",19,5296,1,17,0)
with patient education information which is stored in the V PATIENT ED
"KRN",19,5296,1,18,0)
file.
"KRN",19,5296,15)
K PXTDUZ,PXNAT,PXB
"KRN",19,5296,20)
D ZERO^PXTTU1("^AUTTEDT(",$G(PXNAT))
"KRN",19,5296,25)

"KRN",19,5296,30)
AUTTEDT(
"KRN",19,5296,31)
QAMEZL
"KRN",19,5296,34)
S PXTDUZ=+$P($$SITE^VASITE,U,3) I $S($G(PXNAT):1,(+$G(Y)>100000):1,1:0)
"KRN",19,5296,40)

"KRN",19,5296,41)

"KRN",19,5296,42)

"KRN",19,5296,50)
AUTTEDT(
"KRN",19,5296,51)
[PXTT EDIT PAT. EDUCATION]
"KRN",19,5296,53)
BACKOUTOK
"KRN",19,5296,"U")
EDUCATION TOPIC ADD/EDIT
"KRN",19,5298,-1)
0^8
"KRN",19,5298,0)
PXTT EDIT HEALTH FACTORS^Health Factors Add/Edit^Do not use! Placed out of order by PX*1*211.^E^^^^^^^n^^^1^1
"KRN",19,5298,1,0)
^19.06^17^17^3010806^^^^
"KRN",19,5298,1,1,0)
This option allows the user to create a new Health Factor or edit a Health
"KRN",19,5298,1,2,0)
Factor that was originally created at your site.  Health factors that are
"KRN",19,5298,1,3,0)
distributed with the PCE package can be inactivated using the PCE
"KRN",19,5298,1,4,0)
"Activate/Inactivate Table Items" menu.
"KRN",19,5298,1,5,0)
 
"KRN",19,5298,1,6,0)
Once a health factor is defined in this table, it should not be deleted if
"KRN",19,5298,1,7,0)
there is any encounter form definitions which may be using the term, or
"KRN",19,5298,1,8,0)
if there is any patient encounter data which may be referencing this term
"KRN",19,5298,1,9,0)
historically.
"KRN",19,5298,1,10,0)
 
"KRN",19,5298,1,11,0)
Use the "Inactive Flag" field to make a health factor "INACTIVE" for
"KRN",19,5298,1,12,0)
selection in the Encounter form definition process and the PCE encounter
"KRN",19,5298,1,13,0)
data entry process.
"KRN",19,5298,1,14,0)
 
"KRN",19,5298,1,15,0)
The scanning of encounter forms with the AICS package will provide PCE
"KRN",19,5298,1,16,0)
with patient exam information which is stored in the V HEALTH FACTORS
"KRN",19,5298,1,17,0)
FILE.
"KRN",19,5298,15)
K PXTDUZ,PXNAT,PXB
"KRN",19,5298,20)
D ZERO^PXTTU1("^AUTTHF(",$G(PXNAT))
"KRN",19,5298,30)
AUTTHF(
"KRN",19,5298,31)
QAMEZL
"KRN",19,5298,34)
S PXTDUZ=+$P($$SITE^VASITE,U,3) I $S($G(PXNAT):1,(+$G(Y)>100000):1,1:0)
"KRN",19,5298,40)

"KRN",19,5298,41)

"KRN",19,5298,42)

"KRN",19,5298,50)
AUTTHF(
"KRN",19,5298,51)
[PXTT EDIT HEALTH FACTORS]
"KRN",19,5298,53)
BACK
"KRN",19,5298,"U")
HEALTH FACTORS ADD/EDIT
"KRN",19,5302,-1)
0^9
"KRN",19,5302,0)
PXTT TABLE MAINTENANCE^PCE Table Maintenance^^M^^^^^^^^
"KRN",19,5302,1,0)
^19.06^18^18^3080402^^^^
"KRN",19,5302,1,1,0)
The options on this menu are used to add or edit the clinical
"KRN",19,5302,1,2,0)
terminology used to represent types of data to be collected by PCE such as
"KRN",19,5302,1,3,0)
Health Factors, Patient Education, Immunizations, Skin Tests, etc.
"KRN",19,5302,1,4,0)
 
"KRN",19,5302,1,5,0)
Once these tables have been defined, the table entries will be selectable
"KRN",19,5302,1,6,0)
for encounter data entry (PCE package) and encounter form definitions
"KRN",19,5302,1,7,0)
(AICS package).  The patient information collected based on these table
"KRN",19,5302,1,8,0)
definitions is viewable on Health Summaries (Health Summary package).
"KRN",19,5302,1,9,0)
  
"KRN",19,5302,1,10,0)
This menu also includes options to edit the Clinical Reminder/Health
"KRN",19,5302,1,11,0)
Maintenance definitions, based on your site's clinical terminology in the
"KRN",19,5302,1,12,0)
tables. Once reminder criteria have been defined, they may be included in
"KRN",19,5302,1,13,0)
the Health Summary Type definitions for the "Clinical Reminder" and
"KRN",19,5302,1,14,0)
"Health Maintenance" Components.
"KRN",19,5302,1,15,0)
  
"KRN",19,5302,1,16,0)
These options may be used in conjunction with the "PCE Information Only"
"KRN",19,5302,1,17,0)
menu options to manage the contents of the files or tables supporting
"KRN",19,5302,1,18,0)
the Patient Care Encounter (PCE) package.
"KRN",19,5302,10,0)
^19.01IP^21^21
"KRN",19,5302,10,1,0)
11195^HF
"KRN",19,5302,10,1,"^")
PXTT HEALTH FACTOR MANAGEMENT
"KRN",19,5302,10,4,0)
11187^ED
"KRN",19,5302,10,4,"^")
PXTT EDU TOPICS MANAGEMENT
"KRN",19,5302,10,7,0)
11193^EX
"KRN",19,5302,10,7,"^")
PXTT EXAM MANAGEMENT
"KRN",19,5302,10,20,0)
11207^TS
"KRN",19,5302,10,20,"^")
PXTT TEXT/KEYWORD SEARCH
"KRN",19,5302,99)
64105,30130
"KRN",19,5302,"U")
PCE TABLE MAINTENANCE
"KRN",19,5305,-1)
0^7
"KRN",19,5305,0)
PXTT EDIT EXAM^Examinations Add/Edit^Do not use! Placed out of order by PX*1*211.^E^^^^^^^n^^^1^1
"KRN",19,5305,1,0)
^19.06^22^22^3010806^^^^
"KRN",19,5305,1,1,0)
This option allows the user to create a new name to represent an
"KRN",19,5305,1,2,0)
examination type or edit an examination type that was originally created
"KRN",19,5305,1,3,0)
at your site. 
"KRN",19,5305,1,4,0)
 
"KRN",19,5305,1,5,0)
The examination types originally distributed by PCE are a breakdown of
"KRN",19,5305,1,6,0)
potential categories of exams within a Physical Exam. The exams
"KRN",19,5305,1,7,0)
distributed with the PCE package can be inactivated using the PCE
"KRN",19,5305,1,8,0)
"Activate/Inactivate Table Items" menu.
"KRN",19,5305,1,9,0)
 
"KRN",19,5305,1,10,0)
Once exam names are defined in this table, they should not be deleted if
"KRN",19,5305,1,11,0)
there is any encounter form definitions which may be referencing the exam
"KRN",19,5305,1,12,0)
name, or if there is any patient encounter data which may be referencing
"KRN",19,5305,1,13,0)
this exam historically. Use the "Inactive Flag" field to make an exam
"KRN",19,5305,1,14,0)
"INACTIVE" for selection in the Encounter form definition process and the
"KRN",19,5305,1,15,0)
PCE Encounter Data Entry process. Enter "@" at the "Inactive Flag" field
"KRN",19,5305,1,16,0)
to reactivate an inactivated exam.
"KRN",19,5305,1,17,0)
 
"KRN",19,5305,1,18,0)
If exam names are to be included on the clinic's encounter form, the exams
"KRN",19,5305,1,19,0)
must first be defined in the Exam file using this option.
"KRN",19,5305,1,20,0)
 
"KRN",19,5305,1,21,0)
The scanning of encounter forms with the AICS package will provide PCE
"KRN",19,5305,1,22,0)
with patient exam information which is stored in the V EXAM file.
"KRN",19,5305,15)
K PXTDUZ,PXNAT,PXB
"KRN",19,5305,20)
D ZERO^PXTTU1("^AUTTEXAM(",$G(PXNAT))
"KRN",19,5305,30)
AUTTEXAM(
"KRN",19,5305,31)
QAMEZL
"KRN",19,5305,34)
S PXTDUZ=+$P($$SITE^VASITE,U,3) I $S($G(PXNAT):1,(+$G(Y)>100000):1,1:0)
"KRN",19,5305,40)
.01;.04;.03
"KRN",19,5305,41)
9999999.15
"KRN",19,5305,50)
AUTTEXAM(
"KRN",19,5305,51)
.01;.04;.03
"KRN",19,5305,53)
BACK
"KRN",19,5305,"U")
EXAMINATIONS ADD/EDIT
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
PXTT EDU TOPICS MANAGEMENT^Education Topic Management^^R^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",19,11187,25)
START^PXEDUMGR
"KRN",19,11187,"U")
EDUCATION TOPIC MANAGEMENT
"KRN",19,11193,-1)
0^2
"KRN",19,11193,0)
PXTT EXAM MANAGEMENT^Exam Management^^R^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",19,11193,25)
START^PXEXMGR
"KRN",19,11193,"U")
EXAM MANAGEMENT
"KRN",19,11195,-1)
0^4
"KRN",19,11195,0)
PXTT HEALTH FACTOR MANAGEMENT^Health Factor Management^^R^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",19,11195,25)
START^PXHFMGR
"KRN",19,11195,"U")
HEALTH FACTOR MANAGEMENT
"KRN",19,11207,-1)
0^5
"KRN",19,11207,0)
PXTT TEXT/KEYWORD SEARCH^Text/Keyword Search^^R^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",19,11207,25)
SEARCH^PXKWSRCH
"KRN",19,11207,"U")
TEXT/KEYWORD SEARCH
"KRN",101,3102,-1)
3^35
"KRN",101,3102,0)
PXCE ADD/EDIT MENU^Add/Edit Menu^^M^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,3102,1,0)
^^1^1^2960312^
"KRN",101,3102,1,1,0)
This is the protocol menu of actions on the Update Encounter screen.
"KRN",101,3102,4)
26^4
"KRN",101,3102,10,0)
^101.01PA^19^19
"KRN",101,3102,10,19,0)
7719^SC^14^
"KRN",101,3102,10,19,"^")
PXCE STANDARD CODES ADD
"KRN",101,3102,26)
D KEYS^PXCEAE("PXCE EDIT V-FILE",+$G(^TMP("PXCEAEIX",$J,0))),SHOW^VALM
"KRN",101,3102,28)
Select Action: 
"KRN",101,3102,99)
64224,42971
"KRN",101,7610,-1)
0^6
"KRN",101,7610,0)
PX EDUCATION TOPICS MANAGEMENT MENU^PX EDUCATION MANAGEMENT MENU^^M^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7610,1,0)
^101.06^2^2^3150911^^^
"KRN",101,7610,1,1,0)
This is the menu for the Education Management List Manager display.
"KRN",101,7610,1,2,0)

"KRN",101,7610,10,0)
^101.01PA^5^5
"KRN",101,7610,10,1,0)
7612^ADD^10^
"KRN",101,7610,10,1,"^")
PX EDUCATION TOPICS ADD
"KRN",101,7610,10,2,0)
7613^EDIT^20^
"KRN",101,7610,10,2,"^")
PX EDUCATION TOPICS EDIT
"KRN",101,7610,10,3,0)
7614^COPY^30^
"KRN",101,7610,10,3,"^")
PX EDUCATION TOPICS COPY
"KRN",101,7610,10,4,0)
7615^INQ^40^
"KRN",101,7610,10,4,"^")
PX EDUCATION TOPICS INQUIRE
"KRN",101,7610,10,5,0)
7616^CL^50^
"KRN",101,7610,10,5,"^")
PX EDUCATION TOPICS CHANGE LOG
"KRN",101,7610,15)
D PEXIT^PXEDUMGR
"KRN",101,7610,26)
D SHOW^VALM
"KRN",101,7610,99)
63806,39064
"KRN",101,7611,-1)
0^7
"KRN",101,7611,0)
PX EDUCATION TOPICS SELECT ENTRY^Select an entry^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7611,20)
D XSEL^PXEDUMGR
"KRN",101,7611,99)
63805,54106
"KRN",101,7612,-1)
0^1
"KRN",101,7612,0)
PX EDUCATION TOPICS ADD^Add^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7612,20)
D ADD^PXEDUMGR
"KRN",101,7612,99)
63806,38063
"KRN",101,7613,-1)
0^4
"KRN",101,7613,0)
PX EDUCATION TOPICS EDIT^Edit^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7613,20)
D EDITS^PXEDUMGR
"KRN",101,7613,99)
63806,38140
"KRN",101,7614,-1)
0^3
"KRN",101,7614,0)
PX EDUCATION TOPICS COPY^Copy^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7614,20)
D COPYS^PXEDUMGR
"KRN",101,7614,99)
63806,38184
"KRN",101,7615,-1)
0^5
"KRN",101,7615,0)
PX EDUCATION TOPICS INQUIRE^Inquire^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7615,20)
D INQS^PXEDUMGR
"KRN",101,7615,99)
63806,38227
"KRN",101,7616,-1)
0^2
"KRN",101,7616,0)
PX EDUCATION TOPICS CHANGE LOG^Change Log^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7616,20)
D CLOGS^PXEDUMGR
"KRN",101,7616,99)
63806,38335
"KRN",101,7621,-1)
0^8
"KRN",101,7621,0)
PX EXAM ADD^Add^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7621,20)
D ADD^PXEXMGR
"KRN",101,7621,99)
63872,38764
"KRN",101,7622,-1)
0^9
"KRN",101,7622,0)
PX EXAM CHANGE LOG^Change Log^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7622,20)
D CLOGS^PXEXMGR
"KRN",101,7622,99)
63872,38879
"KRN",101,7623,-1)
0^10
"KRN",101,7623,0)
PX EXAM COPY^Copy^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7623,20)
D COPYS^PXEXMGR
"KRN",101,7623,99)
63872,38963
"KRN",101,7624,-1)
0^11
"KRN",101,7624,0)
PX EXAM EDIT^Edit^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7624,20)
D EDITS^PXEXMGR
"KRN",101,7624,99)
63872,39019
"KRN",101,7625,-1)
0^12
"KRN",101,7625,0)
PX EXAM INQUIRE^Inquire^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7625,20)
D INQS^PXEXMGR
"KRN",101,7625,99)
63872,39072
"KRN",101,7626,-1)
0^14
"KRN",101,7626,0)
PX EXAM SELECT ENTRY^Select an entry^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7626,20)
D XSEL^PXEXMGR
"KRN",101,7626,99)
63872,39148
"KRN",101,7627,-1)
0^13
"KRN",101,7627,0)
PX EXAM MANAGEMENT MENU^PX EXAM MANAGEMENT MENU^^M^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7627,1,0)
^^2^2^3151116^
"KRN",101,7627,1,1,0)
This is the menu for the Exam Management List Manager display.  
"KRN",101,7627,1,2,0)

"KRN",101,7627,10,0)
^101.01PA^5^5
"KRN",101,7627,10,1,0)
7621^ADD^10^
"KRN",101,7627,10,1,"^")
PX EXAM ADD
"KRN",101,7627,10,2,0)
7624^EDIT^20^
"KRN",101,7627,10,2,"^")
PX EXAM EDIT
"KRN",101,7627,10,3,0)
7623^COPY^30^
"KRN",101,7627,10,3,"^")
PX EXAM COPY
"KRN",101,7627,10,4,0)
7625^INQ^40^
"KRN",101,7627,10,4,"^")
PX EXAM INQUIRE
"KRN",101,7627,10,5,0)
7622^CL^50^
"KRN",101,7627,10,5,"^")
PX EXAM CHANGE LOG
"KRN",101,7627,15)
D PEXIT^PXEXMGR
"KRN",101,7627,26)
D SHOW^VALM
"KRN",101,7627,99)
63872,40506
"KRN",101,7628,-1)
0^22
"KRN",101,7628,0)
PX HEALTH FACTOR ADD^Add^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7628,20)
D ADD^PXHFMGR
"KRN",101,7628,99)
63883,38348
"KRN",101,7629,-1)
0^25
"KRN",101,7629,0)
PX HEALTH FACTOR EDIT^Edit^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7629,20)
D EDITS^PXHFMGR
"KRN",101,7629,21,0)
^101.021A
"KRN",101,7629,99)
63883,38439
"KRN",101,7630,-1)
0^24
"KRN",101,7630,0)
PX HEALTH FACTOR COPY^Copy^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7630,20)
D COPYS^PXHFMGR
"KRN",101,7630,99)
63883,38522
"KRN",101,7631,-1)
0^26
"KRN",101,7631,0)
PX HEALTH FACTOR INQUIRE^Inquire^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7631,20)
D INQS^PXHFMGR
"KRN",101,7631,99)
63883,38584
"KRN",101,7632,-1)
0^23
"KRN",101,7632,0)
PX HEALTH FACTOR CHANGE LOG^Change Log^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7632,20)
D CLOGS^PXHFMGR
"KRN",101,7632,99)
63883,38640
"KRN",101,7633,-1)
0^28
"KRN",101,7633,0)
PX HEALTH FACTOR SELECT ENTRY^Select an entry^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7633,20)
D XSEL^PXHFMGR
"KRN",101,7633,99)
63883,38710
"KRN",101,7634,-1)
0^27
"KRN",101,7634,0)
PX HEALTH FACTOR MANAGEMENT MENU^PX HF MANAGEMENT MENU^^M^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7634,1,0)
^^2^2^3151127^
"KRN",101,7634,1,1,0)
This is the menu for the Health Factor Management List Manager display.
"KRN",101,7634,1,2,0)

"KRN",101,7634,10,0)
^101.01PA^5^5
"KRN",101,7634,10,1,0)
7628^ADD^10^
"KRN",101,7634,10,1,"^")
PX HEALTH FACTOR ADD
"KRN",101,7634,10,2,0)
7629^EDIT^20^
"KRN",101,7634,10,2,"^")
PX HEALTH FACTOR EDIT
"KRN",101,7634,10,3,0)
7630^COPY^30^
"KRN",101,7634,10,3,"^")
PX HEALTH FACTOR COPY
"KRN",101,7634,10,4,0)
7631^INQ^40^
"KRN",101,7634,10,4,"^")
PX HEALTH FACTOR INQUIRE
"KRN",101,7634,10,5,0)
7632^CL^50^
"KRN",101,7634,10,5,"^")
PX HEALTH FACTOR CHANGE LOG
"KRN",101,7634,15)
D PEXIT^PXHFMGR
"KRN",101,7634,26)
D SHOW^VALM
"KRN",101,7634,99)
63883,40007
"KRN",101,7695,-1)
0^34
"KRN",101,7695,0)
PXCE LEXICON SELECT MENU^PXCE LEXICON SELECT MENU^^M^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7695,4)
40
"KRN",101,7695,10,0)
^101.01PA^2^2
"KRN",101,7695,10,1,0)
7717^SEL^20^
"KRN",101,7695,10,1,"^")
PXCE LEXICON SELECT CODE(S)
"KRN",101,7695,10,2,0)
7718^REM^30^
"KRN",101,7695,10,2,"^")
PXCE LEXICON REMOVE CODE(S)
"KRN",101,7695,15)
D PEXIT^PXLEXS
"KRN",101,7695,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),U,1),24)) ^(24)
"KRN",101,7695,26)
D SHOW^VALM
"KRN",101,7695,99)
64306,41164
"KRN",101,7717,-1)
0^33
"KRN",101,7717,0)
PXCE LEXICON SELECT CODE(S)^Select a code^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7717,20)
D SELL^PXLEXS
"KRN",101,7717,99)
64306,41045
"KRN",101,7718,-1)
0^32
"KRN",101,7718,0)
PXCE LEXICON REMOVE CODE(S)^Remove a code^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7718,20)
D REML^PXLEXS
"KRN",101,7718,99)
64306,41145
"KRN",101,7719,-1)
0^36
"KRN",101,7719,0)
PXCE STANDARD CODES ADD^Standard Codes^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7719,1,0)
^^2^2^3160920^
"KRN",101,7719,1,1,0)
This action allows you to add standard codes for the patient.
"KRN",101,7719,1,2,0)

"KRN",101,7719,4)
^^^SC
"KRN",101,7719,15)
D INIT^PXCEAE
"KRN",101,7719,20)
S PXCEFIEN="" D EN^PXCEVFIL("SC")
"KRN",101,7719,99)
64181,37362
"KRN",101,7720,-1)
0^37
"KRN",101,7720,0)
PXCE LEXICON SELECT ENTRY^Select an entry^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,7720,20)
D XSEL^PXLEXS
"KRN",101,7720,99)
64182,37266
"KRN",409.61,411,-1)
0^6
"KRN",409.61,411,0)
PXCE ADD/EDIT MENU^1^^80^5^15^1^1^^PXCE ADD/EDIT MENU^PCE Update Encounter^4^^1
"KRN",409.61,411,1)
^PXCE ADD/EDIT HIDDEN
"KRN",409.61,411,"ARRAY")
 ^TMP("PXCEAE",$J)
"KRN",409.61,411,"FNL")
D EXIT^PXCEAE
"KRN",409.61,411,"HDR")
D HDR^PXCEAE
"KRN",409.61,411,"HLP")
D PROTOCOL^PXCEHELP
"KRN",409.61,411,"INIT")
D INIT^PXCEAE
"KRN",409.61,1093,-1)
0^1
"KRN",409.61,1093,0)
PX EDUCATION TOPICS MANAGEMENT^1^^80^5^14^1^1^Education Topics Management^PX EDUCATION TOPICS MANAGEMENT MENU^Education Topics Management^1^^1
"KRN",409.61,1093,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1093,"ARRAY")
 ^TMP("PXEDUL",$J)
"KRN",409.61,1093,"COL",0)
^409.621^3^3
"KRN",409.61,1093,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,1093,"COL",2,0)
TOPIC^6^30^Education Topic
"KRN",409.61,1093,"COL",3,0)
DESCRIPTION^38^40^Description
"KRN",409.61,1093,"COL","B","DESCRIPTION",3)

"KRN",409.61,1093,"COL","B","NUMBER",1)

"KRN",409.61,1093,"COL","B","TOPIC",2)

"KRN",409.61,1093,"FNL")
D EXIT^PXEDUMGR
"KRN",409.61,1093,"HDR")
D HDR^PXEDUMGR
"KRN",409.61,1093,"HLP")
D HELP^PXEDUMGR
"KRN",409.61,1093,"INIT")
D ENTRY^PXEDUMGR
"KRN",409.61,1094,-1)
0^2
"KRN",409.61,1094,0)
PX EXAM MANAGEMENT^1^^80^5^14^1^1^Exam Management^PX EXAM MANAGEMENT MENU^Exam Management^1
"KRN",409.61,1094,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1094,"ARRAY")
 ^TMP("PXEXAML",$J)
"KRN",409.61,1094,"COL",0)
^409.621^3^3
"KRN",409.61,1094,"COL",1,0)
NUMBER^1^4^ No.^^0
"KRN",409.61,1094,"COL",2,0)
EXAM^6^30^Exam^^0
"KRN",409.61,1094,"COL",3,0)
DESCRIPTION^38^40^Description^^0
"KRN",409.61,1094,"COL","AIDENT",0,1)

"KRN",409.61,1094,"COL","AIDENT",0,2)

"KRN",409.61,1094,"COL","AIDENT",0,3)

"KRN",409.61,1094,"COL","B","DESCRIPTION",3)

"KRN",409.61,1094,"COL","B","EXAM",2)

"KRN",409.61,1094,"COL","B","NUMBER",1)

"KRN",409.61,1094,"FNL")
D EXIT^PXEXMGR
"KRN",409.61,1094,"HDR")
D HDR^PXEXMGR
"KRN",409.61,1094,"HLP")
D HELP^PXEXMGR
"KRN",409.61,1094,"INIT")
D ENTRY^PXEXMGR
"KRN",409.61,1095,-1)
0^4
"KRN",409.61,1095,0)
PX HEALTH FACTOR MANAGEMENT^1^^80^5^14^1^1^Health Factor Management^PX HEALTH FACTOR MANAGEMENT MENU^Health Factor Management^1
"KRN",409.61,1095,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1095,"ARRAY")
 ^TMP("PXHFL",$J)
"KRN",409.61,1095,"COL",0)
^409.621^3^3
"KRN",409.61,1095,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,1095,"COL",2,0)
HF^6^30^Health Factor
"KRN",409.61,1095,"COL",3,0)
DESCRIPTION^38^40^Description
"KRN",409.61,1095,"COL","B","DESCRIPTION",3)

"KRN",409.61,1095,"COL","B","HF",2)

"KRN",409.61,1095,"COL","B","NUMBER",1)

"KRN",409.61,1095,"FNL")
D EXIT^PXHFMGR
"KRN",409.61,1095,"HDR")
D HDR^PXHFMGR
"KRN",409.61,1095,"HLP")
D HELP^PXHFMGR
"KRN",409.61,1095,"INIT")
D ENTRY^PXHFMGR
"KRN",409.61,1106,-1)
0^5
"KRN",409.61,1106,0)
PXCE STANDARD CODES SELECT^1^^80^5^14^1^1^Lexicon Selection^PXCE LEXICON SELECT MENU^Standard Code Selection^1^^1
"KRN",409.61,1106,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,1106,"ARRAY")
 ^TMP("PXLEXL",$J)
"KRN",409.61,1106,"COL",0)
^409.621^5^5
"KRN",409.61,1106,"COL",1,0)
NUMBER^1^4^ No.
"KRN",409.61,1106,"COL",2,0)
CODE^6^9^Code
"KRN",409.61,1106,"COL",3,0)
ACTIVE^16^10^Active
"KRN",409.61,1106,"COL",4,0)
INACTIVE^27^10^Inactive
"KRN",409.61,1106,"COL",5,0)
DESCRIPTIO^37^43^Description
"KRN",409.61,1106,"COL","B","ACTIVE",3)

"KRN",409.61,1106,"COL","B","CODE",2)

"KRN",409.61,1106,"COL","B","DESCRIPTIO",5)

"KRN",409.61,1106,"COL","B","INACTIVE",4)

"KRN",409.61,1106,"COL","B","NUMBER",1)

"KRN",409.61,1106,"FNL")
D EXIT^PXLEXS
"KRN",409.61,1106,"HDR")
D HDR^PXLEXS
"KRN",409.61,1106,"HLP")
D HELP^PXLEXS
"KRN",409.61,1106,"INIT")
D ENTRY^PXLEXS
"MBREQ")
0
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",183,-1)
1^1
"PKG",183,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)
"PKG",183,20,0)
^9.402P^^
"PKG",183,22,0)
^9.49I^1^1
"PKG",183,22,1,0)
1.0^2960812^2960821^11
"PKG",183,22,1,"PAH",1,0)
211^3170125
"PKG",183,22,1,"PAH",1,1,0)
^^3^3^3170125
"PKG",183,22,1,"PAH",1,1,1,0)
PCE data standardization, see the release notes and patch description
"PKG",183,22,1,"PAH",1,1,2,0)
for complete details.
"PKG",183,22,1,"PAH",1,1,3,0)

"PRE")
PXP211EC
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
43
"RTN","PXAI")
0^19^B44282682
"RTN","PXAI",1,0)
PXAI ;ISL/JVS,ISA/KWP,ESW - PCE DRIVING RTN FOR 'DATA2PCE' API ;08/24/2016
"RTN","PXAI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,74,69,102,111,112,130,164,168,215,211**;Aug 12, 1996;Build 84
"RTN","PXAI",3,0)
 Q
"RTN","PXAI",4,0)
 ;
"RTN","PXAI",5,0)
 ;+  1       2       3        4        5       6      7      8       9
"RTN","PXAI",6,0)
DATA2PCE(PXADATA,PXAPKG,PXASOURC,PXAVISIT,PXAUSER,PXANOT,ERRRET,PXAPREDT,PXAPROB,PXACCNT) ;+API to pass data for add/edit/delete to PCE.
"RTN","PXAI",7,0)
 ;+  PXADATA  (required)
"RTN","PXAI",8,0)
 ;+  PXAPKG   (required)
"RTN","PXAI",9,0)
 ;+  PXASOURC (required)
"RTN","PXAI",10,0)
 ;+  PXAVISIT (optional) is pointer to a visit for which the data is to
"RTN","PXAI",11,0)
 ;+        be related.  If the visit is not known then there must be
"RTN","PXAI",12,0)
 ;+        the ENCOUNTER nodes needed to lookup/create the visit.
"RTN","PXAI",13,0)
 ;+  PXAUSER  (optional) this is a pointer to the user adding the data.
"RTN","PXAI",14,0)
 ;+  PXANOT   (optional) set to 1 if errors are to be displayed to the screen should only be set while writing and debugging the initial code.
"RTN","PXAI",15,0)
 ;+  ERRRET   (optional) passed by reference.  If present will return PXKERROR
"RTN","PXAI",16,0)
 ;+                      array elements to the caller.
"RTN","PXAI",17,0)
 ;+  PXAPREDT  (optional) Set to 1 if you want to edit the Primary Provider
"RTN","PXAI",18,0)
 ;+            only use if for the moment that editing is being done. (dangerous)
"RTN","PXAI",19,0)
 ;+  PXAPROB   (optional) A dotted variable name. When errors and
"RTN","PXAI",20,0)
 ;+             warnings occur, They will be passed back in the form
"RTN","PXAI",21,0)
 ;+            of an array with the general description of the problem.
"RTN","PXAI",22,0)
 ;+ IF ERROR1 - (GENERAL ERRORS)
"RTN","PXAI",23,0)
 ;+      PXAPROB($J,SUBSCRIPT,"ERROR1",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",24,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",25,0)
 ;+      PXAPROB(23432234,2,"ERROR1","PROVIDER","NAME",7)="BECAUSE..."
"RTN","PXAI",26,0)
 ;+ IF WARNING2 - (GENERAL WARNINGS)
"RTN","PXAI",27,0)
 ;+      PXAPROB($J,SUBSCRIPT,"WARNING2",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",28,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",29,0)
 ;+      PXAPROB(23432234,3,"WARNING2","PROCEDURE","QTY",3)="BECAUSE..."
"RTN","PXAI",30,0)
 ;+ IF WARNING3 - (WARNINGS FOR SERVICE CONNECTION)
"RTN","PXAI",31,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"AO")=REASON
"RTN","PXAI",32,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"EC")=REASON
"RTN","PXAI",33,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"IR")=REASON
"RTN","PXAI",34,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SC")=REASON
"RTN","PXAI",35,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"MST")=REASON
"RTN","PXAI",36,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"HNC")=REASON
"RTN","PXAI",37,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"CV")=REASON
"RTN","PXAI",38,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SHAD")=REASON
"RTN","PXAI",39,0)
 ;+ IF ERROR4 - (PROBLEM LIST ERRORS)
"RTN","PXAI",40,0)
 ;+      PXAPROB($J,6,"ERROR4","PX/DL",(SUBSCRIPT FROM PXADATA))=REASON
"RTN","PXAI",41,0)
 ;+ PXACCNT    (optional)  passed by reference.  Returns the PFSS Account Reference if known.
"RTN","PXAI",42,0)
 ;              Returned as null if the PFSS Account Reference is located in the Order file(#100)
"RTN","PXAI",43,0)
 ;+
"RTN","PXAI",44,0)
 ;+
"RTN","PXAI",45,0)
 ;+ Returns:
"RTN","PXAI",46,0)
 ;+   1  if no errors and process completely
"RTN","PXAI",47,0)
 ;+  -1  if errors occurred but processed completely as possible
"RTN","PXAI",48,0)
 ;+  -2  if could not get a visit
"RTN","PXAI",49,0)
 ;+  -3  if called incorrectly
"RTN","PXAI",50,0)
 ;
"RTN","PXAI",51,0)
NEW ;--NEW VARIABLES
"RTN","PXAI",52,0)
 N NOVSIT,PXAK,DFN,PXAERRF,PXADEC,PXELAP,PXASUB
"RTN","PXAI",53,0)
 N PATIENT,VALQUIET,PRIMFND
"RTN","PXAI",54,0)
 K PXAERROR,PXKERROR,PXAERR,PRVDR
"RTN","PXAI",55,0)
 S PXASUB=0,VALQUIET=1
"RTN","PXAI",56,0)
 ; needs to look up if not passed. 
"RTN","PXAI",57,0)
 I '$G(PXAVISIT),'$D(@PXADATA@("ENCOUNTER")) Q -3
"RTN","PXAI",58,0)
 I $G(PXAUSER)<1 S PXAUSER=DUZ
"RTN","PXAI",59,0)
 ;
"RTN","PXAI",60,0)
 K ^TMP("PXK",$J),^TMP("DIERR",$J),^TMP("PXAIADDPRV",$J)
"RTN","PXAI",61,0)
SOR ;--SOURCE
"RTN","PXAI",62,0)
 I PXAPKG=+PXAPKG S PXAPKG=PXAPKG
"RTN","PXAI",63,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PXAPKG)
"RTN","PXAI",64,0)
 I PXASOURC=+PXASOURC S PXASOURC=PXASOURC
"RTN","PXAI",65,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(PXASOURC)
"RTN","PXAI",66,0)
 ;
"RTN","PXAI",67,0)
 D TMPSOURC^PXAPIUTL(PXASOURC) ;-SAVES & CREATES ^TMP("PXK",$J,"SOR")
"RTN","PXAI",68,0)
VST ;--VISIT
"RTN","PXAI",69,0)
 ;--KILL VISIT
"RTN","PXAI",70,0)
 I $G(PXAVISIT) D VPTR^PXAIVSTV I $G(PXAERRF) D ERR Q -2
"RTN","PXAI",71,0)
 D VST^PXAIVST
"RTN","PXAI",72,0)
 I $G(PXAVISIT)<0 Q -2
"RTN","PXAI",73,0)
 I $G(PXAERRF) D ERR K PXAERR Q -2
"RTN","PXAI",74,0)
PRV ;--PROVIDER
"RTN","PXAI",75,0)
 S PATIENT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",5)
"RTN","PXAI",76,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",77,0)
 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:(PRIMFND)!(PXAK="")  D
"RTN","PXAI",78,0)
 .I $D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D
"RTN","PXAI",79,0)
 ..S PRIMFND=$G(@PXADATA@("PROVIDER",PXAK,"PRIMARY"))
"RTN","PXAI",80,0)
 I 'PRIMFND D  ;Check for each provider's status as Primary or Secondary
"RTN","PXAI",81,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",82,0)
 ..I '$D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D PROVDRST
"RTN","PXAI",83,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",84,0)
 . D PRV^PXAIPRV I $G(PXAERRF) D ERR
"RTN","PXAI",85,0)
 K PRI ;--FLAG FOR PRIMARY PROVIDER
"RTN","PXAI",86,0)
 K PXAERR
"RTN","PXAI",87,0)
POV ;--DIAGNOSIS
"RTN","PXAI",88,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",89,0)
 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK)) Q:(PXAK="")  D  Q:PRIMFND
"RTN","PXAI",90,0)
 .I +$G(@PXADATA@("DX/PL",PXAK,"PRIMARY"))=1 D
"RTN","PXAI",91,0)
 ..S PRIMFND=$G(@PXADATA@("DX/PL",PXAK,"DIAGNOSIS"))
"RTN","PXAI",92,0)
 I $D(@PXADATA@("DX/PL")) D POVPRM(PXAVISIT,PRIMFND,.PXADATA) D
"RTN","PXAI",93,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",94,0)
 ..D POV^PXAIPOV I $G(PXAERRF) D ERR
"RTN","PXAI",95,0)
 K PXAERR
"RTN","PXAI",96,0)
 ;
"RTN","PXAI",97,0)
CPT ;--PROCEDURE
"RTN","PXAI",98,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROCEDURE",PXAK))  Q:PXAK=""  D
"RTN","PXAI",99,0)
 . D CPT^PXAICPT I $G(PXAERRF) D ERR
"RTN","PXAI",100,0)
 K PXAERR
"RTN","PXAI",101,0)
 ;
"RTN","PXAI",102,0)
EDU ;--PATIENT EDUCATION
"RTN","PXAI",103,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PATIENT ED",PXAK))  Q:PXAK=""  D
"RTN","PXAI",104,0)
 . D EDU^PXAIPED I $G(PXAERRF) D ERR
"RTN","PXAI",105,0)
 K PXAERR
"RTN","PXAI",106,0)
 ;
"RTN","PXAI",107,0)
EXAM ;--EXAMINATION
"RTN","PXAI",108,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("EXAM",PXAK))  Q:PXAK=""  D
"RTN","PXAI",109,0)
 . D EXAM^PXAIXAM I $G(PXAERRF) D ERR
"RTN","PXAI",110,0)
 K PXAERR
"RTN","PXAI",111,0)
 ;
"RTN","PXAI",112,0)
HF ;--HEALTH FACTOR
"RTN","PXAI",113,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("HEALTH FACTOR",PXAK))  Q:PXAK=""  D
"RTN","PXAI",114,0)
 . D HF^PXAIHF I $G(PXAERRF) D ERR
"RTN","PXAI",115,0)
 K PXAERR
"RTN","PXAI",116,0)
 ;
"RTN","PXAI",117,0)
IMM ;--IMMUNIZATION
"RTN","PXAI",118,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMMUNIZATION",PXAK))  Q:PXAK=""  D
"RTN","PXAI",119,0)
 . D IMM^PXAIIMM I $G(PXAERRF) D ERR
"RTN","PXAI",120,0)
 K PXAERR
"RTN","PXAI",121,0)
 ;
"RTN","PXAI",122,0)
SKIN ;--SKIN TEST
"RTN","PXAI",123,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("SKIN TEST",PXAK))  Q:PXAK=""  D
"RTN","PXAI",124,0)
 . D SKIN^PXAISK I $G(PXAERRF) D ERR
"RTN","PXAI",125,0)
 K PXAERR
"RTN","PXAI",126,0)
 ;
"RTN","PXAI",127,0)
ICR ;--IMM CONTRAINDICATION/REFUSAL
"RTN","PXAI",128,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMM CONTRA/REFUSAL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",129,0)
 . D ICR^PXAIICR I $G(PXAERRF) D ERR
"RTN","PXAI",130,0)
 K PXAERR
"RTN","PXAI",131,0)
 ;
"RTN","PXAI",132,0)
SC ;--STANDARD CODES
"RTN","PXAI",133,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("STD CODES",PXAK))  Q:PXAK=""  D
"RTN","PXAI",134,0)
 . D SC^PXAISC I $G(PXAERRF) D ERR
"RTN","PXAI",135,0)
 K PXAERR
"RTN","PXAI",136,0)
 ;
"RTN","PXAI",137,0)
 D OTHER^PXAIPRV
"RTN","PXAI",138,0)
 ;
"RTN","PXAI",139,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAI",140,0)
 . D EN1^PXKMAIN
"RTN","PXAI",141,0)
 . M ERRRET=PXKERROR
"RTN","PXAI",142,0)
 . D PRIM^PXAIPRV K PRVDR
"RTN","PXAI",143,0)
 . D EVENT^PXKMAIN
"RTN","PXAI",144,0)
 S PXACCNT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",26) ;PX*1.0*164 ;Sets the PFSS Account Reference, if any
"RTN","PXAI",145,0)
 K ^TMP("PXK",$J),PXAERR,PXKERROR
"RTN","PXAI",146,0)
 Q $S($G(PXAERRF):-1,1:1)
"RTN","PXAI",147,0)
 ;
"RTN","PXAI",148,0)
 ;
"RTN","PXAI",149,0)
EXIT ;--EXIT AND CLEAN UP
"RTN","PXAI",150,0)
 D EVENT^PXKMAIN
"RTN","PXAI",151,0)
 K ^TMP("PXK",$J),PRVDR
"RTN","PXAI",152,0)
 K PXAERR
"RTN","PXAI",153,0)
 Q
"RTN","PXAI",154,0)
 ;-----------------SUBROUTINES-----------------------
"RTN","PXAI",155,0)
ERR ;
"RTN","PXAI",156,0)
 ;
"RTN","PXAI",157,0)
 ;
"RTN","PXAI",158,0)
 I '$D(PXADI("DIALOG")) Q
"RTN","PXAI",159,0)
 N NODE,SCREEN
"RTN","PXAI",160,0)
 S PXAERR(1)=$G(PXADATA),PXAERR(2)=$G(PXAPKG),PXAERR(3)=$G(PXASOURC)
"RTN","PXAI",161,0)
 S PXAERR(4)=$G(PXAVISIT),PXAERR(5)=$G(PXAUSER)_"  "_$P($G(^VA(200,PXAUSER,0)),"^",1)
"RTN","PXAI",162,0)
 I $G(PXANOT)=1 D EXTERNAL
"RTN","PXAI",163,0)
 E  D INTERNAL
"RTN","PXAI",164,0)
 D ARRAY^PXAICPTV
"RTN","PXAI",165,0)
 K PXADI("DIALOG")
"RTN","PXAI",166,0)
 Q
"RTN","PXAI",167,0)
 ;
"RTN","PXAI",168,0)
EXTERNAL ;---SEND ERRORS TO SCREEN
"RTN","PXAI",169,0)
 W !,"-----------------------------------------------------------------"
"RTN","PXAI",170,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,"","SCREEN","F")
"RTN","PXAI",171,0)
 D MSG^DIALOG("ESW","",50,10,"SCREEN")
"RTN","PXAI",172,0)
 ;
"RTN","PXAI",173,0)
 Q
"RTN","PXAI",174,0)
INTERNAL ;---SET ERRORS TO GLOBAL ARRAY
"RTN","PXAI",175,0)
 S NODE=PXADATA
"RTN","PXAI",176,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,.PXAERR,NODE,"F")
"RTN","PXAI",177,0)
 S NODE=$NA(@PXADATA@("DIERR",$J)) D MSG^DIALOG("ESW","",50,10,NODE)
"RTN","PXAI",178,0)
 Q
"RTN","PXAI",179,0)
 ;
"RTN","PXAI",180,0)
PROVDRST ; Check provider status (Primary or Secondary)
"RTN","PXAI",181,0)
 N PRVIEN,DETS,DIC,DR,DA,DIQ,PRI,PRVPRIM
"RTN","PXAI",182,0)
 I $G(PXAK)="" QUIT
"RTN","PXAI",183,0)
 S PRVIEN=0
"RTN","PXAI",184,0)
 F  S PRVIEN=$O(^AUPNVPRV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",185,0)
 .S DETS=$G(^AUPNVPRV(PRVIEN,0))
"RTN","PXAI",186,0)
 .I $P(DETS,U)=$G(@PXADATA@("PROVIDER",PXAK,"NAME")) D
"RTN","PXAI",187,0)
 ..S DIC=9000010.06,DR=.04,DA=PRVIEN
"RTN","PXAI",188,0)
 ..S DIQ="PRVPRIM(",DIQ(0)="EI" D EN^DIQ1
"RTN","PXAI",189,0)
 ..S PRI=$E($G(PRVPRIM(9000010.06,DA,DR,"E")),1,1)
"RTN","PXAI",190,0)
 ..S @PXADATA@("PROVIDER",PXAK,"PRIMARY")=$S(PRI="P":1,1:0)
"RTN","PXAI",191,0)
 Q
"RTN","PXAI",192,0)
POVPRM(VISIT,PRIMFND,POVARR) ;
"RTN","PXAI",193,0)
 N PRVIEN,DETS,STOP,LPXAK,ORDX,NDX,ORDXP
"RTN","PXAI",194,0)
 S PRVIEN=0
"RTN","PXAI",195,0)
 ;create array of existing DX; ORDX - pointer to ^ICD9(
"RTN","PXAI",196,0)
 F  S PRVIEN=$O(^AUPNVPOV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",197,0)
 .S DETS=$G(^AUPNVPOV(PRVIEN,0)),ORDX=$P(DETS,U)
"RTN","PXAI",198,0)
 .S ORDX(ORDX)=PRVIEN I $P(DETS,U,12)="P" S ORDXP(ORDX)=""
"RTN","PXAI",199,0)
 ; create array of passed DX; NDX - pointer to ^ICD9(
"RTN","PXAI",200,0)
 S PXAK=0 F  S PXAK=$O(@POVARR@("DX/PL",PXAK)) Q:PXAK=""  D
"RTN","PXAI",201,0)
 .S NDX=$G(@POVARR@("DX/PL",PXAK,"DIAGNOSIS")) S NDX(NDX)=PXAK
"RTN","PXAI",202,0)
 ; force entry of originally primary diagnosis with "S" flag
"RTN","PXAI",203,0)
 I PRIMFND S ORDX="" D
"RTN","PXAI",204,0)
 .F  S ORDX=$O(ORDXP(ORDX)) Q:ORDX=""  I PRIMFND'=ORDX D
"RTN","PXAI",205,0)
 ..I $D(NDX(ORDX)) S @POVARR@("DX/PL",NDX(ORDX),"PRIMARY")=0
"RTN","PXAI",206,0)
 ..E  D
"RTN","PXAI",207,0)
 ...S LPXAK=$O(@POVARR@("DX/PL",""),-1)
"RTN","PXAI",208,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"DIAGNOSIS")=ORDX
"RTN","PXAI",209,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"PRIMARY")=0
"RTN","PXAI",210,0)
 Q
"RTN","PXAI",211,0)
 ;
"RTN","PXAIHF")
0^26^B6746831
"RTN","PXAIHF",1,0)
PXAIHF ;ISL/PKR - Set the HEALTH FACTOR nodes. ;08/31/2016
"RTN","PXAIHF",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**45,211**;Aug 12, 1996;Build 84
"RTN","PXAIHF",3,0)
 ;
"RTN","PXAIHF",4,0)
HF ;Main entry point.
"RTN","PXAIHF",5,0)
 ;
"RTN","PXAIHF",6,0)
 K PXAERR
"RTN","PXAIHF",7,0)
 S PXAERR(8)=PXAK
"RTN","PXAIHF",8,0)
 S PXAERR(7)="HEALTH FACTOR"
"RTN","PXAIHF",9,0)
 ;
"RTN","PXAIHF",10,0)
 N IND,PXAA
"RTN","PXAIHF",11,0)
 S IND=""
"RTN","PXAIHF",12,0)
 F  S IND=$O(@PXADATA@("HEALTH FACTOR",PXAK,IND)) Q:IND=""  D
"RTN","PXAIHF",13,0)
 . S PXAA(IND)=@PXADATA@("HEALTH FACTOR",PXAK,IND)
"RTN","PXAIHF",14,0)
 ;
"RTN","PXAIHF",15,0)
 ;Validate the data.
"RTN","PXAIHF",16,0)
 N STOP
"RTN","PXAIHF",17,0)
 D VAL^PXAIHFV
"RTN","PXAIHF",18,0)
 I $G(STOP) Q
"RTN","PXAIHF",19,0)
 ;
"RTN","PXAIHF",20,0)
SETVARA ;Set the after visit variables.
"RTN","PXAIHF",21,0)
 N AFTER0,AFTER12,AFTER220,AFTER811,AFTER812
"RTN","PXAIHF",22,0)
 S $P(AFTER0,U,1)=$G(PXAA("HEALTH FACTOR"))
"RTN","PXAIHF",23,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,U,1)="@"
"RTN","PXAIHF",24,0)
 S $P(AFTER0,U,2)=$G(PATIENT)
"RTN","PXAIHF",25,0)
 S $P(AFTER0,U,3)=$G(PXAVISIT)
"RTN","PXAIHF",26,0)
 S $P(AFTER0,U,4)=$G(PXAA("LEVEL/SEVERITY"))
"RTN","PXAIHF",27,0)
 S $P(AFTER12,U,1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIHF",28,0)
 S $P(AFTER12,U,4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIHF",29,0)
 ;
"RTN","PXAIHF",30,0)
 ;Magnitude and UCUM code
"RTN","PXAIHF",31,0)
 S $P(AFTER220,U,1)=$G(PXAA("MAGNITUDE"))
"RTN","PXAIHF",32,0)
 S $P(AFTER220,U,2)=$G(PXAA("UCUM CODE"))
"RTN","PXAIHF",33,0)
 ;
"RTN","PXAIHF",34,0)
 S $P(AFTER811,U,1)=$G(PXAA("COMMENT"))
"RTN","PXAIHF",35,0)
 ;
"RTN","PXAIHF",36,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAIHF",37,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIHF",38,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIHF",39,0)
 ;
"RTN","PXAIHF",40,0)
 S ^TMP("PXK",$J,"HF",PXAK,0,"AFTER")=AFTER0
"RTN","PXAIHF",41,0)
 S ^TMP("PXK",$J,"HF",PXAK,12,"AFTER")=AFTER12
"RTN","PXAIHF",42,0)
 S ^TMP("PXK",$J,"HF",PXAK,220,"AFTER")=AFTER220
"RTN","PXAIHF",43,0)
 S ^TMP("PXK",$J,"HF",PXAK,811,"AFTER")=AFTER811
"RTN","PXAIHF",44,0)
 S ^TMP("PXK",$J,"HF",PXAK,812,"AFTER")=AFTER812
"RTN","PXAIHF",45,0)
 ;
"RTN","PXAIHF",46,0)
SETVARB ;Set the before variables.
"RTN","PXAIHF",47,0)
 N BEFOR0,BEFOR12,BEFOR220,BEFOR811,BEFOR812
"RTN","PXAIHF",48,0)
 N IENB,PXAAX,PXBCNT,PXBKY,PXBSKY,PXBSAM
"RTN","PXAIHF",49,0)
 D HF^PXBGHF(PXAVISIT)
"RTN","PXAIHF",50,0)
 ;
"RTN","PXAIHF",51,0)
 S IENB=""
"RTN","PXAIHF",52,0)
 I PXBCNT>0 D
"RTN","PXAIHF",53,0)
 . S PXAAX("HEALTH FACTOR")=$P($G(^AUTTHF(PXAA("HEALTH FACTOR"),0)),U,1)
"RTN","PXAIHF",54,0)
 . S IENB=$O(PXBKY(PXAAX("HEALTH FACTOR"),IENB))
"RTN","PXAIHF",55,0)
 I $G(IENB) D
"RTN","PXAIHF",56,0)
 . S BEFOR0=$G(^AUPNVHF(IENB,0))
"RTN","PXAIHF",57,0)
 . S BEFOR12=$G(^AUPNVHF(IENB,12))
"RTN","PXAIHF",58,0)
 . S BEFOR220=$G(^AUPNVHF(IENB,220))
"RTN","PXAIHF",59,0)
 . S BEFOR811=$G(^AUPNVHF(IENB,811))
"RTN","PXAIHF",60,0)
 . S BEFOR812=$G(^AUPNVHF(IENB,812))
"RTN","PXAIHF",61,0)
 E  S (BEFOR0,BEFOR11,BEFOR12,BEFOR220,BEFOR811,BEFOR812)=""
"RTN","PXAIHF",62,0)
 ;
"RTN","PXAIHF",63,0)
 S ^TMP("PXK",$J,"HF",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAIHF",64,0)
 S ^TMP("PXK",$J,"HF",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAIHF",65,0)
 S ^TMP("PXK",$J,"HF",PXAK,220,"BEFORE")=BEFOR220
"RTN","PXAIHF",66,0)
 S ^TMP("PXK",$J,"HF",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAIHF",67,0)
 S ^TMP("PXK",$J,"HF",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAIHF",68,0)
 S ^TMP("PXK",$J,"HF",PXAK,"IEN")=IENB
"RTN","PXAIHF",69,0)
 ;
"RTN","PXAIHF",70,0)
 Q
"RTN","PXAIPED")
0^27^B6655515
"RTN","PXAIPED",1,0)
PXAIPED ;ISL/PKR - Set the PATIENT EDUCATION nodes. ;08/31/2016
"RTN","PXAIPED",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**45,211**;Aug 12, 1996;Build 84
"RTN","PXAIPED",3,0)
 ;
"RTN","PXAIPED",4,0)
EDU ;Main entry point.
"RTN","PXAIPED",5,0)
 ;
"RTN","PXAIPED",6,0)
 K PXAERR
"RTN","PXAIPED",7,0)
 S PXAERR(8)=PXAK
"RTN","PXAIPED",8,0)
 S PXAERR(7)="PATIENT EDUCATION"
"RTN","PXAIPED",9,0)
 ;
"RTN","PXAIPED",10,0)
 N IND,PXAA
"RTN","PXAIPED",11,0)
 S IND=""
"RTN","PXAIPED",12,0)
 F  S IND=$O(@PXADATA@("PATIENT ED",PXAK,IND)) Q:IND=""  D
"RTN","PXAIPED",13,0)
 . S PXAA(IND)=@PXADATA@("PATIENT ED",PXAK,IND)
"RTN","PXAIPED",14,0)
 ;
"RTN","PXAIPED",15,0)
 ;Validate the data.
"RTN","PXAIPED",16,0)
 N STOP
"RTN","PXAIPED",17,0)
 D VAL^PXAIPEDV
"RTN","PXAIPED",18,0)
 I $G(STOP) Q
"RTN","PXAIPED",19,0)
 ;
"RTN","PXAIPED",20,0)
SETVARA ;Set the after visit variables.
"RTN","PXAIPED",21,0)
 N AFTER0,AFTER12,AFTER220,AFTER811,AFTER812
"RTN","PXAIPED",22,0)
 S $P(AFTER0,U,1)=$G(PXAA("TOPIC"))
"RTN","PXAIPED",23,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,U,1)="@"
"RTN","PXAIPED",24,0)
 S $P(AFTER0,U,2)=$G(PATIENT)
"RTN","PXAIPED",25,0)
 S $P(AFTER0,U,3)=$G(PXAVISIT)
"RTN","PXAIPED",26,0)
 S $P(AFTER0,U,6)=$G(PXAA("UNDERSTANDING"))
"RTN","PXAIPED",27,0)
 S $P(AFTER12,U,1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIPED",28,0)
 S $P(AFTER12,U,4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIPED",29,0)
 ;
"RTN","PXAIPED",30,0)
 ;Magnitude and UCUM code
"RTN","PXAIPED",31,0)
 S $P(AFTER220,U,1)=$G(PXAA("MAGNITUDE"))
"RTN","PXAIPED",32,0)
 S $P(AFTER220,U,2)=$G(PXAA("UCUM CODE"))
"RTN","PXAIPED",33,0)
 ;
"RTN","PXAIPED",34,0)
 S $P(AFTER811,U,1)=$G(PXAA("COMMENT"))
"RTN","PXAIPED",35,0)
 ;
"RTN","PXAIPED",36,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAIPED",37,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIPED",38,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIPED",39,0)
 ;
"RTN","PXAIPED",40,0)
 S ^TMP("PXK",$J,"PED",PXAK,0,"AFTER")=AFTER0
"RTN","PXAIPED",41,0)
 S ^TMP("PXK",$J,"PED",PXAK,12,"AFTER")=AFTER12
"RTN","PXAIPED",42,0)
 S ^TMP("PXK",$J,"PED",PXAK,220,"AFTER")=AFTER220
"RTN","PXAIPED",43,0)
 S ^TMP("PXK",$J,"PED",PXAK,811,"AFTER")=AFTER811
"RTN","PXAIPED",44,0)
 S ^TMP("PXK",$J,"PED",PXAK,812,"AFTER")=AFTER812
"RTN","PXAIPED",45,0)
 ;
"RTN","PXAIPED",46,0)
SETVARB ;Set the before variables.
"RTN","PXAIPED",47,0)
 N BEFOR0,BEFOR12,BEFOR220,BEFOR811,BEFOR812
"RTN","PXAIPED",48,0)
 N IENB,PXAAX,PXBCNT,PXBKY,PXBSKY,PXBSAM
"RTN","PXAIPED",49,0)
 D EDU^PXBGPED(PXAVISIT)
"RTN","PXAIPED",50,0)
 ;
"RTN","PXAIPED",51,0)
 S IENB=""
"RTN","PXAIPED",52,0)
 I PXBCNT>0 D
"RTN","PXAIPED",53,0)
 . S PXAAX("TOPIC")=$P($G(^AUTTEDT(PXAA("TOPIC"),0)),U,1)
"RTN","PXAIPED",54,0)
 . S IENB=$O(PXBKY(PXAAX("TOPIC"),IENB))
"RTN","PXAIPED",55,0)
 I $G(IENB) D
"RTN","PXAIPED",56,0)
 . S BEFOR0=$G(^AUPNVPED(IENB,0))
"RTN","PXAIPED",57,0)
 . S BEFOR12=$G(^AUPNVPED(IENB,12))
"RTN","PXAIPED",58,0)
 . S BEFOR220=$G(^AUPNVPED(IENB,220))
"RTN","PXAIPED",59,0)
 . S BEFOR811=$G(^AUPNVPED(IENB,811))
"RTN","PXAIPED",60,0)
 . S BEFOR812=$G(^AUPNVPED(IENB,812))
"RTN","PXAIPED",61,0)
 E  S (BEFOR0,BEFOR11,BEFOR12,BEFOR220,BEFOR811,BEFOR812)=""
"RTN","PXAIPED",62,0)
 ;
"RTN","PXAIPED",63,0)
 S ^TMP("PXK",$J,"PED",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAIPED",64,0)
 S ^TMP("PXK",$J,"PED",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAIPED",65,0)
 S ^TMP("PXK",$J,"PED",PXAK,220,"BEFORE")=BEFOR220
"RTN","PXAIPED",66,0)
 S ^TMP("PXK",$J,"PED",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAIPED",67,0)
 S ^TMP("PXK",$J,"PED",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAIPED",68,0)
 S ^TMP("PXK",$J,"PED",PXAK,"IEN")=IENB
"RTN","PXAIPED",69,0)
 ;
"RTN","PXAIPED",70,0)
 Q
"RTN","PXAISC")
0^20^B9004744
"RTN","PXAISC",1,0)
PXAISC ;SLC/PKR - Set V STANDARD CODES and Problem List. ;08/29/2016
"RTN","PXAISC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXAISC",3,0)
 ;
"RTN","PXAISC",4,0)
 Q
"RTN","PXAISC",5,0)
SC ;--Create V STANDRD CODES entry
"RTN","PXAISC",6,0)
 ;
"RTN","PXAISC",7,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAISC",8,0)
 N AFTER0,AFTER12,AFTER220,AFTER801,AFTER802,AFTER811,AFTER812
"RTN","PXAISC",9,0)
 N BEFOR0,BEFOR12,BEFOR220,BEFOR801,BEFOR802,BEFOR811,BEFOR812
"RTN","PXAISC",10,0)
 N IENB,NODE,PXAA,STOP,SUB
"RTN","PXAISC",11,0)
 ;
"RTN","PXAISC",12,0)
 K PXAERR
"RTN","PXAISC",13,0)
 S PXAERR(8)=PXAK
"RTN","PXAISC",14,0)
 S PXAERR(7)="STD CODE"
"RTN","PXAISC",15,0)
 ;
"RTN","PXAISC",16,0)
 S SUB="" F  S SUB=$O(@PXADATA@("STD CODES",PXAK,SUB)) Q:SUB=""  D
"RTN","PXAISC",17,0)
 .S PXAA(SUB)=@PXADATA@("STD CODES",PXAK,SUB)
"RTN","PXAISC",18,0)
 ;
"RTN","PXAISC",19,0)
 ;--VALIDATE ENOUGH DATA
"RTN","PXAISC",20,0)
 D VAL^PXAISCV Q:$G(STOP)
"RTN","PXAISC",21,0)
 ;
"RTN","PXAISC",22,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAISC",23,0)
 S $P(AFTER0,"^",1)=$G(PXAA("CODE"))
"RTN","PXAISC",24,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,"^",1)="@"
"RTN","PXAISC",25,0)
 S $P(AFTER0,"^",2)=$G(PATIENT),PXAA("PATIENT")=$G(PATIENT)
"RTN","PXAISC",26,0)
 S $P(AFTER0,"^",3)=$G(PXAVISIT)
"RTN","PXAISC",27,0)
 S $P(AFTER0,"^",5)=$G(PXAA("CODING SYSTEM"))
"RTN","PXAISC",28,0)
 S $P(AFTER12,"^",1)=$G(PXAA("EVENT D/T"))
"RTN","PXAISC",29,0)
 S $P(AFTER12,"^",4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAISC",30,0)
 ;
"RTN","PXAISC",31,0)
 ;Magnitude and UCUM code
"RTN","PXAISC",32,0)
 S $P(AFTER220,U,1)=$G(PXAA("MAGNITUDE"))
"RTN","PXAISC",33,0)
 S $P(AFTER220,U,2)=$G(PXAA("UCUM CODE"))
"RTN","PXAISC",34,0)
 ;
"RTN","PXAISC",35,0)
 I $G(PXAA("ENC PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAISC",36,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ENC PROVIDER")))=""
"RTN","PXAISC",37,0)
 ;
"RTN","PXAISC",38,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAISC",39,0)
 ;
"RTN","PXAISC",40,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAISC",41,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAISC",42,0)
 ;
"RTN","PXAISC",43,0)
 ;How do we make this work?
"RTN","PXAISC",44,0)
 ;D PL^PXAIPL
"RTN","PXAISC",45,0)
 ;
"RTN","PXAISC",46,0)
 ;
"RTN","PXAISC",47,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAISC",48,0)
 S ^TMP("PXK",$J,"SC",PXAK,0,"AFTER")=$G(AFTER0)
"RTN","PXAISC",49,0)
 S ^TMP("PXK",$J,"SC",PXAK,12,"AFTER")=$G(AFTER12)
"RTN","PXAISC",50,0)
 S ^TMP("PXK",$J,"SC",PXAK,220,"AFTER")=$G(AFTER220)
"RTN","PXAISC",51,0)
 S ^TMP("PXK",$J,"SC",PXAK,802,"AFTER")=$G(AFTER802)
"RTN","PXAISC",52,0)
 S ^TMP("PXK",$J,"SC",PXAK,811,"AFTER")=$G(AFTER811)
"RTN","PXAISC",53,0)
 S ^TMP("PXK",$J,"SC",PXAK,812,"AFTER")=$G(AFTER812)
"RTN","PXAISC",54,0)
 ;
"RTN","PXAISC",55,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAISC",56,0)
 ;
"RTN","PXAISC",57,0)
 ;--GET LIST OF POSSIBLE BEFORE ENTRIES
"RTN","PXAISC",58,0)
 N SCIENLST
"RTN","PXAISC",59,0)
 D SC^PXBGSC(PXAVISIT,.SCIENLST)
"RTN","PXAISC",60,0)
 ;
"RTN","PXAISC",61,0)
BEFOR ;
"RTN","PXAISC",62,0)
 S IEN=""
"RTN","PXAISC",63,0)
 I $D(SCIENLST) S IEN=$O(SCIENLST(PXAA("CODE"),PXAA("CODING SYSTEM"),""))
"RTN","PXAISC",64,0)
 I IEN="" S (BEFOR0,BEFOR12,BEFOR220,BEFOR800,BEFOR802,BEFOR811,BEFOR812)=""
"RTN","PXAISC",65,0)
 I +IEN>0 D
"RTN","PXAISC",66,0)
 . S BEFOR0=^AUPNVSC(IEN,0)
"RTN","PXAISC",67,0)
 . S BEFOR12=$G(^AUPNVSC(IEN,12))
"RTN","PXAISC",68,0)
 . S BEFOR220=$G(^AUPNVSC(IEN,220))
"RTN","PXAISC",69,0)
 . S BEFOR800=$G(^AUPNVSC(IEN,800))
"RTN","PXAISC",70,0)
 . S BEFOR811=$G(^AUPNVSC(IEN,811))
"RTN","PXAISC",71,0)
 . S BEFOR812=$G(^AUPNVSC(IEN,812))
"RTN","PXAISC",72,0)
 .;
"RTN","PXAISC",73,0)
SETPXKB ;--SET PXK ARRAY BEFORE
"RTN","PXAISC",74,0)
 S ^TMP("PXK",$J,"SC",PXAK,0,"BEFORE")=$G(BEFOR0)
"RTN","PXAISC",75,0)
 S ^TMP("PXK",$J,"SC",PXAK,12,"BEFORE")=$G(BEFOR12)
"RTN","PXAISC",76,0)
 S ^TMP("PXK",$J,"SC",PXAK,220,"BEFORE")=$G(BEFOR220)
"RTN","PXAISC",77,0)
 S ^TMP("PXK",$J,"SC",PXAK,800,"BEFORE")=$G(BEFOR800)
"RTN","PXAISC",78,0)
 S ^TMP("PXK",$J,"SC",PXAK,802,"BEFORE")=$G(BEFOR802)
"RTN","PXAISC",79,0)
 S ^TMP("PXK",$J,"SC",PXAK,811,"BEFORE")=$G(BEFOR811)
"RTN","PXAISC",80,0)
 S ^TMP("PXK",$J,"SC",PXAK,812,"BEFORE")=$G(BEFOR812)
"RTN","PXAISC",81,0)
 S ^TMP("PXK",$J,"SC",PXAK,"IEN")=IEN
"RTN","PXAISC",82,0)
 ;
"RTN","PXAISC",83,0)
 Q
"RTN","PXAISCV")
0^21^B5533538
"RTN","PXAISCV",1,0)
PXAISCV ;SLC/PKR - Validate Standard Code entry. ;12/21/2016
"RTN","PXAISCV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXAISCV",3,0)
 ;
"RTN","PXAISCV",4,0)
VAL ;--Validate enough data.
"RTN","PXAISCV",5,0)
 ;----Missing the code
"RTN","PXAISCV",6,0)
 I ($G(PXAA("CODE"))="") D  Q:$G(STOP)
"RTN","PXAISCV",7,0)
 .S STOP=1 ;--Used to stop do loop
"RTN","PXAISCV",8,0)
 .S PXAERRF=1 ;--Flag indicates there is an error
"RTN","PXAISCV",9,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAISCV",10,0)
 .S PXAERR(9)="CODE"
"RTN","PXAISCV",11,0)
 .S PXAERR(11)=$G(PXAA("CODE"))
"RTN","PXAISCV",12,0)
 .S PXAERR(12)="The code is missing."
"RTN","PXAISCV",13,0)
 ;
"RTN","PXAISCV",14,0)
 ;----Missing the coding system
"RTN","PXAISCV",15,0)
 I ($G(PXAA("CODING SYSTEM"))="") D  Q:$G(STOP)
"RTN","PXAISCV",16,0)
 .S STOP=1 ;--Used to stop do loop
"RTN","PXAISCV",17,0)
 .S PXAERRF=1 ;--Flag indicates there is an error
"RTN","PXAISCV",18,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAISCV",19,0)
 .S PXAERR(9)="CODING SYSTEM MISSING"
"RTN","PXAISCV",20,0)
 .S PXAERR(11)=$G(PXAA("CODING SYSTEM"))
"RTN","PXAISCV",21,0)
 .S PXAERR(12)="The coding system is missing."
"RTN","PXAISCV",22,0)
 ;
"RTN","PXAISCV",23,0)
 ;----Is the coding system valid?
"RTN","PXAISCV",24,0)
 N CODESYSL
"RTN","PXAISCV",25,0)
 D SCCSL^PXLEX(.CODESYSL)
"RTN","PXAISCV",26,0)
 I '$D(CODESYSL(PXAA("CODING SYSTEM"))) D  Q:$G(STOP)
"RTN","PXAISCV",27,0)
 .S STOP=1 ;--Used to stop do loop
"RTN","PXAISCV",28,0)
 .S PXAERRF=1 ;--Flag indicates there is an error
"RTN","PXAISCV",29,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAISCV",30,0)
 .S PXAERR(9)="INVALID CODING SYSTEM"
"RTN","PXAISCV",31,0)
 .S PXAERR(11)=$G(PXAA("CODING SYSTEM"))
"RTN","PXAISCV",32,0)
 .S PXAERR(12)="This coding system is not supported for V STANDARD CODES."
"RTN","PXAISCV",33,0)
 ;
"RTN","PXAISCV",34,0)
 ;----Is the coding system, code pair valid?
"RTN","PXAISCV",35,0)
 I '$$VCODE^PXLEX(PXAA("CODING SYSTEM"),PXAA("CODE")) D  Q:$G(STOP)
"RTN","PXAISCV",36,0)
 .S STOP=1
"RTN","PXAISCV",37,0)
 .S PXAERRF=1
"RTN","PXAISCV",38,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAISCV",39,0)
 .S PXAERR(9)="CODING SYSTEM, CODE PAIR"
"RTN","PXAISCV",40,0)
 .S PXAERR(11)=PXAA("CODING SYSTEM")_U_PXAA("CODE")
"RTN","PXAISCV",41,0)
 .S PXAERR(12)="Invalid code for the coding system."
"RTN","PXAISCV",42,0)
 ;
"RTN","PXAISCV",43,0)
 ;----Is the code active on the date of interest?
"RTN","PXAISCV",44,0)
 N DOI
"RTN","PXAISCV",45,0)
 S DOI=$G(PXAA("EVENT D/T"))
"RTN","PXAISCV",46,0)
 I DOI="" S DOI=$P(^AUPNVSIT(PXAVISIT,0),U,1)
"RTN","PXAISCV",47,0)
 I '$$ISCACT^PXLEX(PXAA("CODING SYSTEM"),PXAA("CODE"),DOI) D  Q:$G(STOP)
"RTN","PXAISCV",48,0)
 .S STOP=1
"RTN","PXAISCV",49,0)
 .S PXAERRF=1
"RTN","PXAISCV",50,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAISCV",51,0)
 .S PXAERR(9)="CODE NOT ACTIVE"
"RTN","PXAISCV",52,0)
 .S PXAERR(11)=PXAA("CODING SYSTEM")_U_PXAA("CODE")_U_DOI
"RTN","PXAISCV",53,0)
 .S PXAERR(12)="The code was not active on "_$$FMTE^XLFDT(DOI,"5Z")_"."
"RTN","PXAISCV",54,0)
 Q
"RTN","PXAIXAM")
0^28^B6516631
"RTN","PXAIXAM",1,0)
PXAIXAM ;ISL/PKR - Set the EXAM nodes. ;08/31/2016
"RTN","PXAIXAM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**45,211**;Aug 12, 1996;Build 84
"RTN","PXAIXAM",3,0)
 ;
"RTN","PXAIXAM",4,0)
EXAM ;Main entry point.
"RTN","PXAIXAM",5,0)
 ;
"RTN","PXAIXAM",6,0)
 K PXAERR
"RTN","PXAIXAM",7,0)
 S PXAERR(8)=PXAK
"RTN","PXAIXAM",8,0)
 S PXAERR(7)="EXAM"
"RTN","PXAIXAM",9,0)
 ;
"RTN","PXAIXAM",10,0)
 N IND,PXAA
"RTN","PXAIXAM",11,0)
 S IND=""
"RTN","PXAIXAM",12,0)
 F  S IND=$O(@PXADATA@("EXAM",PXAK,IND)) Q:IND=""  D
"RTN","PXAIXAM",13,0)
 . S PXAA(IND)=@PXADATA@("EXAM",PXAK,IND)
"RTN","PXAIXAM",14,0)
 ;
"RTN","PXAIXAM",15,0)
 ;Validate the data.
"RTN","PXAIXAM",16,0)
 N STOP
"RTN","PXAIXAM",17,0)
 D VAL^PXAIXAMV
"RTN","PXAIXAM",18,0)
 I $G(STOP) Q
"RTN","PXAIXAM",19,0)
 ;
"RTN","PXAIXAM",20,0)
SETVARA ;Set the after visit variables.
"RTN","PXAIXAM",21,0)
 N AFTER0,AFTER12,AFTER811,AFTER812
"RTN","PXAIXAM",22,0)
 S $P(AFTER0,U,1)=$G(PXAA("EXAM"))
"RTN","PXAIXAM",23,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,U,1)="@"
"RTN","PXAIXAM",24,0)
 S $P(AFTER0,U,2)=$G(PATIENT)
"RTN","PXAIXAM",25,0)
 S $P(AFTER0,U,3)=$G(PXAVISIT)
"RTN","PXAIXAM",26,0)
 S $P(AFTER0,U,4)=$G(PXAA("RESULT"))
"RTN","PXAIXAM",27,0)
 S $P(AFTER12,U,1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIXAM",28,0)
 S $P(AFTER12,U,4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIXAM",29,0)
 ;
"RTN","PXAIXAM",30,0)
 ;Magnitude and UCUM code
"RTN","PXAIXAM",31,0)
 S $P(AFTER220,U,1)=$G(PXAA("MAGNITUDE"))
"RTN","PXAIXAM",32,0)
 S $P(AFTER220,U,2)=$G(PXAA("UCUM CODE"))
"RTN","PXAIXAM",33,0)
 ;
"RTN","PXAIXAM",34,0)
 S $P(AFTER811,U,1)=$G(PXAA("COMMENT"))
"RTN","PXAIXAM",35,0)
 ;
"RTN","PXAIXAM",36,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAIXAM",37,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIXAM",38,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIXAM",39,0)
 ;
"RTN","PXAIXAM",40,0)
 S ^TMP("PXK",$J,"XAM",PXAK,0,"AFTER")=AFTER0
"RTN","PXAIXAM",41,0)
 S ^TMP("PXK",$J,"XAM",PXAK,12,"AFTER")=AFTER12
"RTN","PXAIXAM",42,0)
 S ^TMP("PXK",$J,"XAM",PXAK,220,"AFTER")=AFTER220
"RTN","PXAIXAM",43,0)
 S ^TMP("PXK",$J,"XAM",PXAK,811,"AFTER")=AFTER811
"RTN","PXAIXAM",44,0)
 S ^TMP("PXK",$J,"XAM",PXAK,812,"AFTER")=AFTER812
"RTN","PXAIXAM",45,0)
 ;
"RTN","PXAIXAM",46,0)
SETVARB ;Set the before variables.
"RTN","PXAIXAM",47,0)
 N BEFOR0,BEFOR12,BEFOR220,BEFOR811,BEFOR812
"RTN","PXAIXAM",48,0)
 N IENB,PXAAX,PXBCNT,PXBKY,PXBSKY,PXBSAM
"RTN","PXAIXAM",49,0)
 D EXAM^PXBGXAM(PXAVISIT)
"RTN","PXAIXAM",50,0)
 ;
"RTN","PXAIXAM",51,0)
 S IENB=""
"RTN","PXAIXAM",52,0)
 I PXBCNT>0 D
"RTN","PXAIXAM",53,0)
 . S PXAAX("EXAM")=$P($G(^AUTTEXAM(PXAA("EXAM"),0)),U,1)
"RTN","PXAIXAM",54,0)
 . S IENB=$O(PXBKY(PXAAX("EXAM"),IENB))
"RTN","PXAIXAM",55,0)
 I $G(IENB) D
"RTN","PXAIXAM",56,0)
 . S BEFOR0=$G(^AUPNVXAM(IENB,0))
"RTN","PXAIXAM",57,0)
 . S BEFOR12=$G(^AUPNVXAM(IENB,12))
"RTN","PXAIXAM",58,0)
 . S BEFOR8220=$G(^AUPNVXAM(IENB,220))
"RTN","PXAIXAM",59,0)
 . S BEFOR811=$G(^AUPNVXAM(IENB,811))
"RTN","PXAIXAM",60,0)
 . S BEFOR812=$G(^AUPNVXAM(IENB,812))
"RTN","PXAIXAM",61,0)
 E  S (BEFOR0,BEFOR11,BEFOR12,BEFOR220,BEFOR811,BEFOR812)=""
"RTN","PXAIXAM",62,0)
 ;
"RTN","PXAIXAM",63,0)
 S ^TMP("PXK",$J,"XAM",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAIXAM",64,0)
 S ^TMP("PXK",$J,"XAM",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAIXAM",65,0)
 S ^TMP("PXK",$J,"XAM",PXAK,220,"BEFORE")=BEFOR220
"RTN","PXAIXAM",66,0)
 S ^TMP("PXK",$J,"XAM",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAIXAM",67,0)
 S ^TMP("PXK",$J,"XAM",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAIXAM",68,0)
 S ^TMP("PXK",$J,"XAM",PXAK,"IEN")=IENB
"RTN","PXAIXAM",69,0)
 ;
"RTN","PXAIXAM",70,0)
 Q
"RTN","PXAPIDEL")
0^42^B57866031
"RTN","PXAPIDEL",1,0)
PXAPIDEL ;ISL/dee - PCE's code for the DELVFILE api ;12/16/2016
"RTN","PXAPIDEL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,22,130,168,197,216,211**;Aug 12, 1996;Build 84
"RTN","PXAPIDEL",3,0)
 Q
"RTN","PXAPIDEL",4,0)
 ;
"RTN","PXAPIDEL",5,0)
DELVFILE(PXAWHICH,PXAVISIT,PXAPKG,PXASOURC,PXAASK,PXAECHO,PXAUSER) ;Deletes the requested data related to the visit.
"RTN","PXAPIDEL",6,0)
 ;  PXAWHICH is a ^ delimited string with the last two or three letters
"RTN","PXAPIDEL",7,0)
 ;           of the v-files to delete entries from and VISIT for the
"RTN","PXAPIDEL",8,0)
 ;           administrative data on the visit and STOP for the stop codes.
"RTN","PXAPIDEL",9,0)
 ;           (e.g. for immunization the v-file is AUPNVIMM so IMM is
"RTN","PXAPIDEL",10,0)
 ;           passed.)  Or "ALL" to delete all of the data from the 
"RTN","PXAPIDEL",11,0)
 ;           V-Files, the Stop Code and Visit.
"RTN","PXAPIDEL",12,0)
 ;  PXAVISIT is pointer to a visit for which the related data is be
"RTN","PXAPIDEL",13,0)
 ;           deleted.
"RTN","PXAPIDEL",14,0)
 ;  PACKAGE  (optional) if passed will only delete items created by
"RTN","PXAPIDEL",15,0)
 ;           this package
"RTN","PXAPIDEL",16,0)
 ;  SOURCE   (optional) if passed will only delete items created by
"RTN","PXAPIDEL",17,0)
 ;           this source
"RTN","PXAPIDEL",18,0)
 ;  PXAASK   (optional) if passed and not 0 or "" then will ask the user
"RTN","PXAPIDEL",19,0)
 ;           if they are sure that they want to delete
"RTN","PXAPIDEL",20,0)
 ;           (suggest 1 if want to ask).
"RTN","PXAPIDEL",21,0)
 ;  PXAECHO  (optional) if passed and not 0 or "" then will display to
"RTN","PXAPIDEL",22,0)
 ;           the user what is being deleted (suggest 1 if want to echo).
"RTN","PXAPIDEL",23,0)
 ;  PXAUSER  (optional) this is the duz of a user if you only want to
"RTN","PXAPIDEL",24,0)
 ;           delete entries that this user created.  If it is not passed
"RTN","PXAPIDEL",25,0)
 ;           or is 0 or "" then it will not matter who created the
"RTN","PXAPIDEL",26,0)
 ;           entries being deleted.
"RTN","PXAPIDEL",27,0)
 ;
"RTN","PXAPIDEL",28,0)
 ; Returns:
"RTN","PXAPIDEL",29,0)
 ;   1  if no errors and process completely
"RTN","PXAPIDEL",30,0)
 ;   0  if errors occurred
"RTN","PXAPIDEL",31,0)
 ;      or try to delete something that was now allowed to delete
"RTN","PXAPIDEL",32,0)
 ;      but deletion processed completely as possible
"RTN","PXAPIDEL",33,0)
 ;  -1  if user said not to delete or user up arrows out
"RTN","PXAPIDEL",34,0)
 ;        or errors out. In any case nothing was delete.
"RTN","PXAPIDEL",35,0)
 ;  -2  if could not get a visit
"RTN","PXAPIDEL",36,0)
 ;  -3  if called incorrectly
"RTN","PXAPIDEL",37,0)
 ;  -4  if dependent entry count is still greater than zer0
"RTN","PXAPIDEL",38,0)
 ;
"RTN","PXAPIDEL",39,0)
 ;Good visit?
"RTN","PXAPIDEL",40,0)
 Q:'$G(PXAVISIT) -2
"RTN","PXAPIDEL",41,0)
 Q:'($D(^AUPNVSIT(PXAVISIT,0))#2) -2
"RTN","PXAPIDEL",42,0)
 ;
"RTN","PXAPIDEL",43,0)
 ;Get package pointer
"RTN","PXAPIDEL",44,0)
 S PACKAGE=$G(PACKAGE)
"RTN","PXAPIDEL",45,0)
 I PACKAGE="" S PXAPKG=0
"RTN","PXAPIDEL",46,0)
 E  I PACKAGE=+PACKAGE S PXAPKG=PACKAGE
"RTN","PXAPIDEL",47,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PACKAGE) I PXAPKG=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",48,0)
 I PXAPKG>0,'($D(^DIC(9.4,PXAPKG,0))#2) W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",49,0)
 ;
"RTN","PXAPIDEL",50,0)
 ;Lookup source in PCE DATA SOURCE file (#839.7) with LAYGO
"RTN","PXAPIDEL",51,0)
 S SOURCE=$G(SOURCE)
"RTN","PXAPIDEL",52,0)
 I SOURCE="" S PXASOURC=0
"RTN","PXAPIDEL",53,0)
 E  I SOURCE=+SOURCE S PXASOURC=SOURCE
"RTN","PXAPIDEL",54,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(SOURCE)
"RTN","PXAPIDEL",55,0)
 I +PXASOURC=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""SOURCE"", contact IRM." Q -3
"RTN","PXAPIDEL",56,0)
 ;
"RTN","PXAPIDEL",57,0)
 K ^TMP("PXK",$J)
"RTN","PXAPIDEL",58,0)
 N INDEX,PXACOUNT,PXAINDX,PXAVFILE,PXAFILE,PXARET,PXAWFLAG
"RTN","PXAPIDEL",59,0)
 N PXALEN,PXAIEN,PXAPIECE,PXAMYSOR
"RTN","PXAPIDEL",60,0)
 S PXARET=1
"RTN","PXAPIDEL",61,0)
 I PXAWHICH="ALL" S PXAWHICH="VISIT^STOP^CPT^IMM^PED^POV^PRV^SK^TRT^HF^XAM^ICR^SC" ; PX*1*216
"RTN","PXAPIDEL",62,0)
 S PXALEN=$L(PXAWHICH,"^")
"RTN","PXAPIDEL",63,0)
 Q:PXALEN<1 -3
"RTN","PXAPIDEL",64,0)
 E  F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D  Q:PXARET<0
"RTN","PXAPIDEL",65,0)
 . I "~VISIT~STOP~CPT~IMM~PED~POV~PRV~SK~TRT~HF~XAM~ICR~SC~"'[("~"_PXAVFILE_"~") S PXARET=-3 ; PX*1*216
"RTN","PXAPIDEL",66,0)
 Q:PXARET<0 PXARET
"RTN","PXAPIDEL",67,0)
 I PXAASK D  Q:PXARET<0 PXARET
"RTN","PXAPIDEL",68,0)
 . N DIR,X,Y
"RTN","PXAPIDEL",69,0)
 . ;ask the user if they want to delete
"RTN","PXAPIDEL",70,0)
 . S DIR(0)="Y"
"RTN","PXAPIDEL",71,0)
 . S DIR("A")="Are you sure you want to delete the encounter information"
"RTN","PXAPIDEL",72,0)
 . S DIR("B")="NO"
"RTN","PXAPIDEL",73,0)
 . D ^DIR
"RTN","PXAPIDEL",74,0)
 . I Y'=1 S PXARET=-1 Q
"RTN","PXAPIDEL",75,0)
 S PXAMYSOR=$$SOURCE^PXAPIUTL("PCE DELETE V-FILES API")
"RTN","PXAPIDEL",76,0)
STOP ;Do Stop Codes first
"RTN","PXAPIDEL",77,0)
  S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",78,0)
  I "^"_PXAWHICH_"^"["^STOP^" D
"RTN","PXAPIDEL",79,0)
 . S PXAIEN=0
"RTN","PXAPIDEL",80,0)
 . F PXACOUNT=0:1 S PXAIEN=$O(^AUPNVSIT("AD",PXAVISIT,PXAIEN)) Q:'PXAIEN  D
"RTN","PXAPIDEL",81,0)
 .. I PXAUSER>0,PXAUSER'=$P(^AUPNVSIT(PXAIEN,0),"^",23) Q
"RTN","PXAPIDEL",82,0)
 .. I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)="C" Q  ; do not delete credit stop code this time
"RTN","PXAPIDEL",83,0)
 .. I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)'="S" Q  ; delete only stop codes
"RTN","PXAPIDEL",84,0)
 .. I PXAWFLAG W !,"   ...deleting Stop Codes"
"RTN","PXAPIDEL",85,0)
 .. N PXST S PXST=$$STOPCODE^PXUTLSTP(PXAMYSOR,"@",PXAVISIT,PXAIEN) I PXST=-1 D
"RTN","PXAPIDEL",86,0)
 ... I PXAWFLAG W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP
"RTN","PXAPIDEL",87,0)
 ;Set up the visit
"RTN","PXAPIDEL",88,0)
 S ^TMP("PXK",$J,"PKG")=PXAPKG
"RTN","PXAPIDEL",89,0)
 S ^TMP("PXK",$J,"SOR")=PXAMYSOR
"RTN","PXAPIDEL",90,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXAVISIT
"RTN","PXAPIDEL",91,0)
 F PXAPIECE=0,21,150,800,811 D
"RTN","PXAPIDEL",92,0)
 . S (^TMP("PXK",$J,"VST",1,PXAPIECE,"BEFORE"),^TMP("PXK",$J,"VST",1,PXAPIECE,"AFTER"))=$G(^AUPNVSIT(PXAVISIT,PXAPIECE))
"RTN","PXAPIDEL",93,0)
 ;
"RTN","PXAPIDEL",94,0)
 F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D
"RTN","PXAPIDEL",95,0)
 . I PXAVFILE="VISIT" D
"RTN","PXAPIDEL",96,0)
 .. ;set fields to @
"RTN","PXAPIDEL",97,0)
 .. S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",18)="@"
"RTN","PXAPIDEL",98,0)
 .. F INDEX=1:1:8 S:$P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)]"" $P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)="@"
"RTN","PXAPIDEL",99,0)
 . E  I PXAVFILE="STOP" ;skip already done
"RTN","PXAPIDEL",100,0)
 . E  D  ;the v-files
"RTN","PXAPIDEL",101,0)
 .. S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",102,0)
 .. S PXAFILE=$P($T(FORMAT^@("PXCE"_$S(PXAVFILE="IMM":"VIMM",1:PXAVFILE))),"~",5)
"RTN","PXAPIDEL",103,0)
 .. S PXAIEN=0
"RTN","PXAPIDEL",104,0)
 .. F PXAINDX=1:1 S PXAIEN=$O(@(PXAFILE_"(""AD"",PXAVISIT,PXAIEN)")) Q:'PXAIEN  D
"RTN","PXAPIDEL",105,0)
 ... I $P($G(@(PXAFILE_"(PXAIEN,812)")),"^",1) S PXARET=0 Q
"RTN","PXAPIDEL",106,0)
 ... I PXAUSER>0,PXAUSER'=$P($P($P($G(@(PXAFILE_"(PXAIEN,801)")),"^",2),";",1)," ",2) Q
"RTN","PXAPIDEL",107,0)
 ... I PXAPKG>0,PXAPKG'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",2) Q
"RTN","PXAPIDEL",108,0)
 ... I PXASOURC>0,PXASOURC'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",3) Q
"RTN","PXAPIDEL",109,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"BEFORE")=@(PXAFILE_"(PXAIEN,0)")
"RTN","PXAPIDEL",110,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"AFTER")="@"
"RTN","PXAPIDEL",111,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,"IEN")=PXAIEN
"RTN","PXAPIDEL",112,0)
 ... I PXAWFLAG D
"RTN","PXAPIDEL",113,0)
 .... S PXAWFLAG=0
"RTN","PXAPIDEL",114,0)
 .... W !,"   ...deleting "
"RTN","PXAPIDEL",115,0)
 .... W $S("CPT"=PXAVFILE:"Procedure","IMM"=PXAVFILE:"Immunizations","PED"=PXAVFILE:"Patient Education","ICR"=PXAVFILE:"Contra/Refusal Event",1:"") ; PX*1*216
"RTN","PXAPIDEL",116,0)
 .... W $S("POV"=PXAVFILE:"Diagnoses","PRV"=PXAVFILE:"Providers","SK"=PXAVFILE:"Skin Test","TRT"=PXAVFILE:"Treatments","HF"=PXAVFILE:"Health Factors","XAM"=PXAVFILE:"Exams",1:"")
"RTN","PXAPIDEL",117,0)
 ;now process all the data except the stop codes which have already been done
"RTN","PXAPIDEL",118,0)
 ;
"RTN","PXAPIDEL",119,0)
 ;
"RTN","PXAPIDEL",120,0)
 N PXKERROR
"RTN","PXAPIDEL",121,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAPIDEL",122,0)
 . I PXAECHO,'$D(ZTQUEUED) D WAIT^DICD
"RTN","PXAPIDEL",123,0)
 . D EN1^PXKMAIN
"RTN","PXAPIDEL",124,0)
 . D EVENT^PXKMAIN
"RTN","PXAPIDEL",125,0)
 . K ^TMP("PXK",$J)
"RTN","PXAPIDEL",126,0)
 ;
"RTN","PXAPIDEL",127,0)
DELCR ;Do CREDIT Stop Code if it is the only entry except OE entry, not assoc. with apt
"RTN","PXAPIDEL",128,0)
 N SDD S SDD=$$VERAPT(PXAVISIT,.SDD) ; CHECK IF APPOINTMENT IS ASSOCIATED
"RTN","PXAPIDEL",129,0)
 I 'SDD D  ; perform IF no appointment is associated with
"RTN","PXAPIDEL",130,0)
 .S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",131,0)
 .I "^"_PXAWHICH_"^"["^STOP^" D
"RTN","PXAPIDEL",132,0)
 ..;VERIFY IF TO DELETE CREDIT STOP CODE AND IF SO THEN BE SURE PRIMARY VISIT WILL BE DELETED
"RTN","PXAPIDEL",133,0)
 ..;
"RTN","PXAPIDEL",134,0)
 ..S PXAIEN=0
"RTN","PXAPIDEL",135,0)
 ..F PXACOUNT=0:1 S PXAIEN=$O(^AUPNVSIT("AD",PXAVISIT,PXAIEN)) Q:'PXAIEN  D
"RTN","PXAPIDEL",136,0)
 ...I PXAUSER>0,PXAUSER'=$P(^AUPNVSIT(PXAIEN,0),"^",23) Q
"RTN","PXAPIDEL",137,0)
 ...I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)'="C" Q
"RTN","PXAPIDEL",138,0)
 ...; check how many entries point to the primary visit
"RTN","PXAPIDEL",139,0)
 ...N PXPCNT S PXPCNT=$$DEC^VSITKIL(PXAVISIT) ; CHECK COUNT OF PRIMARY VISIT
"RTN","PXAPIDEL",140,0)
 ...; CONTINUE ONLY if there are less than three entries;
"RTN","PXAPIDEL",141,0)
 ...; if there are 2 entries one of them would have to be OE
"RTN","PXAPIDEL",142,0)
 ...; because if not OE then the second entry would be not PCE one
"RTN","PXAPIDEL",143,0)
 ...; and the primary visit cannot be deleted
"RTN","PXAPIDEL",144,0)
 ...I PXPCNT>2 Q  ; 
"RTN","PXAPIDEL",145,0)
 ...I '$D(^SCE("AVSIT",PXAVISIT)) Q
"RTN","PXAPIDEL",146,0)
 ...I PXAWFLAG W !,"   ...deleting Credit Stop Codes"
"RTN","PXAPIDEL",147,0)
 ...N PXST S PXST=$$STOPCODE^PXUTLSTP(PXAMYSOR,"@",PXAVISIT,PXAIEN) I PXST=-1 D
"RTN","PXAPIDEL",148,0)
 ....I PXAWFLAG W !!,$C(7),"Cannot edit/delete at this time, try again later." D PAUSE^PXCEHELP
"RTN","PXAPIDEL",149,0)
 ;
"RTN","PXAPIDEL",150,0)
 N PXAKILL
"RTN","PXAPIDEL",151,0)
 I "^"_PXAWHICH_"^"["^VISIT^" D
"RTN","PXAPIDEL",152,0)
 . S PXAKILL=$$KILL^VSITKIL(PXAVISIT)
"RTN","PXAPIDEL",153,0)
 Q $S(PXARET=0!$D(PXKERROR):0,$G(PXAKILL):-4,1:1)
"RTN","PXAPIDEL",154,0)
 ;
"RTN","PXAPIDEL",155,0)
VERAPT(PXAVISIT,SCDXPOV) ;FUNCTION CALLED TO VERIFY IF VISIT IS ASSOCIATED WITH APPOINTMENT
"RTN","PXAPIDEL",156,0)
 N SDARRAY,SDCL,SDATE,SVSTSTR,SDFN,SCDXPOV,SDAPP
"RTN","PXAPIDEL",157,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXAPIDEL",158,0)
 I '$D(^AUPNVSIT(PXAVISIT,0)) Q $G(SCDXPOV)
"RTN","PXAPIDEL",159,0)
 S SVSTSTR=^AUPNVSIT(PXAVISIT,0)
"RTN","PXAPIDEL",160,0)
 S SDCL=$P(SVSTSTR,U,22),SDATE=$P(SVSTSTR,U)
"RTN","PXAPIDEL",161,0)
 S SDARRAY(1)=SDATE_";"_SDATE,SDFN=$P(SVSTSTR,U,5)
"RTN","PXAPIDEL",162,0)
 S SDARRAY(4)=SDFN
"RTN","PXAPIDEL",163,0)
 S SDARRAY(2)=SDCL
"RTN","PXAPIDEL",164,0)
 S SDARRAY("FLDS")="2;12;16"
"RTN","PXAPIDEL",165,0)
 N SDCOUNT S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","PXAPIDEL",166,0)
 I '$D(^TMP($J,"SDAMA301",SDFN,SDCL,SDATE)) Q $G(SCDXPOV)
"RTN","PXAPIDEL",167,0)
 S SDAPP=^TMP($J,"SDAMA301",SDFN,SDCL,SDATE)
"RTN","PXAPIDEL",168,0)
 N SDENC S SDENC=$P(SDAPP,U,12) ; OE
"RTN","PXAPIDEL",169,0)
 ; get OE from VISIT
"RTN","PXAPIDEL",170,0)
 N SDOEP
"RTN","PXAPIDEL",171,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXAPIDEL",172,0)
 D LISTVST^SDOERPC(.SDOEP,PXAVISIT)
"RTN","PXAPIDEL",173,0)
 S SDOEP=$P(SDOEP,")")_","_""""""_")"
"RTN","PXAPIDEL",174,0)
 S SDOEP=$O(@SDOEP)
"RTN","PXAPIDEL",175,0)
 I SDOEP>0 I SDENC=SDOEP S SCDXPOV=1 Q SCDXPOV  ; active appointment is associated with this visit
"RTN","PXAPIDEL",176,0)
 Q $G(SCDXPOV)
"RTN","PXAPIDEL",177,0)
 ;
"RTN","PXBGSC")
0^23^B475760
"RTN","PXBGSC",1,0)
PXBGSC ;SLC/PKR - Get the V Standard Codes before data. ;08/29/2016
"RTN","PXBGSC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXBGSC",3,0)
 ;
"RTN","PXBGSC",4,0)
SC(VISIT,SCIENLST) ;--Gather the entries in the V Standard Codes file
"RTN","PXBGSC",5,0)
 N CODE,CODESYS,DA,DIC,DIQ,DR,IEN,PLIEN
"RTN","PXBGSC",6,0)
 N SOURC,TEMP
"RTN","PXBGSC",7,0)
 ;
"RTN","PXBGSC",8,0)
 ;Looking at PXBGHF and PXAIHF there is a lot of data built in 
"RTN","PXBGSC",9,0)
 ;PXBGHF that is never used in PXAIHF. The main thing it does is to
"RTN","PXBGSC",10,0)
 ;return a list of IENs to PXAIHF. We do the same thing here for SC.
"RTN","PXBGSC",11,0)
 I '$D(^AUPNVSC("AD",VISIT)) Q
"RTN","PXBGSC",12,0)
 S IEN=0
"RTN","PXBGSC",13,0)
 F  S IEN=$O(^AUPNVSC("AD",VISIT,IEN)) Q:IEN'>0  D
"RTN","PXBGSC",14,0)
 . S TEMP=^AUPNVSC(IEN,0)
"RTN","PXBGSC",15,0)
 . S CODE=$P(TEMP,U,1)
"RTN","PXBGSC",16,0)
 . S CODESYS=$P(TEMP,U,5)
"RTN","PXBGSC",17,0)
 . S SCIENLST(CODE,CODESYS,IEN)=""
"RTN","PXBGSC",18,0)
 Q
"RTN","PXBGSC",19,0)
 ;
"RTN","PXBGSC",20,0)
 ;WHAT DOES THIS DO?
"RTN","PXBGSC",21,0)
 ;D PL^PXBGPL(PATIENT)
"RTN","PXBGSC",22,0)
 Q
"RTN","PXBGSC",23,0)
 ;
"RTN","PXCASC")
0^41^B7285331
"RTN","PXCASC",1,0)
PXCASC ;SLC/PKR - PCE Device Interface for V STANDARD CODES ;12/05/2016
"RTN","PXCASC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXCASC",3,0)
 Q
"RTN","PXCASC",4,0)
 ;
"RTN","PXCASC",5,0)
VALID(PXCA,PXCABULD,PXCAERRS) ;Validation routine for V STANDARD CODES.
"RTN","PXCASC",6,0)
 N CODE,CODESYS,CODESYSL,IND,NSC,PXCAPRV,SCDT,TEMP
"RTN","PXCASC",7,0)
 D SCCSL^PXLEX(.CODESYSL)
"RTN","PXCASC",8,0)
 S NSC=0,PXCAPRV=""
"RTN","PXCASC",9,0)
 F  S PXCAPRV=$O(PXCA("STD CODES",PXCAPRV)) Q:PXCAPRV=""  D
"RTN","PXCASC",10,0)
 . S IND=0
"RTN","PXCASC",11,0)
 . F  S IND=$O(PXCA("STD CODES",PXCAPRV,IND)) Q:IND']""  D
"RTN","PXCASC",12,0)
 .. S TEMP=$G(PXCA("STD CODES",PXCAPRV,IND,12))
"RTN","PXCASC",13,0)
 ..;If the Event Date and Time is present use it.
"RTN","PXCASC",14,0)
 .. S SCDT=$P(TEMP,U,1)
"RTN","PXCASC",15,0)
 .. I SCDT="" S SCDT=$S($G(PXCAVSIT)'="":$$CSDATE^PXDXUTL(PXCAVSIT),$D(PXCADT)=1:PXCADT,1:DT)
"RTN","PXCASC",16,0)
 .. I PXCAPRV>0 D
"RTN","PXCASC",17,0)
 ... I '$$ACTIVPRV^PXAPI(PXCAPRV,SCDT)  S PXCA("ERROR","STD CODES",PXCAPRV,0,0)="Provider is not active or valid for the date "_$$FMTE^XLFDT(SCDT)_"^"_PXCAPRV
"RTN","PXCASC",18,0)
 ... E  I PXCABULD!PXCAERRS D ANOTHPRV^PXCAPRV(PXCAPRV)
"RTN","PXCASC",19,0)
 .. S TEMP=$G(PXCA("STD CODES",PXCAPRV,IND))
"RTN","PXCASC",20,0)
 .. I TEMP="" S PXCA("ERROR","STD CODES",PXCAPRV,IND,0)="STD CODES data missing." Q
"RTN","PXCASC",21,0)
 .. S NSC=NSC+1
"RTN","PXCASC",22,0)
 .. S CODE=$P(TEMP,U,1)
"RTN","PXCASC",23,0)
 .. I CODE="" S PXCA("ERROR","STD CODES",PXCAPRV,IND,1)="The code is missing."
"RTN","PXCASC",24,0)
 .. S CODESYS=$P(TEMP,U,5)
"RTN","PXCASC",25,0)
 .. I CODESYS="" S PXCA("ERROR","STD CODES",PXCAPRV,IND,2)="The coding system is missing."
"RTN","PXCASC",26,0)
 .. I '$D(CODESYSL(CODESYS)) S PXCA("ERROR","STD CODES",PXCAPRV,IND,3)="The coding system "_CODESYS_" is not supported for V STANDARD CODES."
"RTN","PXCASC",27,0)
 .. I '$$VCODE^PXLEX(CODESYS,CODE) S PXCA("ERROR","STD CODES",PXCAPRV,IND,4)="The coding system "_CODESYS_" and code "_CODE_" pair is not valid."
"RTN","PXCASC",28,0)
 ..;Is the code active on the date?
"RTN","PXCASC",29,0)
 .. I '$$ISCACT^PXLEX(CODESYS,CODE,SCDT) S PXCA("ERROR","STD CODES",PXCAPRV,IND,5)="The code "_CODE_" is inactive on "_$$FMTE^XLFDT(SCDT,5)_"."
"RTN","PXCASC",30,0)
 Q
"RTN","PXCASC",31,0)
 ;
"RTN","PXCASOR")
0^40^B2775351
"RTN","PXCASOR",1,0)
PXCASOR ;ISL/dee - Validates & Translates data from the PCE Device Interface into PCE's PXK format for the Source ;11/16/2016
"RTN","PXCASOR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXCASOR",3,0)
 Q
"RTN","PXCASOR",4,0)
 ; Variables
"RTN","PXCASOR",5,0)
 ;   PXCASOR   Copy of the source node of the PXCA array
"RTN","PXCASOR",6,0)
 ;
"RTN","PXCASOR",7,0)
SOR(PXCASOR) ;
"RTN","PXCASOR",8,0)
 S ^TMP(PXCAGLB,$J,"SOR")=$P(PXCASOR,"^",1)
"RTN","PXCASOR",9,0)
 S PXKDUZ=$P(PXCASOR,"^",2)
"RTN","PXCASOR",10,0)
 Q
"RTN","PXCASOR",11,0)
 ;
"RTN","PXCASOR",12,0)
SOURCE(PXCA,PXCABULD,PXCAERRS) ;
"RTN","PXCASOR",13,0)
 I '($D(PXCA("SOURCE"))#2) S PXCA("ERROR","SOURCE",0,0,0)="SOURCE node of the local data array is missing" Q
"RTN","PXCASOR",14,0)
 N PXCASOR,PXCAITEM
"RTN","PXCASOR",15,0)
 S PXCASOR=$G(PXCA("SOURCE"))
"RTN","PXCASOR",16,0)
 I PXCASOR="" S PXCA("ERROR","SOURCE",0,0,0)="SOURCE data missing" Q
"RTN","PXCASOR",17,0)
 S PXCAITEM=+$P(PXCASOR,"^",1)
"RTN","PXCASOR",18,0)
 I 'PXCAITEM S PXCA("ERROR","SOURCE",0,0,1)="Data Source is Missing^"_PXCAITEM
"RTN","PXCASOR",19,0)
 E  I '$D(^PX(839.7,PXCAITEM,0)) S PXCA("ERROR","SOURCE",0,0,1)="Data Source is not in File 839.7^"_PXCAITEM
"RTN","PXCASOR",20,0)
 S PXCAITEM=+$P(PXCASOR,"^",2)
"RTN","PXCASOR",21,0)
 I '$D(^VA(200,PXCAITEM,0)) S PXCA("ERROR","SOURCE",0,0,2)="User is not in File 200^"_PXCAITEM
"RTN","PXCASOR",22,0)
 I PXCABULD&'$D(PXCA("ERROR","SOURCE"))!PXCAERRS D SOR(PXCASOR)
"RTN","PXCASOR",23,0)
 Q
"RTN","PXCASOR",24,0)
 ;
"RTN","PXCEAE")
0^33^B33181486
"RTN","PXCEAE",1,0)
PXCEAE ;ISL/dee,ISA/KWP - Main routine for the List Manager display of a visit and related v-files ;09/02/2016
"RTN","PXCEAE",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**37,67,99,147,156,172,195,215,211**;Aug 12, 1996;Build 84
"RTN","PXCEAE",3,0)
 ;; ;
"RTN","PXCEAE",4,0)
 Q
"RTN","PXCEAE",5,0)
EN ;+ -- main entry point for PXCE DISPLAY VISIT
"RTN","PXCEAE",6,0)
 Q:$G(PXCEVIEN)'>0
"RTN","PXCEAE",7,0)
 ;The selection list for the AICS' package interface used in help messages
"RTN","PXCEAE",8,0)
 N PXCEHLST
"RTN","PXCEAE",9,0)
 ;
"RTN","PXCEAE",10,0)
 N PXCEAEVW S PXCEAEVW="B"
"RTN","PXCEAE",11,0)
 N PXCEVDEL S PXCEVDEL=0
"RTN","PXCEAE",12,0)
 ;
"RTN","PXCEAE",13,0)
 I '$D(PXCEPAT) N PXCEPAT D
"RTN","PXCEAE",14,0)
 . S PXCEPAT=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",5)
"RTN","PXCEAE",15,0)
 ; next 3 lines PX*1.0*172
"RTN","PXCEAE",16,0)
 N PXREC,PXPTSSN,PXDUZ S PXDUZ=DUZ,PXPTSSN=$P($G(^DPT(PXCEPAT,0)),U,9)
"RTN","PXCEAE",17,0)
 D SEC^PXCEEXP(.PXREC,PXDUZ,PXPTSSN)
"RTN","PXCEAE",18,0)
 I PXREC W !!,"Security regulations prohibit computer access to your own medical record." H 3 Q
"RTN","PXCEAE",19,0)
 S PXCECAT="AEP" D PATINFO^PXCEPAT(.PXCEPAT) K PXCECAT
"RTN","PXCEAE",20,0)
 ;
"RTN","PXCEAE",21,0)
 I '$D(PXCEHLOC) N PXCEHLOC S PXCEHLOC=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",22)
"RTN","PXCEAE",22,0)
 ;Get Visit date/time if exists - PX*195
"RTN","PXCEAE",23,0)
 I '$D(PXCEAPDT) N PXCEAPDT S PXCEAPDT=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^")
"RTN","PXCEAE",24,0)
 ;+If not called from encounter viewer lock ^PXLCKUSR
"RTN","PXCEAE",25,0)
 ;+and create ^XTMP("PXLCKUSR",VISIEN)=DUZ
"RTN","PXCEAE",26,0)
 I PXCEKEYS'["V" D
"RTN","PXCEAE",27,0)
 .N PXRESVAL,PXVISIEN,PXMSG,PXUSR
"RTN","PXCEAE",28,0)
 .S PXMSG="",PXVISIEN=PXCEVIEN
"RTN","PXCEAE",29,0)
 .I $D(^XTMP("PXLCKUSR",PXVISIEN)) S PXUSR=$G(^VA(200,^XTMP("PXLCKUSR",PXVISIEN),0)),PXUSR=$S(PXUSR="":"Unknown",1:$P(PXUSR,"^")),PXMSG="Encounter Locked by "_PXUSR
"RTN","PXCEAE",30,0)
 .S PXRESVAL=$$LOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")",5,0,PXMSG,0)
"RTN","PXCEAE",31,0)
 .I 'PXRESVAL Q
"RTN","PXCEAE",32,0)
 .S PXRESVAL=$$CREATE^PXUAXTMP("PXLCKUSR",PXVISIEN,365,"PCE Encounter Lock",DUZ)
"RTN","PXCEAE",33,0)
 .I 'PXRESVAL D UNLOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")") Q
"RTN","PXCEAE",34,0)
 .D EN^VALM("PXCE ADD/EDIT MENU")
"RTN","PXCEAE",35,0)
 .D UNLOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")"),DELETE^PXUAXTMP("PXLCKUSR",PXVISIEN)
"RTN","PXCEAE",36,0)
 I PXCEKEYS["V",$D(^TMP("VALM DATA",$J,VALMEVL,"EXP")),^("EXP")]"" X ^("EXP")
"RTN","PXCEAE",37,0)
 Q
"RTN","PXCEAE",38,0)
 ;
"RTN","PXCEAE",39,0)
GETVIEN ;Ask the user which visit.
"RTN","PXCEAE",40,0)
 N PXCEVIDX
"RTN","PXCEAE",41,0)
 S PXCEVIDX=+$P(XQORNOD(0),"^",3)
"RTN","PXCEAE",42,0)
 S:PXCEVIDX'>0 PXCEVIDX=$$SEL1^PXCE("")
"RTN","PXCEAE",43,0)
 Q:PXCEVIDX'>0
"RTN","PXCEAE",44,0)
 S PXCEVIEN=$G(^TMP("PXCEIDX",$J,PXCEVIDX))
"RTN","PXCEAE",45,0)
 ;Check that it is not related to a no show or canceled apppointment
"RTN","PXCEAE",46,0)
 D APPCHECK^PXCESDAM(.PXCEVIEN)
"RTN","PXCEAE",47,0)
 Q:'$D(PXCEVIEN)
"RTN","PXCEAE",48,0)
 ;Cannot edit future visits
"RTN","PXCEAE",49,0)
 I $P(+^AUPNVSIT(PXCEVIEN,0),".")>DT D  Q
"RTN","PXCEAE",50,0)
 . W !!,$C(7),"Can not update future encounters."
"RTN","PXCEAE",51,0)
 . D WAIT^PXCEHELP
"RTN","PXCEAE",52,0)
 . K PXCEVIEN
"RTN","PXCEAE",53,0)
 ;Check if the visit can be associated with an appointment.
"RTN","PXCEAE",54,0)
 S PXCEAPPM=$G(^DPT($P(^AUPNVSIT(PXCEVIEN,0),"^",5),"S",+^AUPNVSIT(PXCEVIEN,0),0))
"RTN","PXCEAE",55,0)
 I $P(PXCEVIEN,"^",7)="E" D  I 'Y K PXCEVIEN Q
"RTN","PXCEAE",56,0)
 . W !!,"This is a historical encounter for documenting a clinical encounter only"
"RTN","PXCEAE",57,0)
 . W !,"and will not be used by Scheduling, Billing or Workload credit."
"RTN","PXCEAE",58,0)
 . D PAUSE^PXCEHELP
"RTN","PXCEAE",59,0)
 Q
"RTN","PXCEAE",60,0)
 ;
"RTN","PXCEAE",61,0)
HDR ; -- header code
"RTN","PXCEAE",62,0)
 I '$D(^AUPNVSIT(PXCEVIEN,0)) S VALMQUIT=1 Q
"RTN","PXCEAE",63,0)
 K VALMHDR
"RTN","PXCEAE",64,0)
 N VISIT0
"RTN","PXCEAE",65,0)
 ;
"RTN","PXCEAE",66,0)
 ;PATIENT
"RTN","PXCEAE",67,0)
 S VISIT0=^AUPNVSIT(PXCEVIEN,0)
"RTN","PXCEAE",68,0)
 S VALMHDR(1)=$E(PXCEPAT("NAME"),1,26)
"RTN","PXCEAE",69,0)
 S VALMHDR(1)=$E(VALMHDR(1)_$E("    ",1,(27-$L(VALMHDR(1))))_PXCEPAT("SSN")_"                                           ",1,40)
"RTN","PXCEAE",70,0)
 S VALMHDR(1)=VALMHDR(1)_"Clinic:  "_$S($P(VISIT0,"^",22)>0:$P(^SC($P(VISIT0,"^",22),0),"^"),1:"")
"RTN","PXCEAE",71,0)
 ;
"RTN","PXCEAE",72,0)
 ;DATE
"RTN","PXCEAE",73,0)
 S VALMHDR(2)=$E("Encounter Date  "_$S($P(VISIT0,"^",1)>0:$$DATE^PXCEDATE($P(VISIT0,"^",1)),1:"")_"                                           ",1,40)
"RTN","PXCEAE",74,0)
 S VALMHDR(2)=VALMHDR(2)_"Clinic Stop:  "_$S($P(VISIT0,"^",8)>0:$$DISPLY08^PXCECSTP($P(VISIT0,"^",8)),1:"")
"RTN","PXCEAE",75,0)
 ;
"RTN","PXCEAE",76,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXCEAE",77,0)
 ;
"RTN","PXCEAE",78,0)
 Q
"RTN","PXCEAE",79,0)
 ;
"RTN","PXCEAE",80,0)
KEYS(PXCEPROT,PXCEEND) ;Set up ^XQORM("KEY") array so that can edit an item by having its 
"RTN","PXCEAE",81,0)
 ;  number be and action to edit it.
"RTN","PXCEAE",82,0)
 N PXCEPIEN,PXCEINDX
"RTN","PXCEAE",83,0)
 S PXCEPIEN=$O(^ORD(101,"B",PXCEPROT,0))_"^1"
"RTN","PXCEAE",84,0)
 F PXCEINDX=1:1:PXCEEND S XQORM("KEY",PXCEINDX)=PXCEPIEN
"RTN","PXCEAE",85,0)
 ;
"RTN","PXCEAE",86,0)
 Q
"RTN","PXCEAE",87,0)
 ;
"RTN","PXCEAE",88,0)
INIT ; -- init variables and list array
"RTN","PXCEAE",89,0)
 D BUILD^PXCEAE1(PXCEVIEN,PXCEAEVW,"^TMP(""PXCEAE"",$J)","^TMP(""PXCEAEIX"",$J)")
"RTN","PXCEAE",90,0)
 I '$D(VALMBCK) K VALMHDR S VALMBCK="R"
"RTN","PXCEAE",91,0)
 Q
"RTN","PXCEAE",92,0)
 ;
"RTN","PXCEAE",93,0)
HELP ; -- help code
"RTN","PXCEAE",94,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXCEAE",95,0)
 Q
"RTN","PXCEAE",96,0)
 ;
"RTN","PXCEAE",97,0)
EXIT ; -- exit code
"RTN","PXCEAE",98,0)
 ;
"RTN","PXCEAE",99,0)
 ;Check for incomplete ENCOUNTER if not already removed.
"RTN","PXCEAE",100,0)
 N PXQUIT
"RTN","PXCEAE",101,0)
 S PXQUIT=1
"RTN","PXCEAE",102,0)
 D:'$G(PXCEEXIT) CHECK^PXCEVFI5
"RTN","PXCEAE",103,0)
 ;
"RTN","PXCEAE",104,0)
 D CLEAN^VALM10
"RTN","PXCEAE",105,0)
 K ^TMP("PXCEAE",$J),^TMP("PXCEAEIX",$J)
"RTN","PXCEAE",106,0)
 D EVENT^PXKMAIN
"RTN","PXCEAE",107,0)
 K PXCEVIEN,PXCEAPPM
"RTN","PXCEAE",108,0)
 Q
"RTN","PXCEAE",109,0)
 ;
"RTN","PXCEAE",110,0)
EXPND ; -- expand code
"RTN","PXCEAE",111,0)
 S PXCEAEVW=$S(PXCEAEVW="B":"D",1:"B")
"RTN","PXCEAE",112,0)
 D BUILD^PXCEAE1(PXCEVIEN,PXCEAEVW,"^TMP(""PXCEAE"",$J)","^TMP(""PXCEAEIX"",$J)")
"RTN","PXCEAE",113,0)
 D DONE^PXCE
"RTN","PXCEAE",114,0)
 Q
"RTN","PXCEAE",115,0)
 ;
"RTN","PXCEAE",116,0)
EDIT ; -- edit a V-File entry
"RTN","PXCEAE",117,0)
 N PXCEFIDX
"RTN","PXCEAE",118,0)
 S PXCEFIDX=+$P(XQORNOD(0),"^",3)
"RTN","PXCEAE",119,0)
 D DOMANY(PXCEFIDX,"E","EN^PXCEVFIL(PXCECAT)")
"RTN","PXCEAE",120,0)
 Q
"RTN","PXCEAE",121,0)
 ;
"RTN","PXCEAE",122,0)
DEL ; -- delete a V-File entries
"RTN","PXCEAE",123,0)
 I PXCEKEYS'["D",PXCEKEYS'["d" W !!!,$C(7),"Error: You do not have delete access." D WAIT^PXCEHELP Q
"RTN","PXCEAE",124,0)
 D DOMANY(0,"D","DEL^PXCEVFI2(PXCECAT)")
"RTN","PXCEAE",125,0)
 Q
"RTN","PXCEAE",126,0)
 ;
"RTN","PXCEAE",127,0)
DOMANY(PXCEFIDX,WHATDO,WHATTODO) ;Process one or more V-File entries
"RTN","PXCEAE",128,0)
 ;WHATDO is E for edit and D for delete
"RTN","PXCEAE",129,0)
 ;WHATTODO is the routine to call
"RTN","PXCEAE",130,0)
 ;
"RTN","PXCEAE",131,0)
 I WHATDO="D" N PXCEDELV S PXCEDELV=0
"RTN","PXCEAE",132,0)
 D FULL^VALM1
"RTN","PXCEAE",133,0)
 I WHATDO="E" D
"RTN","PXCEAE",134,0)
 . S:PXCEFIDX'>0 PXCEFIDX=$$SEL^PXCEAE2("Edit",1)
"RTN","PXCEAE",135,0)
 E  I WHATDO="D" D
"RTN","PXCEAE",136,0)
 . S:PXCEFIDX'>0 PXCEFIDX=$$SEL^PXCEAE2("Delete",2)
"RTN","PXCEAE",137,0)
 E  W "??",$C(7) Q
"RTN","PXCEAE",138,0)
 Q:+PXCEFIDX'>0
"RTN","PXCEAE",139,0)
 N PXCEINDX,PXCEFIX1,PXCEFIX2
"RTN","PXCEAE",140,0)
 F PXCEINDX=1:1 S PXCEFIX1=$P(PXCEFIDX,",",PXCEINDX) Q:PXCEFIX1']""  D
"RTN","PXCEAE",141,0)
 . I $L(PXCEFIX1,"-")=1 D
"RTN","PXCEAE",142,0)
 .. I WHATDO="D",PXCEFIX1=1 S PXCEDELV=1
"RTN","PXCEAE",143,0)
 .. E  D DO1(PXCEFIX1,WHATDO,WHATTODO)
"RTN","PXCEAE",144,0)
 . E  F PXCEFIX2=$P(PXCEFIX1,"-",1):1:$P(PXCEFIX1,"-",2) D
"RTN","PXCEAE",145,0)
 .. I WHATDO="D",PXCEFIX2=1 S PXCEDELV=1
"RTN","PXCEAE",146,0)
 .. E  D DO1(PXCEFIX2,WHATDO,WHATTODO)
"RTN","PXCEAE",147,0)
 I WHATDO="D",PXCEDELV D DO1(1,WHATDO,WHATTODO)
"RTN","PXCEAE",148,0)
 D INIT
"RTN","PXCEAE",149,0)
 Q
"RTN","PXCEAE",150,0)
 ;
"RTN","PXCEAE",151,0)
DO1(PXCEFIDX,WHATDO,WHATTODO) ;Process one V-File entry
"RTN","PXCEAE",152,0)
 ;PXCEFIDX is and index into ^TMP("PXCEAEIX",$J, which tells the V-File
"RTN","PXCEAE",153,0)
 ;  and the IEN to process
"RTN","PXCEAE",154,0)
 ;WHATDO is E for edit and D for delete
"RTN","PXCEAE",155,0)
 ;WHATTODO is the routine to call
"RTN","PXCEAE",156,0)
 ;
"RTN","PXCEAE",157,0)
 N PXCEONE,PXCECAT,PXCEFIEN
"RTN","PXCEAE",158,0)
 S PXCEONE=$G(^TMP("PXCEAEIX",$J,PXCEFIDX))
"RTN","PXCEAE",159,0)
 S PXCEFIEN=+PXCEONE
"RTN","PXCEAE",160,0)
 S PXCECAT=$P(PXCEONE,"^",2)
"RTN","PXCEAE",161,0)
 I PXCECAT="CSTP",WHATDO="E" W !!!,$C(7),"You cannot edit stop codes." S PXCENOER=1 D WAIT^PXCEHELP Q
"RTN","PXCEAE",162,0)
 I PXCECAT="VST",$P(^AUPNVSIT(PXCEFIEN,0),"^",7)="E" S PXCECAT="HIST"
"RTN","PXCEAE",163,0)
 D @$S("~VST~HIST~CSTP~CPT~IMM~PED~POV~PRV~SK~TRT~HF~XAM~ICR~SC~"[("~"_PXCECAT_"~"):WHATTODO,1:"QUIT") ; PX*1*215
"RTN","PXCEAE",164,0)
 Q
"RTN","PXCEAE",165,0)
 ;
"RTN","PXCEAE",166,0)
QUIT Q
"RTN","PXCEAE",167,0)
 ;
"RTN","PXCEAE1")
0^32^B28872545
"RTN","PXCEAE1",1,0)
PXCEAE1 ;ISL/dee,ISA/KWP,SLC/ajb - Builds the List Manager display of a visit and related v-files ;08/31/2016
"RTN","PXCEAE1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,73,199,201,210,215,211**;Aug 12, 1996;Build 84
"RTN","PXCEAE1",3,0)
 ;; ;
"RTN","PXCEAE1",4,0)
 Q
"RTN","PXCEAE1",5,0)
 ;
"RTN","PXCEAE1",6,0)
BUILD(VISITIEN,AEVIEW,ARRAY,ARRAYIX) ;
"RTN","PXCEAE1",7,0)
 ;AEVIEW is "B" for brief display and "D" for expanded display.
"RTN","PXCEAE1",8,0)
 I '$D(^AUPNVSIT(VISITIEN)) S VALMBCK="Q" Q
"RTN","PXCEAE1",9,0)
 N PXCECNT
"RTN","PXCEAE1",10,0)
 D FULL^VALM1
"RTN","PXCEAE1",11,0)
 D CLEAN^VALM10
"RTN","PXCEAE1",12,0)
 K @ARRAYIX
"RTN","PXCEAE1",13,0)
 S (VALMCNT,PXCECNT)=0
"RTN","PXCEAE1",14,0)
 ;
"RTN","PXCEAE1",15,0)
 ;
"RTN","PXCEAE1",16,0)
 N IEN,FILE,VFILE,VROUTINE
"RTN","PXCEAE1",17,0)
 F FILE="SIT","CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR","SC" D  ; PX*1*215
"RTN","PXCEAE1",18,0)
 . S VROUTINE="PXCE"_$S(FILE="IMM":"VIMM",1:FILE)
"RTN","PXCEAE1",19,0)
 . S VFILE=$P($T(FORMAT^@VROUTINE),"~",5)
"RTN","PXCEAE1",20,0)
 . I FILE="SIT" D
"RTN","PXCEAE1",21,0)
 .. S IEN=VISITIEN
"RTN","PXCEAE1",22,0)
 .. D AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,.PXCECNT,AEVIEW)
"RTN","PXCEAE1",23,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXCEAE1",24,0)
 .. S @ARRAY@(VALMCNT,0)=""
"RTN","PXCEAE1",25,0)
 . E  D
"RTN","PXCEAE1",26,0)
 .. S IEN=""
"RTN","PXCEAE1",27,0)
 .. F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,.PXCECNT,AEVIEW)
"RTN","PXCEAE1",28,0)
 S @ARRAYIX@(0)=PXCECNT
"RTN","PXCEAE1",29,0)
 I VALMCNT=0 S VALMBCK="Q"
"RTN","PXCEAE1",30,0)
 Q
"RTN","PXCEAE1",31,0)
 ;
"RTN","PXCEAE1",32,0)
AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,VALMCNT,PXCECNT,AEVIEW) ;
"RTN","PXCEAE1",33,0)
 N ENTRY,NODE,NODES,NODECNT
"RTN","PXCEAE1",34,0)
 S PXCECNT=PXCECNT+1
"RTN","PXCEAE1",35,0)
 S NODES=$P($T(FORMAT^@VROUTINE),"~",3)
"RTN","PXCEAE1",36,0)
 F NODECNT=1:1 S NODE=$P(NODES,",",NODECNT) Q:NODE']""  S ENTRY(NODE)=$G(@VFILE@(IEN,NODE))
"RTN","PXCEAE1",37,0)
 D DISPLAY(.ENTRY,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,PXCECNT,AEVIEW)
"RTN","PXCEAE1",38,0)
 I FILE="SIT" S @ARRAYIX@(PXCECNT)=VISITIEN_"^VST"
"RTN","PXCEAE1",39,0)
 E  S @ARRAYIX@(PXCECNT)=IEN_"^"_FILE
"RTN","PXCEAE1",40,0)
 Q
"RTN","PXCEAE1",41,0)
 ;
"RTN","PXCEAE1",42,0)
DISPLAY(ENTRY,PXCECODE,ARRAY,ARRAYIX,LINE,COUNT,VIEW) ; -- display the data
"RTN","PXCEAE1",43,0)
 N PXCEFILE,PXCELINE,PXCETEXT,PXCEINT,PXCEEXT
"RTN","PXCEAE1",44,0)
 S PXCEFILE=$P($T(FORMAT^@PXCECODE),"~",2)
"RTN","PXCEAE1",45,0)
 F PXCELINE=1:1 S PXCETEXT=$P($T(FORMAT+PXCELINE^@PXCECODE),";;",2) Q:PXCETEXT']""  D
"RTN","PXCEAE1",46,0)
 . ; save original PXCETEXT for multiple diagnosis ouput ; ajb
"RTN","PXCEAE1",47,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3 N TMPTXT S TMPTXT=PXCETEXT ; ajb
"RTN","PXCEAE1",48,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2 N TMPTXT S TMPTXT=PXCETEXT ; PX*1*210
"RTN","PXCEAE1",49,0)
 . S (PXCEEXT,PXCEINT)=$P(ENTRY($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEAE1",50,0)
 . ; get entries from diagnosis multiple ; ajb
"RTN","PXCEAE1",51,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3 D  S:PXCEINT="" PXCEINT="^" S PXCEEXT=PXCEINT ; ajb
"RTN","PXCEAE1",52,0)
 . . N CNT,NIEN S (CNT,NIEN)=0 F  S NIEN=$O(^AUPNVIMM(IEN,3,NIEN)) Q:'+NIEN  D  ; ajb
"RTN","PXCEAE1",53,0)
 . . . S CNT=CNT+1,$P(PXCEINT,U,CNT)=$G(^AUPNVIMM(IEN,3,NIEN,0)) ; ajb
"RTN","PXCEAE1",54,0)
 . ; ajb - above / PX*1*210 - below
"RTN","PXCEAE1",55,0)
 . ; get entries from vis offered/given to patient multiple ; PX*1*210
"RTN","PXCEAE1",56,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2 D  S:PXCEINT="" PXCEINT="^" S PXCEEXT=PXCEINT
"RTN","PXCEAE1",57,0)
 . . N CNT,NIEN S (CNT,NIEN)=0 F  S NIEN=$O(^AUPNVIMM(IEN,2,NIEN)) Q:'+NIEN  D
"RTN","PXCEAE1",58,0)
 . . . S CNT=CNT+1,$P(PXCEINT,U,CNT)=$P($G(^AUPNVIMM(IEN,2,NIEN,0)),"^")
"RTN","PXCEAE1",59,0)
 . ; PX*1*210
"RTN","PXCEAE1",60,0)
 . I PXCETEXT'["CPT Modifier",PXCEINT="" Q  ;Q:PXCEINT=""
"RTN","PXCEAE1",61,0)
 . Q:$P(PXCETEXT,"~",10)="N"
"RTN","PXCEAE1",62,0)
 . I VIEW'="D",$P(PXCETEXT,"~",10)="D" Q
"RTN","PXCEAE1",63,0)
 . I PXCECODE="PXCECSTP",$P(PXCETEXT,"~",3)=.01 Q
"RTN","PXCEAE1",64,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2,+PXCEINT D VIS Q
"RTN","PXCEAE1",65,0)
 . I $P(PXCETEXT,"~",6)]"" D  Q:PXCEEXT=""
"RTN","PXCEAE1",66,0)
 .. S @("PXCEEXT="_$P(PXCETEXT,"~",6)_"("""_$S($P(PXCETEXT,"~",3)=.01:ENTRY($P(PXCETEXT,"~",1)),1:PXCEINT)_""")")
"RTN","PXCEAE1",67,0)
 . E  D
"RTN","PXCEAE1",68,0)
 .. N PXCEDILF,DIERR,PXCEI
"RTN","PXCEAE1",69,0)
 .. S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEAE1",70,0)
 .. S PXCEEXT=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEAE1",71,0)
 . ; get ICD info for multiple diagnosis ; ajb
"RTN","PXCEAE1",72,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3,+PXCEINT D  ; ajb
"RTN","PXCEAE1",73,0)
 . . S PXCEEXT="" ; ajb
"RTN","PXCEAE1",74,0)
 . . N CNT F CNT=1:1:$L(PXCEINT,U) S $P(PXCEEXT,U,CNT)=$$DISPLY01^PXCEPOV($P(PXCEINT,U,CNT)) ; ajb
"RTN","PXCEAE1",75,0)
 . N TEMP S TEMP=PXCEEXT
"RTN","PXCEAE1",76,0)
 . N PXI F PXI=1:1 Q:$P(TEMP,"^",PXI)=""  S PXCEEXT=$P(TEMP,"^",PXI) D ADDLINE S:+$D(TMPTXT) PXCETEXT=TMPTXT ; replace modified with original for multiple diagnosis ; ajb
"RTN","PXCEAE1",77,0)
 Q
"RTN","PXCEAE1",78,0)
ADDLINE ;
"RTN","PXCEAE1",79,0)
 S LINE=LINE+1
"RTN","PXCEAE1",80,0)
 I PXCELINE=1!(PXCECODE="PXCECSTP") S @ARRAY@(LINE,0)=$J(COUNT,3)_" "
"RTN","PXCEAE1",81,0)
 E  S @ARRAY@(LINE,0)="    "
"RTN","PXCEAE1",82,0)
 I $P(PXCETEXT,"~",5)["Diagnosis" D
"RTN","PXCEAE1",83,0)
 . N PXDATE,PXACSREC,PXACS
"RTN","PXCEAE1",84,0)
 . S PXDATE=$S($D(PXCEVIEN)=1:$$CSDATE^PXDXUTL(PXCEVIEN),$D(PXCEAPDT)=1:PXCEAPDT,1:DT)
"RTN","PXCEAE1",85,0)
 . S PXACSREC=$$ACTDT^PXDXUTL(PXDATE),PXACS=$P(PXACSREC,"^",3)
"RTN","PXCEAE1",86,0)
 . I PXACS["-" S PXACS=$P(PXACS,"-",1,2)
"RTN","PXCEAE1",87,0)
 . I $P(PXCETEXT,"~",5)'["ICD Code or Diagnosis" D
"RTN","PXCEAE1",88,0)
 .. S $P(PXCETEXT,"~",5)=$P($P(PXCETEXT,"~",5),"Diagnosis",1)_PXACS_" Diagnosis"_$P($P(PXCETEXT,"~",5),"Diagnosis",2)
"RTN","PXCEAE1",89,0)
 . I $P(PXCETEXT,"~",5)["ICD Code or Diagnosis" D
"RTN","PXCEAE1",90,0)
 .. S $P(PXCETEXT,"~",5)=PXACS_$P($P(PXCETEXT,"~",5),"ICD",2)
"RTN","PXCEAE1",91,0)
 S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_$P(PXCETEXT,"~",5)
"RTN","PXCEAE1",92,0)
 I ($L(@ARRAY@(LINE,0))+$L(PXCEEXT))'>80 D
"RTN","PXCEAE1",93,0)
 . S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_PXCEEXT
"RTN","PXCEAE1",94,0)
 E  D
"RTN","PXCEAE1",95,0)
 . N PXCEWRAP,PXCECOUN,PXCEHEAD
"RTN","PXCEAE1",96,0)
 . S PXCEHEAD=$L(@ARRAY@(LINE,0))
"RTN","PXCEAE1",97,0)
 . D WRAP^PXCEVFI4(PXCEEXT,80-PXCEHEAD,.PXCEWRAP)
"RTN","PXCEAE1",98,0)
 . S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_$G(PXCEWRAP(1))
"RTN","PXCEAE1",99,0)
 . S PXCECOUN=1
"RTN","PXCEAE1",100,0)
 . F  S PXCECOUN=$O(PXCEWRAP(PXCECOUN)) Q:PXCECOUN']""  D
"RTN","PXCEAE1",101,0)
 .. S LINE=LINE+1
"RTN","PXCEAE1",102,0)
 .. S @ARRAY@(LINE,0)=$J("",PXCEHEAD)_PXCEWRAP(PXCECOUN)
"RTN","PXCEAE1",103,0)
 Q
"RTN","PXCEAE1",104,0)
VIS ; get vaccine information statement info ; adm
"RTN","PXCEAE1",105,0)
 S PXCEEXT=""
"RTN","PXCEAE1",106,0)
 N CNT F CNT=1:1:$L(PXCEINT,U) S $P(PXCEEXT,U,CNT)=$$DISPVIS^PXCEVIS($P(PXCEINT,U,CNT))
"RTN","PXCEAE1",107,0)
 N TEMP S TEMP=PXCEEXT
"RTN","PXCEAE1",108,0)
 N PXI F PXI=1:1 Q:$P(TEMP,"^",PXI)=""  S PXCEEXT=$P(TEMP,"^",PXI) D ADDLINE S:+$D(TMPTXT) PXCETEXT=TMPTXT
"RTN","PXCEAE1",109,0)
 Q
"RTN","PXCEAE1",110,0)
 ;
"RTN","PXCEHF")
0^37^B9804821
"RTN","PXCEHF",1,0)
PXCEHF ;ISL/dee - Used to edit and display V HEALTH FACTORS ;01/06/2017
"RTN","PXCEHF",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,22,211**;Aug 12, 1996;Build 84
"RTN","PXCEHF",3,0)
 ;; ;
"RTN","PXCEHF",4,0)
 Q
"RTN","PXCEHF",5,0)
 ;
"RTN","PXCEHF",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEHF",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEHF",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEHF",9,0)
 ;
"RTN","PXCEHF",10,0)
 ;Following lines:
"RTN","PXCEHF",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEHF",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEHF",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCEHF",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEHF",15,0)
 ;
"RTN","PXCEHF",16,0)
FORMAT ;;Health Factors~9000010.23~0,12,220,811,812~1~^AUPNVHF
"RTN","PXCEHF",17,0)
 ;;0~1~.01~Health Factor:  ~Health Factor:  ~~~~~~B
"RTN","PXCEHF",18,0)
 ;;0~4~.04~Level/Severity:  ~Level/Severity:  ~~~~~~D
"RTN","PXCEHF",19,0)
 ;;220~1~220~Magnitude: ~Magnitude: ~~MEAS^PXCEHF(.PXCEAFTR)~~~D
"RTN","PXCEHF",20,0)
 ;;220~2~221~UCUM Code: ~UCUM Descriptione: ~~SKIP^PXCEHF~~~D
"RTN","PXCEHF",21,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEHF",22,0)
 ;;
"RTN","PXCEHF",23,0)
 ;Do not ask the following.
"RTN","PXCEHF",24,0)
 ;;12~1~1201~Event Date and (optional) Time~Event Date and Time:  ~~E1201^PXCEPOV1(0,30,30)~~~D
"RTN","PXCEHF",25,0)
 ;;12~2~1202~Ordering Provider:  ~Ordering Provider:  ~~EPROV12^PXCEPRV~~P~D
"RTN","PXCEHF",26,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEHF",27,0)
 ;
"RTN","PXCEHF",28,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCEHF",29,0)
INTRFACE ;;PX SELECT HEALTH FACTORS
"RTN","PXCEHF",30,0)
 ;
"RTN","PXCEHF",31,0)
 ;********************************
"RTN","PXCEHF",32,0)
 ;Special cases for display.
"RTN","PXCEHF",33,0)
 ;
"RTN","PXCEHF",34,0)
 ;********************************
"RTN","PXCEHF",35,0)
 ;Special cases for edit.
"RTN","PXCEHF",36,0)
 ;
"RTN","PXCEHF",37,0)
 ;
"RTN","PXCEHF",38,0)
 ;********************************
"RTN","PXCEHF",39,0)
 ;Display text for the .01 field which is a pointer to Skin Test.
"RTN","PXCEHF",40,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEHF",41,0)
DISPLY01(PXCEHF) ;
"RTN","PXCEHF",42,0)
 N DIERR,PXCEDILF,PXCEEXT,PXCEINT
"RTN","PXCEHF",43,0)
 S PXCEINT=$P(PXCEHF,"^",1)
"RTN","PXCEHF",44,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.23,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCEHF",45,0)
 Q $S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEHF",46,0)
 ;
"RTN","PXCEHF",47,0)
 ;********************************
"RTN","PXCEHF",48,0)
MEAS(PXCEAFTR) ;Edit the measurement.
"RTN","PXCEHF",49,0)
 N HFCHG,HFIEN,HFIENO,MAX,MAXDEC,MIN,TEMP,UCUMCODE,UCUMIEN
"RTN","PXCEHF",50,0)
 S HFIENO=$P(PXCEVFIN(0),U,1)
"RTN","PXCEHF",51,0)
 S HFIEN=$P(PXCEAFTR(0),U,1)
"RTN","PXCEHF",52,0)
 S HFCHG=$S(HFIEN'=HFIENO:1,1:0)
"RTN","PXCEHF",53,0)
 S TEMP=$G(^AUTTHF(HFIEN,220))
"RTN","PXCEHF",54,0)
 I TEMP="" Q
"RTN","PXCEHF",55,0)
 S MIN=$P(TEMP,U,1)
"RTN","PXCEHF",56,0)
 I MIN="" Q
"RTN","PXCEHF",57,0)
 S MAX=$P(TEMP,U,2)
"RTN","PXCEHF",58,0)
 I MAX="" Q
"RTN","PXCEHF",59,0)
 S MAXDEC=+$P(TEMP,U,3)
"RTN","PXCEHF",60,0)
 S UCUMIEN=$P(TEMP,U,4)
"RTN","PXCEHF",61,0)
 ;DBIA #6225
"RTN","PXCEHF",62,0)
 S UCUMCODE=$S(UCUMIEN="":"",1:$$UCUMCODE^LEXMUCUM(UCUMIEN))
"RTN","PXCEHF",63,0)
 N DIR,DIRUT,X,Y
"RTN","PXCEHF",64,0)
 S DIR(0)="NA^"_MIN_":"_MAX_":"_MAXDEC
"RTN","PXCEHF",65,0)
 I UCUMCODE'="" S DIR("A",2)="The units are: "_UCUMCODE
"RTN","PXCEHF",66,0)
 S DIR("A",1)="Enter the measurment, the allowed range is "_MIN_" to "_MAX
"RTN","PXCEHF",67,0)
 S DIR("A",2)="The maximum number of decimal digits is "_MAXDEC
"RTN","PXCEHF",68,0)
 S DIR("A")="The current value is: "
"RTN","PXCEHF",69,0)
 I HFCHG S $P(PXCEAFTR(220),U,1)=""
"RTN","PXCEHF",70,0)
 S DIR("B")=$P(PXCEAFTR(220),U,1)
"RTN","PXCEHF",71,0)
 D ^DIR
"RTN","PXCEHF",72,0)
 I $D(DIRUT) Q
"RTN","PXCEHF",73,0)
 S PXCEAFTR(220)=X_U_UCUMIEN
"RTN","PXCEHF",74,0)
 Q
"RTN","PXCEHF",75,0)
 ;
"RTN","PXCEHF",76,0)
 ;********************************
"RTN","PXCEHF",77,0)
SKIP ;Used to by-pass roll and scroll editing of a field.
"RTN","PXCEHF",78,0)
 S (X,Y)=""
"RTN","PXCEHF",79,0)
 Q
"RTN","PXCEHF",80,0)
 ;
"RTN","PXCEPED")
0^38^B8801037
"RTN","PXCEPED",1,0)
PXCEPED ;ISL/dee - Used to edit and display V PATIENT ED ;01/06/2017
"RTN","PXCEPED",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,211**;Aug 12, 1996;Build 84
"RTN","PXCEPED",3,0)
 ;; ;
"RTN","PXCEPED",4,0)
 Q
"RTN","PXCEPED",5,0)
 ;
"RTN","PXCEPED",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEPED",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEPED",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEPED",9,0)
 ;
"RTN","PXCEPED",10,0)
 ;Followning lines:
"RTN","PXCEPED",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEPED",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEPED",13,0)
 ;The Display & Edit routines are for special caces.
"RTN","PXCEPED",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEPED",15,0)
 ;
"RTN","PXCEPED",16,0)
FORMAT ;;Patient Education~9000010.16~0,12,220,811,812~1~^AUPNVPED
"RTN","PXCEPED",17,0)
 ;;0~1~.01~Education Topic:  ~Education Topic:  ~~~~~B
"RTN","PXCEPED",18,0)
 ;;0~6~.06~Level of Understanding:  ~Level of Understanding:  ~~~~~D
"RTN","PXCEPED",19,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEPED",20,0)
 ;;220~1~220~Magnitude: ~Magnitude: ~~MEAS^PXCEPED(.PXCEAFTR)~~~D
"RTN","PXCEPED",21,0)
 ;;220~2~221~UCUM Code: ~UCUM Description: ~~SKIP^PXCEPED~~~D
"RTN","PXCEPED",22,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEPED",23,0)
 ;;
"RTN","PXCEPED",24,0)
 ;
"RTN","PXCEPED",25,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCEPED",26,0)
INTRFACE ;;PX SELECT EDUCATION TOPICS
"RTN","PXCEPED",27,0)
 ;
"RTN","PXCEPED",28,0)
 ;********************************
"RTN","PXCEPED",29,0)
 ;Special cases for display.
"RTN","PXCEPED",30,0)
 ;
"RTN","PXCEPED",31,0)
 ;********************************
"RTN","PXCEPED",32,0)
 ;Special cases for edit.
"RTN","PXCEPED",33,0)
 ;
"RTN","PXCEPED",34,0)
 ;********************************
"RTN","PXCEPED",35,0)
 ;Display text for the .01 field which is a pointer to Education Topics
"RTN","PXCEPED",36,0)
 ;(Must have, is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEPED",37,0)
DISPLY01(PXCEPED) ;
"RTN","PXCEPED",38,0)
 N DIERR,PXCEDILF,PXCEEXT,PXCEINT
"RTN","PXCEPED",39,0)
 S PXCEINT=$P(PXCEPED,"^",1)
"RTN","PXCEPED",40,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.16,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCEPED",41,0)
 Q $S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEPED",42,0)
 ;
"RTN","PXCEPED",43,0)
 ;********************************
"RTN","PXCEPED",44,0)
MEAS(PXCEAFTR) ;Edit the measurement.
"RTN","PXCEPED",45,0)
 N EDUCHG,MAX,MAXDEC,MIN,TEMP,PEDIEN,PEDIENO,UCUMCODE,UCUMIEN
"RTN","PXCEPED",46,0)
 S PEDIENO=$P(PXCEVFIN(0),U,1)
"RTN","PXCEPED",47,0)
 S PEDIEN=$P(PXCEAFTR(0),U,1)
"RTN","PXCEPED",48,0)
 S EDUCHG=$S(PEDIEN'=PEDIENO:1,1:0)
"RTN","PXCEPED",49,0)
 S TEMP=$G(^AUTTEDT(PEDIEN,220))
"RTN","PXCEPED",50,0)
 I TEMP="" Q
"RTN","PXCEPED",51,0)
 S MIN=$P(TEMP,U,1)
"RTN","PXCEPED",52,0)
 I MIN="" Q
"RTN","PXCEPED",53,0)
 S MAX=$P(TEMP,U,2)
"RTN","PXCEPED",54,0)
 I MAX="" Q
"RTN","PXCEPED",55,0)
 S MAXDEC=+$P(TEMP,U,3)
"RTN","PXCEPED",56,0)
 S UCUMIEN=$P(TEMP,U,4)
"RTN","PXCEPED",57,0)
 ;DBIA #6225
"RTN","PXCEPED",58,0)
 S UCUMCODE=$S(UCUMIEN="":"",1:$$UCUMCODE^LEXMUCUM(UCUMIEN))
"RTN","PXCEPED",59,0)
 N DIR,DIRUT,X,Y
"RTN","PXCEPED",60,0)
 S DIR(0)="NA^"_MIN_":"_MAX_":"_MAXDEC
"RTN","PXCEPED",61,0)
 I UCUMCODE'="" S DIR("A",2)="The units are: "_UCUMCODE
"RTN","PXCEPED",62,0)
 S DIR("A",1)="Enter the measurment, the allowed range is "_MIN_" to "_MAX
"RTN","PXCEPED",63,0)
 S DIR("A",2)="The maximum number of decimal digits is "_MAXDEC
"RTN","PXCEPED",64,0)
 S DIR("A")="The current value is: "
"RTN","PXCEPED",65,0)
 I EDUCHG S $P(PXCEAFTR(220),U,1)=""
"RTN","PXCEPED",66,0)
 S DIR("B")=$P(PXCEAFTR(220),U,1)
"RTN","PXCEPED",67,0)
 D ^DIR
"RTN","PXCEPED",68,0)
 I $D(DIRUT) Q
"RTN","PXCEPED",69,0)
 S PXCEAFTR(220)=X_U_UCUMIEN
"RTN","PXCEPED",70,0)
 Q
"RTN","PXCEPED",71,0)
 ;
"RTN","PXCEPED",72,0)
 ;********************************
"RTN","PXCEPED",73,0)
SKIP ;Used to by-pass roll and scroll editing of a field.
"RTN","PXCEPED",74,0)
 S (X,Y)=""
"RTN","PXCEPED",75,0)
 Q
"RTN","PXCEPED",76,0)
 ;
"RTN","PXCESC")
0^24^B31822255
"RTN","PXCESC",1,0)
PXCESC ;SLC/PKR - Used to edit and display V STANDARD CODES ;10/24/2016
"RTN","PXCESC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXCESC",3,0)
 ;
"RTN","PXCESC",4,0)
 Q
"RTN","PXCESC",5,0)
 ;
"RTN","PXCESC",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCESC",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCESC",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCESC",9,0)
 ;
"RTN","PXCESC",10,0)
 ;Following lines:
"RTN","PXCESC",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR(?)~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCESC",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8            ~          9                  ~       10
"RTN","PXCESC",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCESC",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCESC",15,0)
 ;
"RTN","PXCESC",16,0)
FORMAT ;;Standard Codes~9000010.71~0,12,220,300,811,812~1~^AUPNVSC
"RTN","PXCESC",17,0)
 ;;0~5~.05~Coding System:~Coding System: ~$$DISCSYS^PXCESC~SKIP^PXCESC~~~
"RTN","PXCESC",18,0)
 ;;0~1~.01~Code: ~Code: ~$$DISPLY01^PXCESC~EDITCODE^PXCESC(PXCEFIEN,PXCEVIEN)~^D HELP^PXCEHELP~~
"RTN","PXCESC",19,0)
 ;;12~1~1201~Event Date and Time: ~Event Date and Time: ~~SKIP^PXCESC~~~D
"RTN","PXCESC",20,0)
 ;;220~1~220~Magnitude: ~Magnitude: ~~SKIP^PXCESC~~~D
"RTN","PXCESC",21,0)
 ;;220~2~221~UCUM Code: ~UCUM Code: ~~SKIP^PXCESC~~~D
"RTN","PXCESC",22,0)
 ;;300~1~300~Mapped Source: ~Mapped Source: ~$$DISMAPS^PXCESC~SKIP^PXCESC~~~D
"RTN","PXCESC",23,0)
 ;;811~1~81101~Comments: ~Comments: ~~SKIP^PXCESC~~~D
"RTN","PXCESC",24,0)
 ;;
"RTN","PXCESC",25,0)
 ;********************************
"RTN","PXCESC",26,0)
ADDCODE(VISITIEN) ;Let the user select and add codes.
"RTN","PXCESC",27,0)
 N CODELIST,CODESYS,DFN,EVENTDT,FDA,FDAIEN,IND,MSG,SRCHTERM
"RTN","PXCESC",28,0)
 ;Setting PXCELOOP=1 causes ADDCODE to exit.
"RTN","PXCESC",29,0)
 S DFN=$P(^AUPNVSIT(VISITIEN,0),U,5)
"RTN","PXCESC",30,0)
 I DFN="" D  Q
"RTN","PXCESC",31,0)
 . W !,"Visit IEN=",VISITIEN," is missing the patient!"
"RTN","PXCESC",32,0)
 . W !,"Cannot create a new V STANDARD CODES entry."
"RTN","PXCESC",33,0)
 . H 2
"RTN","PXCESC",34,0)
 . S PXCELOOP=1
"RTN","PXCESC",35,0)
 ;Have the user select the coding system.
"RTN","PXCESC",36,0)
 S CODESYS=$$GETCSYS^PXCESC
"RTN","PXCESC",37,0)
 I CODESYS="" S PXCELOOP=1 Q
"RTN","PXCESC",38,0)
 ;Prompt the user for the Lexicon search term.
"RTN","PXCESC",39,0)
 S SRCHTERM=$$GETST^PXCESC
"RTN","PXCESC",40,0)
 I SRCHTERM="" S PXCELOOP=1 Q
"RTN","PXCESC",41,0)
 ;Prompt the user for the Event Date and Time.
"RTN","PXCESC",42,0)
 S EVENTDT=$$GEVENTDT^PXCESC
"RTN","PXCESC",43,0)
 ;Let the user select the code(s).
"RTN","PXCESC",44,0)
 D GETCODES^PXLEXS(CODESYS,SRCHTERM,EVENTDT,.CODELIST)
"RTN","PXCESC",45,0)
 I '$D(CODELIST) S PXCELOOP=1 Q
"RTN","PXCESC",46,0)
 ;For each selected code populate the FDA and call UPDATE^DIE.
"RTN","PXCESC",47,0)
 S IND=0
"RTN","PXCESC",48,0)
 F  S IND=$O(CODELIST(IND)) Q:IND=""  D
"RTN","PXCESC",49,0)
 . K FDA,FDAIEN
"RTN","PXCESC",50,0)
 . S FDA(9000010.71,"+1,",.01)=CODELIST(IND)
"RTN","PXCESC",51,0)
 . S FDA(9000010.71,"+1,",.02)=DFN
"RTN","PXCESC",52,0)
 . S FDA(9000010.71,"+1,",.03)=VISITIEN
"RTN","PXCESC",53,0)
 . S FDA(9000010.71,"+1,",.05)=CODESYS
"RTN","PXCESC",54,0)
 . S FDA(9000010.71,"+1,",1201)=EVENTDT
"RTN","PXCESC",55,0)
 . D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXCESC",56,0)
 .;Start the ScreenMan editor
"RTN","PXCESC",57,0)
 . D SMANEDIT^PXVSCSM(FDAIEN(1))
"RTN","PXCESC",58,0)
 . S PXCEAFTR(0)=^AUPNVSC(FDAIEN(1),0)
"RTN","PXCESC",59,0)
 . S PXCEAFTR(12)=$G(^AUPNVSC(FDAIEN(1),12))
"RTN","PXCESC",60,0)
 . S PXCEAFTR(220)=$G(^AUPNVSC(FDAIEN(1),220))
"RTN","PXCESC",61,0)
 . S PXCEAFTR(300)=$G(^AUPNVSC(FDAIEN(1),300))
"RTN","PXCESC",62,0)
 . S PXCEAFTR(801)=$G(^AUPNVSC(FDAIEN(1),801))
"RTN","PXCESC",63,0)
 . S PXCEAFTR(811)=$G(^AUPNVSC(FDAIEN(1),811))
"RTN","PXCESC",64,0)
 . S PXCEAFTR(812)=$G(^AUPNVSC(FDAIEN(1),812))
"RTN","PXCESC",65,0)
 Q
"RTN","PXCESC",66,0)
 ;
"RTN","PXCESC",67,0)
 ;********************************
"RTN","PXCESC",68,0)
DISMAPS(PXCEEXT) ;If the Mapped Source exists, display the information.
"RTN","PXCESC",69,0)
 ;The argument is appended to the call in the FORMAT line by PXCEAE1.
"RTN","PXCESC",70,0)
 I PXCEEXT="" Q
"RTN","PXCESC",71,0)
 N ENTRY,FILENAM,FILENUM,IENS
"RTN","PXCESC",72,0)
 S FILENUM=$P(PXCEEXT,";",1)
"RTN","PXCESC",73,0)
 S IENS=$P(PXCEEXT,";",2)_","
"RTN","PXCESC",74,0)
 S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXCESC",75,0)
 S ENTRY=$$GET1^DIQ(FILENUM,IENS,.01)
"RTN","PXCESC",76,0)
 S TEXT=FILENAME_": "_ENTRY
"RTN","PXCESC",77,0)
 Q FILENAME_" - "_ENTRY
"RTN","PXCESC",78,0)
 ;
"RTN","PXCESC",79,0)
 ;********************************
"RTN","PXCESC",80,0)
DISPLY01(PXCESC) ;Display the code.
"RTN","PXCESC",81,0)
 ;The argument is appended to the call in the FORMAT line by PXCEAE1.
"RTN","PXCESC",82,0)
 N CODE,CODESYS,DATA,DATE,FSN,RESULT,TEXT
"RTN","PXCESC",83,0)
 S CODE=$P(PXCESC,U,1),CODESYS=$P(PXCESC,U,5)
"RTN","PXCESC",84,0)
 S TEXT=CODE_" ("_CODESYS_")"
"RTN","PXCESC",85,0)
 S DATE=$$VSCDATE^PXCESC(PXCEVIEN,PXCESC)
"RTN","PXCESC",86,0)
 ;DBIA #5679
"RTN","PXCESC",87,0)
 S RESULT=$$CSDATA^LEXU(CODE,CODESYS,DATE,.DATA)
"RTN","PXCESC",88,0)
 I RESULT=1 D
"RTN","PXCESC",89,0)
 . S FSN=$P(DATA("LEX",4),U,2)
"RTN","PXCESC",90,0)
 . I FSN="" S FSN=$P(DATA("LEX",3),U,2)
"RTN","PXCESC",91,0)
 . S TEXT=TEXT_" "_FSN
"RTN","PXCESC",92,0)
 Q TEXT
"RTN","PXCESC",93,0)
 ;
"RTN","PXCESC",94,0)
 ;********************************
"RTN","PXCESC",95,0)
DISCSYS(PXCESC) ;Display the coding system
"RTN","PXCESC",96,0)
 ;DBIA #5679
"RTN","PXCESC",97,0)
 Q $P($$CSYS^LEXU(PXCESC),U,4)
"RTN","PXCESC",98,0)
 ;
"RTN","PXCESC",99,0)
 ;********************************
"RTN","PXCESC",100,0)
EDITCODE(VSCIEN,VISITIEN) ;Edit the code.
"RTN","PXCESC",101,0)
 ;If VSCIEN is null then this is an add.
"RTN","PXCESC",102,0)
 I VSCIEN="" D ADDCODE(VISITIEN) Q
"RTN","PXCESC",103,0)
 N MAPSRC
"RTN","PXCESC",104,0)
 S MAPSRC=$P($G(^AUPNVSC(VSCIEN,300)),U,1)
"RTN","PXCESC",105,0)
 ;If the Mapped Source is not null then this entry cannot be edited
"RTN","PXCESC",106,0)
 ;since if was created by mapping and linking.
"RTN","PXCESC",107,0)
 I MAPSRC'="" D  Q
"RTN","PXCESC",108,0)
 . N TEXT
"RTN","PXCESC",109,0)
 . S TEXT(1)="This V STANDARD CODES entry was created by mapping a standard code"
"RTN","PXCESC",110,0)
 . S TEXT(2)="and linking it to the patient's data, therefore it cannot be edited."
"RTN","PXCESC",111,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXCESC",112,0)
 . H 4
"RTN","PXCESC",113,0)
 ;Start the ScreenMan editor
"RTN","PXCESC",114,0)
 D SMANEDIT^PXVSCSM(VSCIEN)
"RTN","PXCESC",115,0)
 S PXCEAFTR(0)=^AUPNVSC(VSCIEN,0)
"RTN","PXCESC",116,0)
 S PXCEAFTR(12)=$G(^AUPNVSC(VSCIEN,12))
"RTN","PXCESC",117,0)
 S PXCEAFTR(220)=$G(^AUPNVSC(VSCIEN,220))
"RTN","PXCESC",118,0)
 S PXCEAFTR(300)=$G(^AUPNVSC(VSCIEN,300))
"RTN","PXCESC",119,0)
 S PXCEAFTR(801)=$G(^AUPNVSC(VSCIEN,801))
"RTN","PXCESC",120,0)
 S PXCEAFTR(811)=$G(^AUPNVSC(VSCIEN,811))
"RTN","PXCESC",121,0)
 S PXCEAFTR(812)=$G(^AUPNVSC(VSCIEN,812))
"RTN","PXCESC",122,0)
 Q
"RTN","PXCESC",123,0)
 ;
"RTN","PXCESC",124,0)
 ;********************************
"RTN","PXCESC",125,0)
GETCSYS() ;Let the user select a coding system.
"RTN","PXCESC",126,0)
 N CODESYS,CODESYSL,CODESYSN,DIR
"RTN","PXCESC",127,0)
 D SCCSL^PXLEX(.CODESYSL)
"RTN","PXCESC",128,0)
 I CODESYSL(0)=1 D  Q CODESYS
"RTN","PXCESC",129,0)
 . S CODESYS=$O(CODESYSL(0))
"RTN","PXCESC",130,0)
 . S $P(PXCEAFTR(0),U,5)=CODESYS
"RTN","PXCESC",131,0)
 . W !,CODESYS," is the only available coding system."
"RTN","PXCESC",132,0)
 S DIR(0)="S^",DIR("A")="Select a coding system"
"RTN","PXCESC",133,0)
 S DIR("A",1)="Enter '^' to exit."
"RTN","PXCESC",134,0)
 S CODESYS=0
"RTN","PXCESC",135,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXCESC",136,0)
 .;DBIA #5679
"RTN","PXCESC",137,0)
 . S CODESYSN=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXCESC",138,0)
 . S DIR(0)=DIR(0)_CODESYS_":"_CODESYSN_";"
"RTN","PXCESC",139,0)
 D ^DIR
"RTN","PXCESC",140,0)
 I $D(DIRUT) S (X,Y)="" Q ""
"RTN","PXCESC",141,0)
 S (CODESYS,$P(PXCEAFTR(0),U,5))=$$UP^XLFSTR(X)
"RTN","PXCESC",142,0)
 Q CODESYS
"RTN","PXCESC",143,0)
 ;
"RTN","PXCESC",144,0)
 ;********************************
"RTN","PXCESC",145,0)
GEVENTDT() ;Let the user input an Event Date and Time.
"RTN","PXCESC",146,0)
 N DIR,DIRUT,X,Y
"RTN","PXCESC",147,0)
 S DIR(0)="DA^0:NOW:EST"
"RTN","PXCESC",148,0)
 S DIR("A",1)="Enter the event date and optional time:"
"RTN","PXCESC",149,0)
 S DIR("A")=""
"RTN","PXCESC",150,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXCESC",151,0)
 D ^DIR
"RTN","PXCESC",152,0)
 I $D(DIRUT) Q ""
"RTN","PXCESC",153,0)
 Q Y
"RTN","PXCESC",154,0)
 ;
"RTN","PXCESC",155,0)
 ;********************************
"RTN","PXCESC",156,0)
GETST() ;Let the user input a Lexicon search term.
"RTN","PXCESC",157,0)
 N DIR,DIRUT,X,Y
"RTN","PXCESC",158,0)
 S DIR(0)="FA^2:240"
"RTN","PXCESC",159,0)
 S DIR("A")=""
"RTN","PXCESC",160,0)
 S DIR("A",1)="Input the Lexicon search term:"
"RTN","PXCESC",161,0)
 D ^DIR
"RTN","PXCESC",162,0)
 I $D(DIRUT) Q ""
"RTN","PXCESC",163,0)
 Q X
"RTN","PXCESC",164,0)
 ;
"RTN","PXCESC",165,0)
 ;********************************
"RTN","PXCESC",166,0)
SKIP ;Used to by-pass roll and scroll editing of a field.
"RTN","PXCESC",167,0)
 S (X,Y)=""
"RTN","PXCESC",168,0)
 Q
"RTN","PXCESC",169,0)
 ;
"RTN","PXCESC",170,0)
 ;********************************
"RTN","PXCESC",171,0)
VSCDATE(VIEN,VSCZNODE) ;If the EVENT D/T exists return it, otherwise
"RTN","PXCESC",172,0)
 ;return the VISIT/ADMIT DATE&TIME.
"RTN","PXCESC",173,0)
 N DATE,IEN,VSCIEN,ZN
"RTN","PXCESC",174,0)
 S (IEN,VSCIEN)=0
"RTN","PXCESC",175,0)
 F  S IEN=+$O(^AUPNVSC("AD",VIEN,IEN)) Q:(VSCIEN>0)!(IEN=0)  D
"RTN","PXCESC",176,0)
 . S ZN=^AUPNVSC(IEN,0)
"RTN","PXCESC",177,0)
 . I ZN=VSCZNODE S VSCIEN=IEN Q
"RTN","PXCESC",178,0)
 S DATE=$P($G(^AUPNVSC(IEN,12)),U,1)
"RTN","PXCESC",179,0)
 I DATE="" S DATE=$P(^AUPNVSIT(VIEN,0),U,1)
"RTN","PXCESC",180,0)
 Q DATE
"RTN","PXCESC",181,0)
 ;
"RTN","PXCEVFIL")
0^43^B44603236
"RTN","PXCEVFIL",1,0)
PXCEVFIL ;ISL/dee - Main routine to edit a visit or v-file entry ;11/18/2015
"RTN","PXCEVFIL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**9,30,22,73,88,89,104,147,124,169,210,215,211**;Aug 12, 1996;Build 84
"RTN","PXCEVFIL",3,0)
 ;
"RTN","PXCEVFIL",4,0)
 Q
"RTN","PXCEVFIL",5,0)
EN(PXCECAT) ; -- main entry point for PXCE pxcecat EDIT
"RTN","PXCEVFIL",6,0)
 I PXCECAT="SIT"!(PXCECAT="HIST") D PATINFO^PXCEPAT(.PXCEPAT) Q:$D(DIRUT)
"RTN","PXCEVFIL",7,0)
 I PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST" Q:'$D(PXCEFIEN)!'$D(PXCEVIEN)!'$D(PXCEPAT)
"RTN","PXCEVFIL",8,0)
 E  Q:(PXCEVIEW["P"&'$D(PXCEPAT))!(PXCEVIEW["H"&'$D(PXCEHLOC))!("~H~P~"'[("~"_$P(PXCEVIEW,"^")_"~"))
"RTN","PXCEVFIL",9,0)
 I PXCECAT="CSTP",$L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXCEVIEN,0))) W !!,$C(7),"Stop Codes can not be added to encounters after "_$$FMDATE^SCDXUTL Q
"RTN","PXCEVFIL",10,0)
 N PXCEQUIT
"RTN","PXCEVFIL",11,0)
 I "~CPT~CSTP~"[PXCECAT D  Q:PXCEQUIT
"RTN","PXCEVFIL",12,0)
 . S PXCEQUIT=0
"RTN","PXCEVFIL",13,0)
 . I $P($G(^AUPNVSIT(PXCEVIEN,0)),"^",7)="E" D  Q:$G(PXCEQUIT)
"RTN","PXCEVFIL",14,0)
 .. I PXCECAT="CSTP" W !!,$C(7),"Historical Encounters cannot have Stop Codes." D WAIT^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",15,0)
 K PXCEQUIT
"RTN","PXCEVFIL",16,0)
 D FULL^VALM1
"RTN","PXCEVFIL",17,0)
 ;
"RTN","PXCEVFIL",18,0)
 N PXCEVFIL,PXCELOOP,PXCENOER
"RTN","PXCEVFIL",19,0)
 N PXCECODE,PXCEAUPN,PXCECATS,PXCECATT,PXCEFILE,PXVICR ; PX*1*215
"RTN","PXCEVFIL",20,0)
 N PXCEPSCC
"RTN","PXCEVFIL",21,0)
 S PXCECATS=$S(PXCECAT="SIT":"VST",PXCECAT="APPM":"VST",PXCECAT="HIST":"VST",PXCECAT="CSTP":"VST",1:PXCECAT)
"RTN","PXCEVFIL",22,0)
 S PXCECODE="PXCE"_$S(PXCECAT="IMM":"VIMM",1:PXCECAT)
"RTN","PXCEVFIL",23,0)
 S PXCEAUPN=$P($T(FORMAT^@PXCECODE),"~",5)
"RTN","PXCEVFIL",24,0)
 S PXCECATT=$P($P($T(FORMAT^@PXCECODE),";;",2),"~",1)
"RTN","PXCEVFIL",25,0)
 S PXCEFILE=$P($T(FORMAT^@PXCECODE),"~",2)
"RTN","PXCEVFIL",26,0)
 S (PXCEQUIT,PXVICR)=0
"RTN","PXCEVFIL",27,0)
 I '$D(PXCAAFTR),PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST",PXCEFIEN'>0 D ASK^PXCEVFI2(PXCEVIEN,.PXCEFIEN,PXCEAUPN,PXCECATT,PXCECODE)
"RTN","PXCEVFIL",28,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",29,0)
 I PXVICR S PXCEFIEN="" D EN("ICR") Q  ; PX*1*215
"RTN","PXCEVFIL",30,0)
 I PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST" S PXCELOOP=+PXCEFIEN
"RTN","PXCEVFIL",31,0)
 E  S PXCELOOP=1,PXCEFIEN=PXCEVIEN
"RTN","PXCEVFIL",32,0)
 I PXCECAT="CSTP" D
"RTN","PXCEVFIL",33,0)
 . I $$VSTAPPT^PXUTL1(PXCEPAT,+^AUPNVSIT(PXCEVIEN,0),PXCEHLOC,PXCEVIEN) S PXCELOOP=0
"RTN","PXCEVFIL",34,0)
 . E  S PXCELOOP=1
"RTN","PXCEVFIL",35,0)
 I $D(PXCAAFTR) S PXCELOOP=1
"RTN","PXCEVFIL",36,0)
 F  D DOONE Q:PXCELOOP
"RTN","PXCEVFIL",37,0)
 K PXCEFIEN
"RTN","PXCEVFIL",38,0)
 Q
"RTN","PXCEVFIL",39,0)
 ;
"RTN","PXCEVFIL",40,0)
DOONE ;
"RTN","PXCEVFIL",41,0)
 N PXCEAFTR,PXCEUP,PXCEVFIN,PXELAP
"RTN","PXCEVFIL",42,0)
 D INIT
"RTN","PXCEVFIL",43,0)
 ;Save the initial V-file contents.
"RTN","PXCEVFIL",44,0)
 M PXCEVFIN=PXCEAFTR
"RTN","PXCEVFIL",45,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",46,0)
DOONE2 ;
"RTN","PXCEVFIL",47,0)
 K PXKERROR
"RTN","PXCEVFIL",48,0)
 S PXCENOER=0
"RTN","PXCEVFIL",49,0)
 I PXCECAT="IMM" S PXVNEWDA="" ; PX*1*210
"RTN","PXCEVFIL",50,0)
 D EDIT^PXCEVFI1
"RTN","PXCEVFIL",51,0)
 I 'PXCEQUIT,PXCECAT="SIT",$P($G(PXCEAFTR(0)),"^")]"",$P($G(PXCEAFTR(0)),"^",22)]"" D
"RTN","PXCEVFIL",52,0)
 . I $D(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0)),$P($G(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0)),"^")=$P(PXCEAFTR(0),"^",22),$P(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0),"^",2)["C" D
"RTN","PXCEVFIL",53,0)
 .. S PXCEQUIT=1,$P(PXCEAFTR(0),"^")=""
"RTN","PXCEVFIL",54,0)
 .. W !,$C(7),"Cannot create encounter for appointment date/time and clinic that was previously cancelled, NOTHING was STORED"
"RTN","PXCEVFIL",55,0)
 .. D WAIT^PXCEHELP
"RTN","PXCEVFIL",56,0)
 I ($P(PXCEAFTR(0),"^")]"") D
"RTN","PXCEVFIL",57,0)
 . I PXCEQUIT D
"RTN","PXCEVFIL",58,0)
 .. I 'PXCEFIEN,PXCECAT="CPT" D
"RTN","PXCEVFIL",59,0)
 ... D REMOVE(^TMP("PXK",$J,PXCECAT,1,"IEN"))
"RTN","PXCEVFIL",60,0)
 .. I 'PXCENOER D
"RTN","PXCEVFIL",61,0)
 ... I PXCEFIEN>0 D
"RTN","PXCEVFIL",62,0)
 .... D:PXCECAT="CPT" MODUPD
"RTN","PXCEVFIL",63,0)
 .... W !,$C(7),"The last entry did not have all of the required data and NOTHING was CHANGED."
"RTN","PXCEVFIL",64,0)
 ... E  W !,$C(7),"The last entry did not have all of the required data and NOTHING was STORED."
"RTN","PXCEVFIL",65,0)
 ... D WAIT^PXCEHELP
"RTN","PXCEVFIL",66,0)
 . E  D SAVE^PXCEVFI2
"RTN","PXCEVFIL",67,0)
 I PXCECAT="IMM",$G(PXVNEWDA) D EVIS^PXCEVIS K PXVNEWDA ; PX*1*210
"RTN","PXCEVFIL",68,0)
 D EXIT
"RTN","PXCEVFIL",69,0)
 Q
"RTN","PXCEVFIL",70,0)
 ;
"RTN","PXCEVFIL",71,0)
INIT ; -- init variables and list array
"RTN","PXCEVFIL",72,0)
 N PXCENODS,PXCEFOR,PXCENODE
"RTN","PXCEVFIL",73,0)
 K ^TMP("PXK",$J),PXCEAFTR
"RTN","PXCEVFIL",74,0)
 S ^TMP("PXK",$J,"SOR")=PXCESOR
"RTN","PXCEVFIL",75,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXCEVIEN
"RTN","PXCEVFIL",76,0)
 I PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") D
"RTN","PXCEVFIL",77,0)
 . I PXCEVIEN>0 L +@(PXCEAUPN_"(PXCEVIEN)"):5 E  W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",78,0)
 . F PXCENODE=0,21,150,800,811,812 D
"RTN","PXCEVFIL",79,0)
 .. S PXCEAFTR(PXCENODE)=$S(PXCEVIEN>0:$G(^AUPNVSIT(PXCEVIEN,PXCENODE)),1:"")
"RTN","PXCEVFIL",80,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")=PXCEAFTR(PXCENODE)
"RTN","PXCEVFIL",81,0)
 E  D
"RTN","PXCEVFIL",82,0)
 . I PXCEFIEN>0 L +@(PXCEAUPN_"(PXCEFIEN)"):5 E  W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",83,0)
 . F PXCENODE=0,21,150,800,811,812 D
"RTN","PXCEVFIL",84,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")=$G(^AUPNVSIT(+PXCEVIEN,PXCENODE))
"RTN","PXCEVFIL",85,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"AFTER")=^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",86,0)
 . ;
"RTN","PXCEVFIL",87,0)
 . S ^TMP("PXK",$J,PXCECATS,1,"IEN")=PXCEFIEN
"RTN","PXCEVFIL",88,0)
 . S PXCENODS=$P($T(FORMAT^@PXCECODE),"~",3)
"RTN","PXCEVFIL",89,0)
 . F PXCEFOR=1:1 S PXCENODE=$P(PXCENODS,",",PXCEFOR) Q:PXCENODE']""  D
"RTN","PXCEVFIL",90,0)
 .. I PXCEFIEN>0 D
"RTN","PXCEVFIL",91,0)
 ... I PXCECAT="CPT",PXCENODE=1 D
"RTN","PXCEVFIL",92,0)
 .... ;Retrieve CPT Modifiers from multiple field
"RTN","PXCEVFIL",93,0)
 .... S PXCESEQ=0
"RTN","PXCEVFIL",94,0)
 .... F  S PXCESEQ=$O(@(PXCEAUPN_"(PXCEFIEN,PXCENODE,PXCESEQ)")) Q:'PXCESEQ  D
"RTN","PXCEVFIL",95,0)
 ..... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,PXCESEQ,"BEFORE")=$G(@(PXCEAUPN_"(PXCEFIEN,PXCENODE,PXCESEQ,0)"))
"RTN","PXCEVFIL",96,0)
 ..... S PXCEAFTR(PXCENODE,PXCESEQ)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,PXCESEQ,"BEFORE")
"RTN","PXCEVFIL",97,0)
 ... E  D
"RTN","PXCEVFIL",98,0)
 .... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")=$G(@(PXCEAUPN_"(PXCEFIEN,PXCENODE)"))
"RTN","PXCEVFIL",99,0)
 .... S PXCEAFTR(PXCENODE)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",100,0)
 .. E  D
"RTN","PXCEVFIL",101,0)
 ... I PXCECAT="CPT",PXCENODE=1 D  Q
"RTN","PXCEVFIL",102,0)
 .... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,1,"BEFORE")=""
"RTN","PXCEVFIL",103,0)
 ... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")=""
"RTN","PXCEVFIL",104,0)
 ... S PXCEAFTR(PXCENODE)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",105,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",106,0)
 ;
"RTN","PXCEVFIL",107,0)
 I PXCEAUPN'="^AUPNVSIT" D
"RTN","PXCEVFIL",108,0)
 . ;Set the Patient and Visit pointers in the V-File.
"RTN","PXCEVFIL",109,0)
 . S:'$P(PXCEAFTR(0),"^",2) $P(PXCEAFTR(0),"^",2)=PXCEPAT
"RTN","PXCEVFIL",110,0)
 . S:'$P(PXCEAFTR(0),"^",3) $P(PXCEAFTR(0),"^",3)=PXCEVIEN
"RTN","PXCEVFIL",111,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFIL",112,0)
 .. S:'$P(PXCEAFTR(812),"^",2) $P(PXCEAFTR(812),"^",2)=PXCEPKG
"RTN","PXCEVFIL",113,0)
 .. S:'$P(PXCEAFTR(812),"^",3) $P(PXCEAFTR(812),"^",3)=PXCESOR
"RTN","PXCEVFIL",114,0)
 E  D
"RTN","PXCEVFIL",115,0)
 . ;If new visit set package and source.
"RTN","PXCEVFIL",116,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFIL",117,0)
 .. S:'$P(PXCEAFTR(812),"^",2) $P(PXCEAFTR(812),"^",2)=PXCEPKG
"RTN","PXCEVFIL",118,0)
 .. S:'$P(PXCEAFTR(812),"^",3) $P(PXCEAFTR(812),"^",3)=PXCESOR
"RTN","PXCEVFIL",119,0)
 . ;Set the Patient in the Visit for new visit.
"RTN","PXCEVFIL",120,0)
 . I $G(PXCEAPDT)>0 D
"RTN","PXCEVFIL",121,0)
 .. S:'$P(PXCEAFTR(0),"^",1) $P(PXCEAFTR(0),"^",1)=PXCEAPDT
"RTN","PXCEVFIL",122,0)
 .. I '$P(PXCEAFTR(0),"^",21) D
"RTN","PXCEVFIL",123,0)
 ... ;Get the ELIGIBILITY for the appointment
"RTN","PXCEVFIL",124,0)
 ... N PXCEELIG
"RTN","PXCEVFIL",125,0)
 ... S PXCEELIG=$$ELIGIBIL^PXCEVSIT(PXCEPAT,PXCEHLOC,PXCEAPDT)
"RTN","PXCEVFIL",126,0)
 ... S:PXCEELIG>0 $P(PXCEAFTR(0),"^",21)=PXCEELIG
"RTN","PXCEVFIL",127,0)
 . S:'$P(PXCEAFTR(0),"^",5)&($G(PXCEPAT)>0) $P(PXCEAFTR(0),"^",5)=PXCEPAT
"RTN","PXCEVFIL",128,0)
 . S:'$P(PXCEAFTR(0),"^",22)&($G(PXCEHLOC)>0) $P(PXCEAFTR(0),"^",22)=PXCEHLOC
"RTN","PXCEVFIL",129,0)
 Q
"RTN","PXCEVFIL",130,0)
 ;
"RTN","PXCEVFIL",131,0)
EXIT ; -- exit code
"RTN","PXCEVFIL",132,0)
 I PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") L:PXCEVIEN>0 -@(PXCEAUPN_"(PXCEVIEN)"):30
"RTN","PXCEVFIL",133,0)
 E  L:PXCEFIEN>0 -@(PXCEAUPN_"(PXCEFIEN)"):30
"RTN","PXCEVFIL",134,0)
 S PXCEFIEN=""
"RTN","PXCEVFIL",135,0)
 K ^TMP("PXK",$J)
"RTN","PXCEVFIL",136,0)
 K PXCEAFTR
"RTN","PXCEVFIL",137,0)
 S PXCEQUIT=0
"RTN","PXCEVFIL",138,0)
 Q
"RTN","PXCEVFIL",139,0)
 ;
"RTN","PXCEVFIL",140,0)
MODUPD ;Update the MODIFIER list for the currently edited CPT code when all
"RTN","PXCEVFIL",141,0)
 ;the reqired data is not entered.
"RTN","PXCEVFIL",142,0)
 ;
"RTN","PXCEVFIL",143,0)
 N SQ,DA,DIC,DIK,X
"RTN","PXCEVFIL",144,0)
 S SQ=""
"RTN","PXCEVFIL",145,0)
 F  S SQ=$O(PXCEAFTR(1,SQ)) Q:'SQ  D
"RTN","PXCEVFIL",146,0)
 .S DA(1)=PXCEFIEN,DA=SQ
"RTN","PXCEVFIL",147,0)
 .S DIK="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCEVFIL",148,0)
 .D ^DIK
"RTN","PXCEVFIL",149,0)
 F  S SQ=$O(^TMP("PXK",$J,"CPT",1,1,SQ)) Q:'SQ  D
"RTN","PXCEVFIL",150,0)
 .S X=^TMP("PXK",$J,"CPT",1,1,SQ,"BEFORE")
"RTN","PXCEVFIL",151,0)
 .Q:X']""
"RTN","PXCEVFIL",152,0)
 .K DD,DO
"RTN","PXCEVFIL",153,0)
 .S DA(1)=PXCEFIEN
"RTN","PXCEVFIL",154,0)
 .S DIC="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCEVFIL",155,0)
 .S DIC(0)="L",DIC("P")=$P(^DD(9000010.18,1,0),"^",2)
"RTN","PXCEVFIL",156,0)
 .D FILE^DICN
"RTN","PXCEVFIL",157,0)
 Q
"RTN","PXCEVFIL",158,0)
 ;
"RTN","PXCEVFIL",159,0)
REMOVE(DA) ;REMOVE INCOMPLETE CPT ENTRY
"RTN","PXCEVFIL",160,0)
 N DIK
"RTN","PXCEVFIL",161,0)
 S DIK="^AUPNVCPT("
"RTN","PXCEVFIL",162,0)
 I $G(DA) D ^DIK ;PX*1*124
"RTN","PXCEVFIL",163,0)
 Q
"RTN","PXCEXAM")
0^39^B8384465
"RTN","PXCEXAM",1,0)
PXCEXAM ;ISL/dee - Used to edit and display V EXAM ;01/06/2017
"RTN","PXCEXAM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,211**;Aug 12, 1996;Build 84
"RTN","PXCEXAM",3,0)
 ;; ;
"RTN","PXCEXAM",4,0)
 Q
"RTN","PXCEXAM",5,0)
 ;
"RTN","PXCEXAM",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEXAM",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEXAM",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEXAM",9,0)
 ;
"RTN","PXCEXAM",10,0)
 ;Followning lines:
"RTN","PXCEXAM",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEXAM",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEXAM",13,0)
 ;The Display & Edit routines are for special caces.
"RTN","PXCEXAM",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEXAM",15,0)
 ;
"RTN","PXCEXAM",16,0)
FORMAT ;;Exam~9000010.13~0,12,220,811,812~1~^AUPNVXAM
"RTN","PXCEXAM",17,0)
 ;;0~1~.01~Exam:  ~Exam:  ~~~~~B
"RTN","PXCEXAM",18,0)
 ;;0~4~.04~Results:  ~Results:  ~~~~~D
"RTN","PXCEXAM",19,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEXAM",20,0)
 ;;220~1~220~Magnitude: ~Magnitude: ~~MEAS^PXCEXAM(.PXCEAFTR)~~~D
"RTN","PXCEXAM",21,0)
 ;;220~2~221~UCUM Code: ~UCUM Description: ~~SKIP^PXCEXAM~~~D
"RTN","PXCEXAM",22,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEXAM",23,0)
 ;;
"RTN","PXCEXAM",24,0)
 ;
"RTN","PXCEXAM",25,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCEXAM",26,0)
INTRFACE ;;PX SELECT EXAMS
"RTN","PXCEXAM",27,0)
 ;********************************
"RTN","PXCEXAM",28,0)
 ;Special cases for display.
"RTN","PXCEXAM",29,0)
 ;
"RTN","PXCEXAM",30,0)
 ;********************************
"RTN","PXCEXAM",31,0)
 ;Special cases for edit.
"RTN","PXCEXAM",32,0)
 ;
"RTN","PXCEXAM",33,0)
 ;
"RTN","PXCEXAM",34,0)
 ;********************************
"RTN","PXCEXAM",35,0)
 ;Display text for the .01 field which is a pointer to Skin Test.
"RTN","PXCEXAM",36,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEXAM",37,0)
DISPLY01(PXCEXAM) ;
"RTN","PXCEXAM",38,0)
 N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEXAM",39,0)
 S PXCEINT=$P(PXCEXAM,"^",1)
"RTN","PXCEXAM",40,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.13,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCEXAM",41,0)
 Q $S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEXAM",42,0)
 ;
"RTN","PXCEXAM",43,0)
 ;********************************
"RTN","PXCEXAM",44,0)
MEAS(PXCEAFTR) ;Edit the measurement.
"RTN","PXCEXAM",45,0)
 N EXAMCHG,MAX,MAXDEC,MIN,TEMP,UCUMCODE,UCUMIEN,XAMIEN,XAMIENO
"RTN","PXCEXAM",46,0)
 S XAMIENO=$P(PXCEVFIN(0),U,1)
"RTN","PXCEXAM",47,0)
 S XAMIEN=$P(PXCEAFTR(0),U,1)
"RTN","PXCEXAM",48,0)
 S EXAMCHG=$S(XAMIEN'=XAMIENO:1,1:0)
"RTN","PXCEXAM",49,0)
 S TEMP=$G(^AUTTEXAM(XAMIEN,220))
"RTN","PXCEXAM",50,0)
 I TEMP="" Q
"RTN","PXCEXAM",51,0)
 S MIN=$P(TEMP,U,1)
"RTN","PXCEXAM",52,0)
 I MIN="" Q
"RTN","PXCEXAM",53,0)
 S MAX=$P(TEMP,U,2)
"RTN","PXCEXAM",54,0)
 I MAX="" Q
"RTN","PXCEXAM",55,0)
 S MAXDEC=+$P(TEMP,U,3)
"RTN","PXCEXAM",56,0)
 S UCUMIEN=$P(TEMP,U,4)
"RTN","PXCEXAM",57,0)
 ;DBIA #6225
"RTN","PXCEXAM",58,0)
 S UCUMCODE=$S(UCUMIEN="":"",1:$$UCUMCODE^LEXMUCUM(UCUMIEN))
"RTN","PXCEXAM",59,0)
 N DIR,DIRUT,X,Y
"RTN","PXCEXAM",60,0)
 S DIR(0)="NA^"_MIN_":"_MAX_":"_MAXDEC
"RTN","PXCEXAM",61,0)
 I UCUMCODE'="" S DIR("A",2)="The units are: "_UCUMCODE
"RTN","PXCEXAM",62,0)
 S DIR("A",1)="Enter the measurment, the allowed range is "_MIN_" to "_MAX
"RTN","PXCEXAM",63,0)
 S DIR("A",2)="The maximum number of decimal digits is "_MAXDEC
"RTN","PXCEXAM",64,0)
 S DIR("A")="The current value is: "
"RTN","PXCEXAM",65,0)
 I EXAMCHG S $P(PXCEAFTR(220),U,1)=""
"RTN","PXCEXAM",66,0)
 S DIR("B")=$P(PXCEAFTR(220),U,1)
"RTN","PXCEXAM",67,0)
 D ^DIR
"RTN","PXCEXAM",68,0)
 I $D(DIRUT) Q
"RTN","PXCEXAM",69,0)
 S PXCEAFTR(220)=X_U_UCUMIEN
"RTN","PXCEXAM",70,0)
 Q
"RTN","PXCEXAM",71,0)
 ;
"RTN","PXCEXAM",72,0)
 ;********************************
"RTN","PXCEXAM",73,0)
SKIP ;Used to by-pass roll and scroll editing of a field.
"RTN","PXCEXAM",74,0)
 S (X,Y)=""
"RTN","PXCEXAM",75,0)
 Q
"RTN","PXCEXAM",76,0)
 ;
"RTN","PXCOPY")
0^6^B13344110
"RTN","PXCOPY",1,0)
PXCOPY ;SLC/PKR - Copy various PCE files. ;10/24/2016
"RTN","PXCOPY",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXCOPY",3,0)
 ;================================
"RTN","PXCOPY",4,0)
COPY(FILENUM,IEN) ;Copy an entry of ROOT into a new entry.
"RTN","PXCOPY",5,0)
 N DA,DIK,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FDA,FIELDLEN,FILENAME
"RTN","PXCOPY",6,0)
 N IENN,IENS,MSG,NAME,ORIGNAME,ROOT,X,Y
"RTN","PXCOPY",7,0)
 S ROOT=$$ROOT^DILFD(FILENUM)
"RTN","PXCOPY",8,0)
 S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXCOPY",9,0)
 S FILENAME=$$LOW^XLFSTR(FILENAME)
"RTN","PXCOPY",10,0)
 S ORIGNAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXCOPY",11,0)
 ;Get the new name.
"RTN","PXCOPY",12,0)
 S FIELDLEN=$$GET1^DID(FILENUM,.01,"","FIELD LENGTH")
"RTN","PXCOPY",13,0)
 S DIR(0)="F"_U_"3:"_FIELDLEN_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXCOPY",14,0)
 S DIR("A")="Enter a Unique Name"
"RTN","PXCOPY",15,0)
GETNAM D ^DIR
"RTN","PXCOPY",16,0)
 I $D(DIRUT) Q
"RTN","PXCOPY",17,0)
 S NAME=Y
"RTN","PXCOPY",18,0)
 ;
"RTN","PXCOPY",19,0)
 ;Make sure the new name is valid and unique.
"RTN","PXCOPY",20,0)
 I '$$VNAME^PXINPTR(NAME) G GETNAM
"RTN","PXCOPY",21,0)
 I $$FIND1^DIC(FILENUM,"","BXU",NAME) D  G GETNAM
"RTN","PXCOPY",22,0)
 . W !,"There is already an entry with that name!"
"RTN","PXCOPY",23,0)
 ;
"RTN","PXCOPY",24,0)
 ;Set the starting place for additions and do the merge.
"RTN","PXCOPY",25,0)
 D SETSTART(ROOT)
"RTN","PXCOPY",26,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXCOPY",27,0)
 D MERGE(IENN,IEN,ROOT)
"RTN","PXCOPY",28,0)
 ;
"RTN","PXCOPY",29,0)
 ;Change to the new name.
"RTN","PXCOPY",30,0)
 S IENS=IENN_","
"RTN","PXCOPY",31,0)
 S FDA(FILENUM,IENS,.01)=NAME
"RTN","PXCOPY",32,0)
 K MSG
"RTN","PXCOPY",33,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXCOPY",34,0)
 ;Check to make sure the name was not a duplicate.
"RTN","PXCOPY",35,0)
 I $G(MSG("DIERR",1))=740 D  G GETNAM
"RTN","PXCOPY",36,0)
 . W !,NAME," is not a unique name!"
"RTN","PXCOPY",37,0)
 ;Change the class to local and delete the sponsor.
"RTN","PXCOPY",38,0)
 D SCAS(FILENUM,IENN,"L","")
"RTN","PXCOPY",39,0)
 ;Initialize the change log.
"RTN","PXCOPY",40,0)
 D INIEH(FILENUM,ROOT,IENN,IEN)
"RTN","PXCOPY",41,0)
 ;
"RTN","PXCOPY",42,0)
 ;Reindex the cross-references.
"RTN","PXCOPY",43,0)
 S DIK=ROOT,DA=IENN
"RTN","PXCOPY",44,0)
 D IX^DIK
"RTN","PXCOPY",45,0)
 ;
"RTN","PXCOPY",46,0)
 ;Tell the user what has happened and allow for editing of the new item.
"RTN","PXCOPY",47,0)
 W !
"RTN","PXCOPY",48,0)
 S DIR(0)="Y"
"RTN","PXCOPY",49,0)
 S DIR("A")="Do you want to edit it now"
"RTN","PXCOPY",50,0)
 S DIR("A",1)="The original "_FILENAME_" "_ORIGNAME_" has been copied into "_NAME_"."
"RTN","PXCOPY",51,0)
 D ^DIR Q:$D(DIRUT)
"RTN","PXCOPY",52,0)
 I Y D EDIT(FILENUM,IENN)
"RTN","PXCOPY",53,0)
 Q
"RTN","PXCOPY",54,0)
 ;
"RTN","PXCOPY",55,0)
 ;================================
"RTN","PXCOPY",56,0)
EDIT(FILENUM,IEN) ;Call the appropriate editor.
"RTN","PXCOPY",57,0)
 ;The initial version only includes taxonomies.
"RTN","PXCOPY",58,0)
 I FILENUM=9999999.09 D SMANEDIT^PXEDUSM(IEN,0,"PX EDUCATION TOPIC EDIT")
"RTN","PXCOPY",59,0)
 I FILENUM=9999999.15 D SMANEDIT^PXEXSM(IEN,0,"PX EXAM EDIT")
"RTN","PXCOPY",60,0)
 I FILENUM=9999999.64 D SMANEDIT^PXHFSM(IEN,0,"PX HEALTH FACTOR EDIT")
"RTN","PXCOPY",61,0)
 Q
"RTN","PXCOPY",62,0)
 ;
"RTN","PXCOPY",63,0)
 ;================================
"RTN","PXCOPY",64,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXCOPY",65,0)
 ;after a call to SETSTART.
"RTN","PXCOPY",66,0)
 N ENTRY,NIEN,OIEN
"RTN","PXCOPY",67,0)
 S ENTRY=ROOT_0_")"
"RTN","PXCOPY",68,0)
 S OIEN=+$P(@ENTRY,U,3)
"RTN","PXCOPY",69,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXCOPY",70,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXCOPY",71,0)
 Q OIEN+1
"RTN","PXCOPY",72,0)
 ;
"RTN","PXCOPY",73,0)
 ;================================
"RTN","PXCOPY",74,0)
INIEH(FILENUM,ROOT,IENN,IEN) ;Initialize the change log after a copy.
"RTN","PXCOPY",75,0)
 ;First delete any existing history entries.
"RTN","PXCOPY",76,0)
 N ENTRY,IND,IENS,FDA,FDAIEN,MSG,SFN,TARGET,WP
"RTN","PXCOPY",77,0)
 D FIELD^DID(FILENUM,"CHANGE LOG","","SPECIFIER","TARGET")
"RTN","PXCOPY",78,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXCOPY",79,0)
 I SFN=0 Q
"RTN","PXCOPY",80,0)
 S ENTRY=ROOT_IENN_",110)"
"RTN","PXCOPY",81,0)
 S IND=0
"RTN","PXCOPY",82,0)
 F  S IND=$O(@ENTRY@(IND)) Q:+IND=0  D
"RTN","PXCOPY",83,0)
 . S IENS=IND_","_IENN_","
"RTN","PXCOPY",84,0)
 . S FDA(SFN,IENS,.01)="@"
"RTN","PXCOPY",85,0)
 I $D(FDA(SFN)) D FILE^DIE("K","FDA","MSG")
"RTN","PXCOPY",86,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXCOPY",87,0)
 ;Establish an initial entry in the change log.
"RTN","PXCOPY",88,0)
 K FDA,MSG
"RTN","PXCOPY",89,0)
 S IENS="+1,"_IENN_","
"RTN","PXCOPY",90,0)
 S FDAIEN(IENN)=IENN
"RTN","PXCOPY",91,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXCOPY",92,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXCOPY",93,0)
 S FDA(SFN,IENS,2)="WP(1,1)"
"RTN","PXCOPY",94,0)
 S WP(1,1,1)="Copied from "_$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXCOPY",95,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXCOPY",96,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXCOPY",97,0)
 Q
"RTN","PXCOPY",98,0)
 ;
"RTN","PXCOPY",99,0)
 ;================================
"RTN","PXCOPY",100,0)
MERGE(IENN,IEN,ROOT) ;Use MERGE to copy ROOT(IEN into ROOT(IENN.
"RTN","PXCOPY",101,0)
 N DEST,SOURCE
"RTN","PXCOPY",102,0)
 S DEST=ROOT_IENN_")"
"RTN","PXCOPY",103,0)
 ;Lock the file before merging.
"RTN","PXCOPY",104,0)
 L +@DEST:DILOCKTM
"RTN","PXCOPY",105,0)
 S SOURCE=ROOT_IEN_")"
"RTN","PXCOPY",106,0)
 M @DEST=@SOURCE
"RTN","PXCOPY",107,0)
 ;Unlock the file
"RTN","PXCOPY",108,0)
 L -@DEST
"RTN","PXCOPY",109,0)
 Q
"RTN","PXCOPY",110,0)
 ;
"RTN","PXCOPY",111,0)
 ;================================
"RTN","PXCOPY",112,0)
SCAS(FILENUM,IEN,CLASS,SPONSOR) ;Set the class field to CLASS and the sponsor
"RTN","PXCOPY",113,0)
 ;field to SPONSOR.
"RTN","PXCOPY",114,0)
 N IENS,FDA,MSG
"RTN","PXCOPY",115,0)
 S IENS=IEN_","
"RTN","PXCOPY",116,0)
 S FDA(FILENUM,IENS,100)=CLASS
"RTN","PXCOPY",117,0)
 S FDA(FILENUM,IENS,101)=SPONSOR
"RTN","PXCOPY",118,0)
 D FILE^DIE("K","FDA","MSG")
"RTN","PXCOPY",119,0)
 I $D(MSG) D AWRITE^PXRMUTIL("MSG")
"RTN","PXCOPY",120,0)
 Q
"RTN","PXCOPY",121,0)
 ;
"RTN","PXCOPY",122,0)
 ;================================
"RTN","PXCOPY",123,0)
SETSTART(ROOT) ;Set the starting value to add new entries. Start
"RTN","PXCOPY",124,0)
 ;at the begining so empty spaces are filled in.
"RTN","PXCOPY",125,0)
 N CUR,ENTRY
"RTN","PXCOPY",126,0)
 S ENTRY=ROOT_"0)"
"RTN","PXCOPY",127,0)
 S $P(@ENTRY,U,3)=1
"RTN","PXCOPY",128,0)
 Q
"RTN","PXCOPY",129,0)
 ;
"RTN","PXEDUINQ")
0^2^B16226994
"RTN","PXEDUINQ",1,0)
PXEDUINQ ;SLC/PKR - Education Topic Inquire. ;12/15/2015
"RTN","PXEDUINQ",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEDUINQ",3,0)
 ;
"RTN","PXEDUINQ",4,0)
 ;==========================================
"RTN","PXEDUINQ",5,0)
BEDUINQ(IEN) ;Display an Education Topic inquiry, defaults to the Browswer.
"RTN","PXEDUINQ",6,0)
 N BOP,DIR0,OUTPUT,TITLE,TYPE
"RTN","PXEDUINQ",7,0)
 I '$D(^AUTTEDT(IEN)) Q
"RTN","PXEDUINQ",8,0)
 S TITLE="Education Topic Inquiry"
"RTN","PXEDUINQ",9,0)
 D EDUINQ(IEN,.OUTPUT)
"RTN","PXEDUINQ",10,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXEDUINQ",11,0)
 I BOP="" Q
"RTN","PXEDUINQ",12,0)
 I BOP="B" D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXEDUINQ",13,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXEDUINQ",14,0)
 Q
"RTN","PXEDUINQ",15,0)
 ;
"RTN","PXEDUINQ",16,0)
 ;==========================================
"RTN","PXEDUINQ",17,0)
EDUINQ(IEN,OUTPUT) ;Education Topic inquiry, return the formatted text
"RTN","PXEDUINQ",18,0)
 ;in OUTPUT.
"RTN","PXEDUINQ",19,0)
 ;Use 80 column output.
"RTN","PXEDUINQ",20,0)
 N CODE,CODELIST,CODESYS,INDXDT,MAPDT,NL,IENSTR,NSP,RM,SEQ,SUBT
"RTN","PXEDUINQ",21,0)
 N TEMP,TEXT,WPARRAY
"RTN","PXEDUINQ",22,0)
 S RM=80
"RTN","PXEDUINQ",23,0)
 S TEMP=^AUTTEDT(IEN,0)
"RTN","PXEDUINQ",24,0)
 S IENSTR="No. "_IEN
"RTN","PXEDUINQ",25,0)
 S OUTPUT(1)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXEDUINQ",26,0)
 S TEXT=$P(TEMP,U,1)
"RTN","PXEDUINQ",27,0)
 S NSP=RM-$L(TEXT)-1
"RTN","PXEDUINQ",28,0)
 S OUTPUT(2)=TEXT_$$RJ^XLFSTR(IENSTR,NSP," ")
"RTN","PXEDUINQ",29,0)
 S OUTPUT(3)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXEDUINQ",30,0)
 S OUTPUT(4)="Print Name: "_$P(TEMP,U,4)
"RTN","PXEDUINQ",31,0)
 S OUTPUT(5)="Class: "_$$GET1^DIQ(9999999.09,IEN,100)
"RTN","PXEDUINQ",32,0)
 S OUTPUT(6)="Sponsor: "_$$GET1^DIQ(9999999.09,IEN,101)
"RTN","PXEDUINQ",33,0)
 S OUTPUT(7)="Inactive Flag: "_$$GET1^DIQ(9999999.09,IEN,.03)
"RTN","PXEDUINQ",34,0)
 S OUTPUT(8)=""
"RTN","PXEDUINQ",35,0)
 S OUTPUT(9)="Description:"
"RTN","PXEDUINQ",36,0)
 S NL=9
"RTN","PXEDUINQ",37,0)
 S TEMP=$$GET1^DIQ(9999999.09,IEN,201,"","WPARRAY")
"RTN","PXEDUINQ",38,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",39,0)
 I TEMP="WPARRAY" D
"RTN","PXEDUINQ",40,0)
 . S IND=0
"RTN","PXEDUINQ",41,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXEDUINQ",42,0)
 . K WPARRAY
"RTN","PXEDUINQ",43,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",44,0)
 ;
"RTN","PXEDUINQ",45,0)
 K TEMP,WPARRAY
"RTN","PXEDUINQ",46,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",47,0)
 S NL=NL+1,OUTPUT(NL)="Educational Outcome:"
"RTN","PXEDUINQ",48,0)
 S TEMP=$$GET1^DIQ(9999999.09,IEN,11,"","WPARRAY")
"RTN","PXEDUINQ",49,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",50,0)
 I TEMP="WPARRAY" D
"RTN","PXEDUINQ",51,0)
 . S IND=0
"RTN","PXEDUINQ",52,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXEDUINQ",53,0)
 . K WPARRAY
"RTN","PXEDUINQ",54,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",55,0)
 ;
"RTN","PXEDUINQ",56,0)
 K TEMP,WPARRAY
"RTN","PXEDUINQ",57,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",58,0)
 S NL=NL+1,OUTPUT(NL)="Educational Standards:"
"RTN","PXEDUINQ",59,0)
 S TEMP=$$GET1^DIQ(9999999.09,IEN,12,"","WPARRAY")
"RTN","PXEDUINQ",60,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",61,0)
 I TEMP="WPARRAY" D
"RTN","PXEDUINQ",62,0)
 . S IND=0
"RTN","PXEDUINQ",63,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXEDUINQ",64,0)
 . K WPARRAY
"RTN","PXEDUINQ",65,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",66,0)
 ;
"RTN","PXEDUINQ",67,0)
 S IND=0
"RTN","PXEDUINQ",68,0)
 F  S IND=+$O(^AUTTEDT(IEN,210,IND)) Q:IND=0  D
"RTN","PXEDUINQ",69,0)
 . S TEMP=^AUTTEDT(IEN,210,IND,0)
"RTN","PXEDUINQ",70,0)
 . S CODESYS=$P(TEMP,U,1),CODE=$P(TEMP,U,2)
"RTN","PXEDUINQ",71,0)
 . S MAPDT=$P(TEMP,U,3),INDXDT=$P(TEMP,U,4)
"RTN","PXEDUINQ",72,0)
 . I CODE'="" S CODELIST(CODESYS,CODE)=MAPDT_U_INDXDT
"RTN","PXEDUINQ",73,0)
 D MCDISP^PXMCODES(.CODELIST,.NL,.OUTPUT)
"RTN","PXEDUINQ",74,0)
 ;
"RTN","PXEDUINQ",75,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",76,0)
 S NL=NL+1,OUTPUT(NL)="                             Value Range"
"RTN","PXEDUINQ",77,0)
 S TEMP=$G(^AUTTEDT(IEN,220))
"RTN","PXEDUINQ",78,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)="Not defined"
"RTN","PXEDUINQ",79,0)
 E  D
"RTN","PXEDUINQ",80,0)
 . S NL=NL+1,OUTPUT(NL)=" Minimum Value                Maximum Value           UCUM Code"
"RTN","PXEDUINQ",81,0)
 . S NL=NL+1,OUTPUT(NL)=$S($E(TEMP,1)="-":"",1:" ")_$P(TEMP,U,1)
"RTN","PXEDUINQ",82,0)
 . S LEN=$L(OUTPUT(NL)),NSP=30-LEN
"RTN","PXEDUINQ",83,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_$P(TEMP,U,2)
"RTN","PXEDUINQ",84,0)
 . N UCUMDATA,UCUMIEN
"RTN","PXEDUINQ",85,0)
 . S UCUMIEN=$P(TEMP,U,3)
"RTN","PXEDUINQ",86,0)
 .;ICR #6225
"RTN","PXEDUINQ",87,0)
 . D UCUMDATA^LEXMUCUM(UCUMIEN,.UCUMDATA)
"RTN","PXEDUINQ",88,0)
 . S LEN=$L(OUTPUT(NL)),NSP=54-LEN
"RTN","PXEDUINQ",89,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_UCUMDATA(UCUMIEN,"UCUM CODE")
"RTN","PXEDUINQ",90,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",91,0)
 . S NL=NL+1,OUTPUT(NL)="UCUM Description: "_UCUMDATA(UCUMIEN,"DESCRIPTION")
"RTN","PXEDUINQ",92,0)
 ;
"RTN","PXEDUINQ",93,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEDUINQ",94,0)
 S NL=NL+1,OUTPUT(NL)="      Subtopics"
"RTN","PXEDUINQ",95,0)
 I +$P($G(^AUTTEDT(IEN,10,0)),U,4)=0 S NL=NL+1,OUTPUT(NL)=" None defined" Q
"RTN","PXEDUINQ",96,0)
 S NL=NL+1,OUTPUT(NL)=" Seq    Subtopic"
"RTN","PXEDUINQ",97,0)
 S IND=0
"RTN","PXEDUINQ",98,0)
 F  S IND=+$O(^AUTTEDT(IEN,10,IND)) Q:IND=0  D
"RTN","PXEDUINQ",99,0)
 . S TEMP=^AUTTEDT(IEN,10,IND,0)
"RTN","PXEDUINQ",100,0)
 . S SUBT=$P(TEMP,U,1),SEQ=$P(TEMP,U,3)
"RTN","PXEDUINQ",101,0)
 . S NL=NL+1,OUTPUT(NL)=$$RJ^XLFSTR(SEQ,4," ")_"   "_$$GET1^DIQ(9999999.09,SUBT,.01)
"RTN","PXEDUINQ",102,0)
 Q
"RTN","PXEDUINQ",103,0)
 ;
"RTN","PXEDUMGR")
0^3^B43817187
"RTN","PXEDUMGR",1,0)
PXEDUMGR ;SLC/PKR - List Manager routines for Education Topics. ;10/246/2016
"RTN","PXEDUMGR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEDUMGR",3,0)
 ;
"RTN","PXEDUMGR",4,0)
 ;=========================================
"RTN","PXEDUMGR",5,0)
ADD ;Add a new entry.
"RTN","PXEDUMGR",6,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",7,0)
 D CLEAR^VALM1
"RTN","PXEDUMGR",8,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,NEW,Y
"RTN","PXEDUMGR",9,0)
 S DIC="^AUTTEDT("
"RTN","PXEDUMGR",10,0)
 S DIC(0)="AEKLQ"
"RTN","PXEDUMGR",11,0)
 S DIC("A")="Enter a new Education Topic Name: "
"RTN","PXEDUMGR",12,0)
 S DLAYGO=9999999.09
"RTN","PXEDUMGR",13,0)
 D ^DIC
"RTN","PXEDUMGR",14,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y=-1) S VALMBCK="R" Q
"RTN","PXEDUMGR",15,0)
 S NEW=$P(Y,U,3)
"RTN","PXEDUMGR",16,0)
 I 'NEW D EN^DDIOL("That entry already exists, use EDIT instead.") H 2
"RTN","PXEDUMGR",17,0)
 I NEW D
"RTN","PXEDUMGR",18,0)
 . S DA=$P(Y,U,1)
"RTN","PXEDUMGR",19,0)
 . D SMANEDIT^PXEDUSM(DA,1)
"RTN","PXEDUMGR",20,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",21,0)
 Q
"RTN","PXEDUMGR",22,0)
 ;
"RTN","PXEDUMGR",23,0)
 ;=========================================
"RTN","PXEDUMGR",24,0)
BLDLIST(NODE) ;Build of list of Education Topic file entries.
"RTN","PXEDUMGR",25,0)
 N IEN,DESC,FMTSTR,IND,NAME,NL,NUM,OUTPUT,START
"RTN","PXEDUMGR",26,0)
 K ^TMP(NODE,$J)
"RTN","PXEDUMGR",27,0)
 ;Build the list in alphabetical order.
"RTN","PXEDUMGR",28,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLL")
"RTN","PXEDUMGR",29,0)
 S (NUM,VALMCNT)=0
"RTN","PXEDUMGR",30,0)
 S NAME=""
"RTN","PXEDUMGR",31,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXEDUMGR",32,0)
 . S IEN=$O(^AUTTEDT("B",NAME,""))
"RTN","PXEDUMGR",33,0)
 . S NUM=NUM+1
"RTN","PXEDUMGR",34,0)
 . S ^TMP(NODE,$J,"SEL",NUM)=IEN
"RTN","PXEDUMGR",35,0)
 . S ^TMP(NODE,$J,"IEN",IEN)=NUM
"RTN","PXEDUMGR",36,0)
 . S DESC=$G(^AUTTEDT(IEN,201,1,0))
"RTN","PXEDUMGR",37,0)
 . I $L(DESC)>40 S DESC=$E(DESC,1,37)_"..."
"RTN","PXEDUMGR",38,0)
 . D FORMAT(NUM,NAME,DESC,FMTSTR,.NL,.OUTPUT)
"RTN","PXEDUMGR",39,0)
 . S START=VALMCNT+1
"RTN","PXEDUMGR",40,0)
 . F IND=1:1:NL D
"RTN","PXEDUMGR",41,0)
 .. S VALMCNT=VALMCNT+1,^TMP(NODE,$J,VALMCNT,0)=OUTPUT(IND)
"RTN","PXEDUMGR",42,0)
 .. S ^TMP(NODE,$J,"IDX",VALMCNT,NUM)=""
"RTN","PXEDUMGR",43,0)
 . S ^TMP(NODE,$J,"LINES",NUM)=START_U_VALMCNT
"RTN","PXEDUMGR",44,0)
 S ^TMP(NODE,$J,"VALMCNT")=VALMCNT
"RTN","PXEDUMGR",45,0)
 S ^TMP(NODE,$J,"NEDU")=NUM
"RTN","PXEDUMGR",46,0)
 Q
"RTN","PXEDUMGR",47,0)
 ;
"RTN","PXEDUMGR",48,0)
 ;=========================================
"RTN","PXEDUMGR",49,0)
CLOG(IEN) ;Display the change log.
"RTN","PXEDUMGR",50,0)
 D LMCLBROW^PXRMSINQ(9999999.09,"110*",IEN)
"RTN","PXEDUMGR",51,0)
 Q
"RTN","PXEDUMGR",52,0)
 ;
"RTN","PXEDUMGR",53,0)
 ;=========================================
"RTN","PXEDUMGR",54,0)
CLOGS ;Display Change Log for a selected entry.
"RTN","PXEDUMGR",55,0)
 N IEN
"RTN","PXEDUMGR",56,0)
 ;Get the entry
"RTN","PXEDUMGR",57,0)
 S IEN=+$$GETSEL("Display the change log for which education topic?")
"RTN","PXEDUMGR",58,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",59,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEDUMGR",60,0)
 D CLOG(IEN)
"RTN","PXEDUMGR",61,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",62,0)
 Q
"RTN","PXEDUMGR",63,0)
 ;
"RTN","PXEDUMGR",64,0)
 ;=========================================
"RTN","PXEDUMGR",65,0)
COPY(IEN) ;Copy a selected entry to a new name.
"RTN","PXEDUMGR",66,0)
 D FULL^VALM1
"RTN","PXEDUMGR",67,0)
 D COPY^PXCOPY(9999999.09,IEN)
"RTN","PXEDUMGR",68,0)
 D BLDLIST^PXEDUMGR("PXEDUL")
"RTN","PXEDUMGR",69,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",70,0)
 Q
"RTN","PXEDUMGR",71,0)
 ;
"RTN","PXEDUMGR",72,0)
 ;=========================================
"RTN","PXEDUMGR",73,0)
COPYS ;Copy a selected entry.
"RTN","PXEDUMGR",74,0)
 N IEN
"RTN","PXEDUMGR",75,0)
 ;Get the entry
"RTN","PXEDUMGR",76,0)
 S IEN=+$$GETSEL("Select education topic to copy")
"RTN","PXEDUMGR",77,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEDUMGR",78,0)
 D COPY(IEN)
"RTN","PXEDUMGR",79,0)
 Q
"RTN","PXEDUMGR",80,0)
 ;
"RTN","PXEDUMGR",81,0)
 ;=========================================
"RTN","PXEDUMGR",82,0)
EDITS ;Edit a selected entry.
"RTN","PXEDUMGR",83,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",84,0)
 N CLASS,IEN
"RTN","PXEDUMGR",85,0)
 ;Get the entry
"RTN","PXEDUMGR",86,0)
 S IEN=+$$GETSEL("Select the education topic to edit")
"RTN","PXEDUMGR",87,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEDUMGR",88,0)
 D SMANEDIT^PXEDUSM(IEN,0)
"RTN","PXEDUMGR",89,0)
 Q
"RTN","PXEDUMGR",90,0)
 ;
"RTN","PXEDUMGR",91,0)
 ;=========================================
"RTN","PXEDUMGR",92,0)
ENTRY ;Entry code
"RTN","PXEDUMGR",93,0)
 D INITMPG^PXEDUMGR
"RTN","PXEDUMGR",94,0)
 D BLDLIST^PXEDUMGR("PXEDUL")
"RTN","PXEDUMGR",95,0)
 D XQORM
"RTN","PXEDUMGR",96,0)
 Q
"RTN","PXEDUMGR",97,0)
 ;
"RTN","PXEDUMGR",98,0)
 ;=========================================
"RTN","PXEDUMGR",99,0)
EXIT ;Exit code
"RTN","PXEDUMGR",100,0)
 D INITMPG^PXEDUMGR
"RTN","PXEDUMGR",101,0)
 D CLEAN^VALM10
"RTN","PXEDUMGR",102,0)
 D FULL^VALM1
"RTN","PXEDUMGR",103,0)
 S VALMBCK="Q"
"RTN","PXEDUMGR",104,0)
 Q
"RTN","PXEDUMGR",105,0)
 ;
"RTN","PXEDUMGR",106,0)
 ;=========================================
"RTN","PXEDUMGR",107,0)
FORMAT(NUMBER,NAME,DESC,FMTSTR,NL,OUTPUT) ;Format  entry number, name,
"RTN","PXEDUMGR",108,0)
 ;and first line of description for LM display.
"RTN","PXEDUMGR",109,0)
 N TEMP
"RTN","PXEDUMGR",110,0)
 S TEMP=NUMBER_U_NAME_U_DESC
"RTN","PXEDUMGR",111,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXEDUMGR",112,0)
 Q
"RTN","PXEDUMGR",113,0)
 ;
"RTN","PXEDUMGR",114,0)
 ;=========================================
"RTN","PXEDUMGR",115,0)
GETSEL(TEXT) ;Get a single selection
"RTN","PXEDUMGR",116,0)
 N DIR,NEDU,X,Y
"RTN","PXEDUMGR",117,0)
 S NEDU=+$G(^TMP("PXEDUL",$J,"NEDU"))
"RTN","PXEDUMGR",118,0)
 I NEDU=0 Q 0
"RTN","PXEDUMGR",119,0)
 S DIR(0)="N^1:"_NEDU
"RTN","PXEDUMGR",120,0)
 S DIR("A")=TEXT
"RTN","PXEDUMGR",121,0)
 D ^DIR
"RTN","PXEDUMGR",122,0)
 Q +$G(^TMP("PXEDUL",$J,"SEL",+Y))
"RTN","PXEDUMGR",123,0)
 ;
"RTN","PXEDUMGR",124,0)
 ;=========================================
"RTN","PXEDUMGR",125,0)
HELP ;Display help.
"RTN","PXEDUMGR",126,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXEDUMGR",127,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXEDUMGR",128,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXEDUMGR",129,0)
 S DDS=1,DONE=0
"RTN","PXEDUMGR",130,0)
 F IND=1:1 Q:DONE  D
"RTN","PXEDUMGR",131,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXEDUMGR",132,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXEDUMGR",133,0)
 D BROWSE^DDBR("TEXT","NR","Education Topic Management Help")
"RTN","PXEDUMGR",134,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",135,0)
 Q
"RTN","PXEDUMGR",136,0)
 ;
"RTN","PXEDUMGR",137,0)
 ;=========================================
"RTN","PXEDUMGR",138,0)
HDR ; Header code
"RTN","PXEDUMGR",139,0)
 S VALMHDR(1)="Eduction Topic File Entries."
"RTN","PXEDUMGR",140,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXEDUMGR",141,0)
 Q
"RTN","PXEDUMGR",142,0)
 ;
"RTN","PXEDUMGR",143,0)
 ;=========================================
"RTN","PXEDUMGR",144,0)
HTEXT ;Education Topic mangement help text.
"RTN","PXEDUMGR",145,0)
 ;;Select one of the following actions:
"RTN","PXEDUMGR",146,0)
 ;; ADD  - add a new education topic.
"RTN","PXEDUMGR",147,0)
 ;; EDIT - edit an education topic.
"RTN","PXEDUMGR",148,0)
 ;; COPY - copy an existing education topic to a new education topic.
"RTN","PXEDUMGR",149,0)
 ;; INQ  - education topic inquiry.
"RTN","PXEDUMGR",150,0)
 ;; EH   - education topic edit history.
"RTN","PXEDUMGR",151,0)
 ;;
"RTN","PXEDUMGR",152,0)
 ;;You can select the action first and then the entry or choose the entry and then
"RTN","PXEDUMGR",153,0)
 ;;the action.
"RTN","PXEDUMGR",154,0)
 ;;
"RTN","PXEDUMGR",155,0)
 ;;**End Text**
"RTN","PXEDUMGR",156,0)
 Q
"RTN","PXEDUMGR",157,0)
 ;
"RTN","PXEDUMGR",158,0)
 ;=========================================
"RTN","PXEDUMGR",159,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXEDUMGR",160,0)
 K ^TMP("PXEDUL",$J)
"RTN","PXEDUMGR",161,0)
 Q
"RTN","PXEDUMGR",162,0)
 ;
"RTN","PXEDUMGR",163,0)
 ;=========================================
"RTN","PXEDUMGR",164,0)
INQ(IEN) ;Education Topic inquiry.
"RTN","PXEDUMGR",165,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",166,0)
 D BEDUINQ^PXEDUINQ(IEN)
"RTN","PXEDUMGR",167,0)
 Q
"RTN","PXEDUMGR",168,0)
 ;
"RTN","PXEDUMGR",169,0)
 ;=========================================
"RTN","PXEDUMGR",170,0)
INQS ;Display inquiry for selected entries.
"RTN","PXEDUMGR",171,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",172,0)
 N IEN
"RTN","PXEDUMGR",173,0)
 ;Get the entry
"RTN","PXEDUMGR",174,0)
 S IEN=+$$GETSEL("Display inquiry for which education topic?")
"RTN","PXEDUMGR",175,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEDUMGR",176,0)
 D INQ(IEN)
"RTN","PXEDUMGR",177,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",178,0)
 Q
"RTN","PXEDUMGR",179,0)
 ;
"RTN","PXEDUMGR",180,0)
 ;=========================================
"RTN","PXEDUMGR",181,0)
PEXIT ; Protocol exit code
"RTN","PXEDUMGR",182,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXEDUMGR",183,0)
 ;Reset after page up/down etc
"RTN","PXEDUMGR",184,0)
 D XQORM
"RTN","PXEDUMGR",185,0)
 Q
"RTN","PXEDUMGR",186,0)
 ;
"RTN","PXEDUMGR",187,0)
 ;=========================================
"RTN","PXEDUMGR",188,0)
START ;Main entry point for PX Education Topic Management
"RTN","PXEDUMGR",189,0)
 N VALMBCK,VALMSG,X
"RTN","PXEDUMGR",190,0)
 S X="IORESET"
"RTN","PXEDUMGR",191,0)
 D ENDR^%ZISS
"RTN","PXEDUMGR",192,0)
 D EN^VALM("PX EDUCATION TOPICS MANAGEMENT")
"RTN","PXEDUMGR",193,0)
 W IORESET
"RTN","PXEDUMGR",194,0)
 D KILL^%ZISS
"RTN","PXEDUMGR",195,0)
 Q
"RTN","PXEDUMGR",196,0)
 ;
"RTN","PXEDUMGR",197,0)
 ;=========================================
"RTN","PXEDUMGR",198,0)
XQORM ;Set range for selection.
"RTN","PXEDUMGR",199,0)
 N NEDU
"RTN","PXEDUMGR",200,0)
 S NEDU=^TMP("PXEDUL",$J,"NEDU")
"RTN","PXEDUMGR",201,0)
 S XQORM("#")=$O(^ORD(101,"B","PX EDUCATION TOPICS SELECT ENTRY",0))_U_"1:"_NEDU
"RTN","PXEDUMGR",202,0)
 S XQORM("A")="Select Action: "
"RTN","PXEDUMGR",203,0)
 Q
"RTN","PXEDUMGR",204,0)
 ;
"RTN","PXEDUMGR",205,0)
 ;=========================================
"RTN","PXEDUMGR",206,0)
XSEL ;Entry action for protocol PX EDUCATION TOPICS SELECT ENTRY.
"RTN","PXEDUMGR",207,0)
 N CLASS,EDITOK,IEN,SEL
"RTN","PXEDUMGR",208,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXEDUMGR",209,0)
 ;Remove trailing ,
"RTN","PXEDUMGR",210,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXEDUMGR",211,0)
 ;Invalid selection
"RTN","PXEDUMGR",212,0)
 I SEL["," D  Q
"RTN","PXEDUMGR",213,0)
 . W !,"Only one item number allowed." H 2
"RTN","PXEDUMGR",214,0)
 . S VALMBCK="R"
"RTN","PXEDUMGR",215,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXEDUMGR",216,0)
 . W !,SEL_" is not a valid item number." H 2
"RTN","PXEDUMGR",217,0)
 . S VALMBCK="R"
"RTN","PXEDUMGR",218,0)
 ;
"RTN","PXEDUMGR",219,0)
 ;Get the IEN.
"RTN","PXEDUMGR",220,0)
 S IEN=^TMP("PXEDUL",$J,"SEL",SEL)
"RTN","PXEDUMGR",221,0)
 S CLASS=$P(^AUTTEDT(IEN,100),U,1)
"RTN","PXEDUMGR",222,0)
 ;
"RTN","PXEDUMGR",223,0)
 ;Full screen mode
"RTN","PXEDUMGR",224,0)
 D FULL^VALM1
"RTN","PXEDUMGR",225,0)
 ;
"RTN","PXEDUMGR",226,0)
 ;Action list.
"RTN","PXEDUMGR",227,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXEDUMGR",228,0)
 S DIR(0)="SBM"_U
"RTN","PXEDUMGR",229,0)
 S EDITOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXEDUMGR",230,0)
 I EDITOK S DIR(0)=DIR(0)_"EDIT:Edit;"
"RTN","PXEDUMGR",231,0)
 S DIR(0)=DIR(0)_"COPY:Copy;"
"RTN","PXEDUMGR",232,0)
 S DIR(0)=DIR(0)_"INQ:Inquire;"
"RTN","PXEDUMGR",233,0)
 S DIR(0)=DIR(0)_"CL:Change Log;"
"RTN","PXEDUMGR",234,0)
 S DIR("A")="Select Action: "
"RTN","PXEDUMGR",235,0)
 S DIR("B")=$S(CLASS="N":"INQ",1:"EDIT")
"RTN","PXEDUMGR",236,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXEDUMGR",237,0)
 D ^DIR
"RTN","PXEDUMGR",238,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXEDUMGR",239,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXEDUMGR",240,0)
 S OPTION=Y
"RTN","PXEDUMGR",241,0)
 D CLEAR^VALM1
"RTN","PXEDUMGR",242,0)
 ;
"RTN","PXEDUMGR",243,0)
 I OPTION="COPY" D COPY^PXEDUMGR(IEN)
"RTN","PXEDUMGR",244,0)
 I OPTION="EDIT" D SMANEDIT^PXEDUSM(IEN,0)
"RTN","PXEDUMGR",245,0)
 I OPTION="INQ" D BEDUINQ^PXEDUINQ(IEN)
"RTN","PXEDUMGR",246,0)
 I OPTION="CL" D CLOG^PXEDUMGR(IEN)
"RTN","PXEDUMGR",247,0)
 S VALMBCK="R"
"RTN","PXEDUMGR",248,0)
 Q
"RTN","PXEDUMGR",249,0)
 ;
"RTN","PXEDUSM")
0^4^B27354817
"RTN","PXEDUSM",1,0)
PXEDUSM ;SLC/PKR - Education Topics ScreenMan routines ;01/20/2017
"RTN","PXEDUSM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEDUSM",3,0)
 ;
"RTN","PXEDUSM",4,0)
 ;===================================
"RTN","PXEDUSM",5,0)
CODEPAOC(DA) ;Code Post-Action On Change.
"RTN","PXEDUSM",6,0)
 N CODE,CODESYS,NEWCODE,SAVEDDS
"RTN","PXEDUSM",7,0)
 S CODESYS=$$GET^DDSVAL(9999999.11,.DA,.01)
"RTN","PXEDUSM",8,0)
 S CODE=$$GET^DDSVAL(9999999.11,.DA,1)
"RTN","PXEDUSM",9,0)
 ;DBIA #5746 covers kill and set of DDS.
"RTN","PXEDUSM",10,0)
 I $D(DDS) S SAVEDDS=DDS K DDS
"RTN","PXEDUSM",11,0)
 ;Call the Lexicon search.
"RTN","PXEDUSM",12,0)
 S NEWCODE=$$GETCODE^PXLEXS(CODESYS,CODE,DT,0)
"RTN","PXEDUSM",13,0)
 ;Reset the screen so ScreenMan displays properly.
"RTN","PXEDUSM",14,0)
 I $D(SAVEDDS) D
"RTN","PXEDUSM",15,0)
 . N IOAWM0,X
"RTN","PXEDUSM",16,0)
 . S DDS=SAVEDDS
"RTN","PXEDUSM",17,0)
 . S X=0 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","PXEDUSM",18,0)
 . S X="IOAWM0" D ENDR^%ZISS W IOAWM0
"RTN","PXEDUSM",19,0)
 . D REFRESH^DDSUTL
"RTN","PXEDUSM",20,0)
 D PUT^DDSVAL(9999999.11,.DA,1,NEWCODE)
"RTN","PXEDUSM",21,0)
 Q
"RTN","PXEDUSM",22,0)
 ;
"RTN","PXEDUSM",23,0)
 ;===================================
"RTN","PXEDUSM",24,0)
CODEPRE(DA) ;Code pre-action.
"RTN","PXEDUSM",25,0)
 N CODESYS,TEXT
"RTN","PXEDUSM",26,0)
 S CODESYS=$$GET^DDSVAL(9999999.11,.DA,.01)
"RTN","PXEDUSM",27,0)
 ;DBIA #5679
"RTN","PXEDUSM",28,0)
 S CODESYS=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXEDUSM",29,0)
 S TEXT(1)="Input a search term or a "_CODESYS_" code."
"RTN","PXEDUSM",30,0)
 D EN^DDIOL(.TEXT)
"RTN","PXEDUSM",31,0)
 Q
"RTN","PXEDUSM",32,0)
 ;
"RTN","PXEDUSM",33,0)
 ;===================================
"RTN","PXEDUSM",34,0)
CSYSPAOC(DA) ;Coding System Post-Action On Change.
"RTN","PXEDUSM",35,0)
 N CODESYS,IENS,OLDCSYS,SAVEDDS
"RTN","PXEDUSM",36,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","PXEDUSM",37,0)
 S OLDCSYS=$$GET1^DIQ(9999999.11,IENS,.01)
"RTN","PXEDUSM",38,0)
 S CODESYS=$$GET^DDSVAL(9999999.11,.DA,.01)
"RTN","PXEDUSM",39,0)
 ;If the coding system has changed delete the existing code.
"RTN","PXEDUSM",40,0)
 I (CODESYS'=OLDCSYS) D PUT^DDSVAL(9999999.11,.DA,1,"")
"RTN","PXEDUSM",41,0)
 Q
"RTN","PXEDUSM",42,0)
 ;
"RTN","PXEDUSM",43,0)
 ;===================================
"RTN","PXEDUSM",44,0)
FDATAVAL(IEN) ;Form Data Validation.
"RTN","PXEDUSM",45,0)
 ;If either MINIMUM VALUE or MAXIMUM VALUE is defined, they both must be.
"RTN","PXEDUSM",46,0)
 N MAX,MIN,TEXT
"RTN","PXEDUSM",47,0)
 S MIN=$$GET^DDSVAL(9999999.09,IEN,220)
"RTN","PXEDUSM",48,0)
 S MAX=$$GET^DDSVAL(9999999.09,IEN,221)
"RTN","PXEDUSM",49,0)
 I (MIN=""),(MAX'="") D  Q
"RTN","PXEDUSM",50,0)
 . S TEXT(1)="The Maximum Value is "_MAX_", but the Minimum Value is undefined."
"RTN","PXEDUSM",51,0)
 . S TEXT(2)="Set a Minimum Value or delete the Maximum Value."
"RTN","PXEDUSM",52,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEDUSM",53,0)
 . S DDSBR="MINIMUM VALUE",DDSERROR=1
"RTN","PXEDUSM",54,0)
 I (MIN'=""),(MAX="") D  Q
"RTN","PXEDUSM",55,0)
 . S TEXT(1)="The Minimum Value is "_MIN_", but the Maximum Value is undefined."
"RTN","PXEDUSM",56,0)
 . S TEXT(2)="Set a Maximum Value or delete the Minimum Value."
"RTN","PXEDUSM",57,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEDUSM",58,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXEDUSM",59,0)
 I MAX<MIN D  Q
"RTN","PXEDUSM",60,0)
 . S TEXT(1)="The Maximum Value cannot be less than the Minimum Value."
"RTN","PXEDUSM",61,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEDUSM",62,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXEDUSM",63,0)
 Q
"RTN","PXEDUSM",64,0)
 ;
"RTN","PXEDUSM",65,0)
 ;===================================
"RTN","PXEDUSM",66,0)
FPOSTACT(IEN) ;Form Post-Action
"RTN","PXEDUSM",67,0)
 N INACTIVE,INUSE,OUTPUT
"RTN","PXEDUSM",68,0)
 ;If the change was a deletion there is nothing else to do.
"RTN","PXEDUSM",69,0)
 I '$D(^AUTTEDT(D0)) Q
"RTN","PXEDUSM",70,0)
 ;If the exam was inactivated check to see if it is being used.
"RTN","PXEDUSM",71,0)
 ;Need a new FileMan API to do this.
"RTN","PXEDUSM",72,0)
 S INACTIVE=$$GET^DDSVAL(9999999.09,IEN,"INACTIVE FLAG")
"RTN","PXEDUSM",73,0)
 Q
"RTN","PXEDUSM",74,0)
 ;S INUSE=$S(INACTIVE:$$INUSE^PXRMTAXD(D0,"INACT"),1:0)
"RTN","PXEDUSM",75,0)
 ;I INUSE D HLP^DDSUTL("$$EOP")
"RTN","PXEDUSM",76,0)
 Q
"RTN","PXEDUSM",77,0)
 ;
"RTN","PXEDUSM",78,0)
 ;===================================
"RTN","PXEDUSM",79,0)
FPOSTSAV(IEN) ;Form Post-Save.
"RTN","PXEDUSM",80,0)
 ;Check for codes to link.
"RTN","PXEDUSM",81,0)
 D MCLINK^PXMCLINK(9999999.09,IEN)
"RTN","PXEDUSM",82,0)
 ;Check for codes to unlink.
"RTN","PXEDUSM",83,0)
 I $D(^TMP($J,"UNLINK",9999999.09)) D MCUNLINK^PXMCLINK(9999999.09,IEN)
"RTN","PXEDUSM",84,0)
 Q
"RTN","PXEDUSM",85,0)
 ;
"RTN","PXEDUSM",86,0)
 ;===================================
"RTN","PXEDUSM",87,0)
FPREACT(DA) ;Form pre-action
"RTN","PXEDUSM",88,0)
 Q
"RTN","PXEDUSM",89,0)
 ;
"RTN","PXEDUSM",90,0)
 ;===================================
"RTN","PXEDUSM",91,0)
LINKED(DA) ;Date Linked executable caption. This is really the display
"RTN","PXEDUSM",92,0)
 ;for the Linked column, the field is uneditable.
"RTN","PXEDUSM",93,0)
 I DA="" Q ""
"RTN","PXEDUSM",94,0)
 N LINKDT
"RTN","PXEDUSM",95,0)
 S LINKDT=$$GET^DDSVAL(9999999.11,.DA,"DATE LINKED")
"RTN","PXEDUSM",96,0)
 Q $S(LINKDT'="":"Y",1:"N")
"RTN","PXEDUSM",97,0)
 ;
"RTN","PXEDUSM",98,0)
 ;===================================
"RTN","PXEDUSM",99,0)
MCBLKPRE(DA) ;Mapped codes block pre-action.
"RTN","PXEDUSM",100,0)
 ;Make any mapped codes that have been linked uneditable.
"RTN","PXEDUSM",101,0)
 N IENS,IND,LINKDT
"RTN","PXEDUSM",102,0)
 S IND=0
"RTN","PXEDUSM",103,0)
 S IEN=DA(1)
"RTN","PXEDUSM",104,0)
 F  S IND=+$O(^AUTTEDT(IEN,210,IND)) Q:IND=0  D
"RTN","PXEDUSM",105,0)
 . S LINKDT=$P(^AUTTEDT(IEN,210,IND,0),U,4)
"RTN","PXEDUSM",106,0)
 . I LINKDT="" Q
"RTN","PXEDUSM",107,0)
 . S IENS=IND_","_IEN_","
"RTN","PXEDUSM",108,0)
 . D UNED^DDSUTL("CODING SYSTEM","PX EDU CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXEDUSM",109,0)
 . D UNED^DDSUTL("CODE","PX EDU CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXEDUSM",110,0)
 . D UNED^DDSUTL("UNLINK","PX EDU CODE MAPPINGS BLOCK",1,0,IENS)
"RTN","PXEDUSM",111,0)
 Q
"RTN","PXEDUSM",112,0)
 ;
"RTN","PXEDUSM",113,0)
 ;===================================
"RTN","PXEDUSM",114,0)
SMANEDIT(IEN,NEW) ;ScreenMan edit for entry IEN.
"RTN","PXEDUSM",115,0)
 N CLASS,DA,DDSCHANG,DDSFILE,DDSPARM,DDSSAVE,DEL,DIDEL,DIMSG,DR,DTOUT
"RTN","PXEDUSM",116,0)
 N HASH256,OCLOG,NATOK,SHASH256
"RTN","PXEDUSM",117,0)
 S (DDSFILE,DIDEL)=9999999.09,DDSPARM="CS",DR="[PX EDUCATION TOPIC EDIT]"
"RTN","PXEDUSM",118,0)
 S CLASS=$P(^AUTTEDT(IEN,100),U,1)
"RTN","PXEDUSM",119,0)
 S NATOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXEDUSM",120,0)
 I 'NATOK D  Q
"RTN","PXEDUSM",121,0)
 . W !,"National education topics cannot be edited."
"RTN","PXEDUSM",122,0)
 . H 2
"RTN","PXEDUSM",123,0)
 . S VALMBCK="R"
"RTN","PXEDUSM",124,0)
 S NEW=$G(NEW)
"RTN","PXEDUSM",125,0)
 S SHASH256=$$FILE^XLFSHAN(256,9999999.09,IEN)
"RTN","PXEDUSM",126,0)
 S DA=IEN
"RTN","PXEDUSM",127,0)
 D ^DDS
"RTN","PXEDUSM",128,0)
 I $D(DIMSG) H 2
"RTN","PXEDUSM",129,0)
 ;If the entry is new and the user did not save, delete it.
"RTN","PXEDUSM",130,0)
 I NEW,$G(DDSSAVE)'=1 D DELETE^PXRMEXFI(9999999.09,IEN) Q
"RTN","PXEDUSM",131,0)
 ;If changes were made update the change log. If the change was a
"RTN","PXEDUSM",132,0)
 ;deletion skip the change log.
"RTN","PXEDUSM",133,0)
 S DEL=$S($D(^AUTTEDT(IEN)):0,1:1)
"RTN","PXEDUSM",134,0)
 I DEL D  Q
"RTN","PXEDUSM",135,0)
 . D BLDLIST^PXEDUMGR("PXEDUL")
"RTN","PXEDUSM",136,0)
 . S VALMBCK="R"
"RTN","PXEDUSM",137,0)
 I NEW S OCLOG=1
"RTN","PXEDUSM",138,0)
 E  S HASH256=$$FILE^XLFSHAN(256,9999999.09,IEN),OCLOG=$S(HASH256=SHASH256:0,1:1)
"RTN","PXEDUSM",139,0)
 I 'OCLOG S VALMBCK="R" Q
"RTN","PXEDUSM",140,0)
 ;Open the Change Log
"RTN","PXEDUSM",141,0)
 N IENS,FDA,FDAIEN,MSG,WPTMP
"RTN","PXEDUSM",142,0)
 S IENS="+1,"_IEN_","
"RTN","PXEDUSM",143,0)
 S FDA(9999999.1,IENS,.01)=$$NOW^XLFDT
"RTN","PXEDUSM",144,0)
 S FDA(9999999.1,IENS,1)=DUZ
"RTN","PXEDUSM",145,0)
 I NEW D
"RTN","PXEDUSM",146,0)
 . S WPTMP(1,1,1)=" Creation."
"RTN","PXEDUSM",147,0)
 . S FDA(9999999.1,IENS,2)="WPTMP(1,1)"
"RTN","PXEDUSM",148,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXEDUSM",149,0)
 K DA,DDSFILE
"RTN","PXEDUSM",150,0)
 S DA=FDAIEN(1),DA(1)=IEN
"RTN","PXEDUSM",151,0)
 S DDSFILE=9999999.09,DDSFILE(1)=9999999.1
"RTN","PXEDUSM",152,0)
 S DR="[PX EDUCATION TOPIC CHANGE LOG]"
"RTN","PXEDUSM",153,0)
 D ^DDS
"RTN","PXEDUSM",154,0)
 D BLDLIST^PXEDUMGR("PXEDUL") S VALMBCK="R"
"RTN","PXEDUSM",155,0)
 Q
"RTN","PXEDUSM",156,0)
 ;
"RTN","PXEDUSM",157,0)
 ;===================================
"RTN","PXEDUSM",158,0)
STEXCAP(DA) ;Subtopics executable caption.
"RTN","PXEDUSM",159,0)
 N NSUBTOP,TEXT
"RTN","PXEDUSM",160,0)
 S NSUBTOP=+$P($G(^AUTTEDT(DA,10,0)),U,4)
"RTN","PXEDUSM",161,0)
 S TEXT="SUBTOPICS: "
"RTN","PXEDUSM",162,0)
 I NSUBTOP=0 S TEXT=TEXT_"None defined" Q TEXT
"RTN","PXEDUSM",163,0)
 I NSUBTOP=1 S TEXT=TEXT_"There is 1 subtopic" Q TEXT
"RTN","PXEDUSM",164,0)
 I NSUBTOP>1 S TEXT=TEXT_"There are "_NSUBTOP_" subtopics"
"RTN","PXEDUSM",165,0)
 Q TEXT
"RTN","PXEDUSM",166,0)
 ;
"RTN","PXEDUSM",167,0)
 ;===================================
"RTN","PXEDUSM",168,0)
UNLINK(X,DA) ;Unlink form-only field save code.
"RTN","PXEDUSM",169,0)
 N IENS
"RTN","PXEDUSM",170,0)
 I X=1 S IENS=$$IENS^DILF(.DA),^TMP($J,"UNLINK",9999999.09,IENS)=""
"RTN","PXEDUSM",171,0)
 Q
"RTN","PXEDUSM",172,0)
 ;
"RTN","PXEXINQ")
0^8^B8926688
"RTN","PXEXINQ",1,0)
PXEXINQ ;SLC/PKR - Exam Inquire. ;12/21/2015
"RTN","PXEXINQ",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEXINQ",3,0)
 ;
"RTN","PXEXINQ",4,0)
 ;==========================================
"RTN","PXEXINQ",5,0)
BEXINQ(IEN) ;Display an Exam inquiry, defaults to the Browswer.
"RTN","PXEXINQ",6,0)
 N BOP,DIR0,OUTPUT,TITLE,TYPE
"RTN","PXEXINQ",7,0)
 I '$D(^AUTTEXAM(IEN)) Q
"RTN","PXEXINQ",8,0)
 S TITLE="Exam Inquiry"
"RTN","PXEXINQ",9,0)
 D EXINQ(IEN,.OUTPUT)
"RTN","PXEXINQ",10,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXEXINQ",11,0)
 I BOP="" Q
"RTN","PXEXINQ",12,0)
 I BOP="B" D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXEXINQ",13,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXEXINQ",14,0)
 Q
"RTN","PXEXINQ",15,0)
 ;
"RTN","PXEXINQ",16,0)
 ;==========================================
"RTN","PXEXINQ",17,0)
EXINQ(IEN,OUTPUT) ;Exam inquiry, return the formatted text in OUTPUT.
"RTN","PXEXINQ",18,0)
 ;Use 80 column output.
"RTN","PXEXINQ",19,0)
 N CODE,CODELIST,CODESYS,IENSTR,IND,INDXDT,LEN,MAPDT
"RTN","PXEXINQ",20,0)
 N NL,NSP,RM,T100,TEMP,TEXT,WPARRAY
"RTN","PXEXINQ",21,0)
 S RM=80
"RTN","PXEXINQ",22,0)
 S TEMP=^AUTTEXAM(IEN,0)
"RTN","PXEXINQ",23,0)
 S IENSTR="No. "_IEN
"RTN","PXEXINQ",24,0)
 S OUTPUT(1)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXEXINQ",25,0)
 S TEXT=$P(TEMP,U,1)
"RTN","PXEXINQ",26,0)
 S NSP=RM-$L(TEXT)-1
"RTN","PXEXINQ",27,0)
 S OUTPUT(2)=TEXT_$$RJ^XLFSTR(IENSTR,NSP," ")
"RTN","PXEXINQ",28,0)
 S OUTPUT(3)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXEXINQ",29,0)
 S OUTPUT(4)="Print Name: "_$$GET1^DIQ(9999999.15,IEN,200)
"RTN","PXEXINQ",30,0)
 S T100=^AUTTEXAM(IEN,100)
"RTN","PXEXINQ",31,0)
 S OUTPUT(5)="Class: "_$$GET1^DIQ(9999999.15,IEN,100)
"RTN","PXEXINQ",32,0)
 S OUTPUT(6)="Sponsor: "_$$GET1^DIQ(9999999.15,IEN,101)
"RTN","PXEXINQ",33,0)
 S OUTPUT(7)="Sex Specific: "_$$GET1^DIQ(9999999.15,IEN,.03)
"RTN","PXEXINQ",34,0)
 S OUTPUT(8)="Inactive Flag: "_$$GET1^DIQ(9999999.15,IEN,.04)
"RTN","PXEXINQ",35,0)
 S OUTPUT(9)=""
"RTN","PXEXINQ",36,0)
 S OUTPUT(10)="Description:"
"RTN","PXEXINQ",37,0)
 S NL=10
"RTN","PXEXINQ",38,0)
 S TEMP=$$GET1^DIQ(9999999.15,IEN,201,"","WPARRAY")
"RTN","PXEXINQ",39,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEXINQ",40,0)
 I TEMP="WPARRAY" D
"RTN","PXEXINQ",41,0)
 . S IND=0
"RTN","PXEXINQ",42,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXEXINQ",43,0)
 . K WPARRAY
"RTN","PXEXINQ",44,0)
 ;
"RTN","PXEXINQ",45,0)
 S IND=0
"RTN","PXEXINQ",46,0)
 F  S IND=+$O(^AUTTEXAM(IEN,210,IND)) Q:IND=0  D
"RTN","PXEXINQ",47,0)
 . S TEMP=^AUTTEXAM(IEN,210,IND,0)
"RTN","PXEXINQ",48,0)
 . S CODESYS=$P(TEMP,U,1),CODE=$P(TEMP,U,2)
"RTN","PXEXINQ",49,0)
 . S MAPDT=$P(TEMP,U,3),INDXDT=$P(TEMP,U,4)
"RTN","PXEXINQ",50,0)
 . I CODE'="" S CODELIST(CODESYS,CODE)=MAPDT_U_INDXDT
"RTN","PXEXINQ",51,0)
 D MCDISP^PXMCODES(.CODELIST,.NL,.OUTPUT)
"RTN","PXEXINQ",52,0)
 ;
"RTN","PXEXINQ",53,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEXINQ",54,0)
 S NL=NL+1,OUTPUT(NL)="                             Value Range"
"RTN","PXEXINQ",55,0)
 S TEMP=$G(^AUTTEXAM(IEN,220))
"RTN","PXEXINQ",56,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)="Not defined"
"RTN","PXEXINQ",57,0)
 E  D
"RTN","PXEXINQ",58,0)
 . S NL=NL+1,OUTPUT(NL)=" Minimum Value                Maximum Value           UCUM Code"
"RTN","PXEXINQ",59,0)
 . S NL=NL+1,OUTPUT(NL)=$S($E(TEMP,1)="-":"",1:" ")_$P(TEMP,U,1)
"RTN","PXEXINQ",60,0)
 . S LEN=$L(OUTPUT(NL)),NSP=30-LEN
"RTN","PXEXINQ",61,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_$P(TEMP,U,2)
"RTN","PXEXINQ",62,0)
 . N UCUMDATA,UCUMIEN
"RTN","PXEXINQ",63,0)
 . S UCUMIEN=$P(TEMP,U,3)
"RTN","PXEXINQ",64,0)
 .;ICR #6225
"RTN","PXEXINQ",65,0)
 . D UCUMDATA^LEXMUCUM(UCUMIEN,.UCUMDATA)
"RTN","PXEXINQ",66,0)
 . S LEN=$L(OUTPUT(NL)),NSP=55-LEN
"RTN","PXEXINQ",67,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_UCUMDATA(UCUMIEN,"UCUM CODE")
"RTN","PXEXINQ",68,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXEXINQ",69,0)
 . S NL=NL+1,OUTPUT(NL)="UCUM Description: "_UCUMDATA(UCUMIEN,"DESCRIPTION")
"RTN","PXEXINQ",70,0)
 ;
"RTN","PXEXINQ",71,0)
 Q
"RTN","PXEXINQ",72,0)
 ;
"RTN","PXEXMGR")
0^9^B41148512
"RTN","PXEXMGR",1,0)
PXEXMGR ;SLC/PKR - List Manager routines for Exams. ;10/24/2015
"RTN","PXEXMGR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEXMGR",3,0)
 ;
"RTN","PXEXMGR",4,0)
 ;=========================================
"RTN","PXEXMGR",5,0)
ADD ;Add a new entry.
"RTN","PXEXMGR",6,0)
 S VALMBCK="R"
"RTN","PXEXMGR",7,0)
 D CLEAR^VALM1
"RTN","PXEXMGR",8,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,NEW,Y
"RTN","PXEXMGR",9,0)
 S DIC="^AUTTEXAM("
"RTN","PXEXMGR",10,0)
 S DIC(0)="AEKLQ"
"RTN","PXEXMGR",11,0)
 S DIC("A")="Enter a new Exam Name: "
"RTN","PXEXMGR",12,0)
 S DLAYGO=9999999.15
"RTN","PXEXMGR",13,0)
 D ^DIC
"RTN","PXEXMGR",14,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y=-1) S VALMBCK="R" Q
"RTN","PXEXMGR",15,0)
 S NEW=$P(Y,U,3)
"RTN","PXEXMGR",16,0)
 I 'NEW D EN^DDIOL("That entry already exists, use EDIT instead.") H 2
"RTN","PXEXMGR",17,0)
 I NEW D
"RTN","PXEXMGR",18,0)
 . S DA=$P(Y,U,1)
"RTN","PXEXMGR",19,0)
 . D SMANEDIT^PXEXSM(DA,1)
"RTN","PXEXMGR",20,0)
 S VALMBCK="R"
"RTN","PXEXMGR",21,0)
 Q
"RTN","PXEXMGR",22,0)
 ;
"RTN","PXEXMGR",23,0)
 ;=========================================
"RTN","PXEXMGR",24,0)
BLDLIST(NODE) ;Build of list of Exam file entries.
"RTN","PXEXMGR",25,0)
 N IEN,DESC,FMTSTR,IND,NAME,NL,NUM,OUTPUT,START
"RTN","PXEXMGR",26,0)
 K ^TMP(NODE,$J)
"RTN","PXEXMGR",27,0)
 ;Build the list in alphabetical order.
"RTN","PXEXMGR",28,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLL")
"RTN","PXEXMGR",29,0)
 S (NUM,VALMCNT)=0
"RTN","PXEXMGR",30,0)
 S NAME=""
"RTN","PXEXMGR",31,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXEXMGR",32,0)
 . S IEN=$O(^AUTTEXAM("B",NAME,""))
"RTN","PXEXMGR",33,0)
 . S NUM=NUM+1
"RTN","PXEXMGR",34,0)
 . S ^TMP(NODE,$J,"SEL",NUM)=IEN
"RTN","PXEXMGR",35,0)
 . S ^TMP(NODE,$J,"IEN",IEN)=NUM
"RTN","PXEXMGR",36,0)
 . S DESC=$G(^AUTTEXAM(IEN,201,1,0))
"RTN","PXEXMGR",37,0)
 . I $L(DESC)>40 S DESC=$E(DESC,1,37)_"..."
"RTN","PXEXMGR",38,0)
 . D FORMAT(NUM,NAME,DESC,FMTSTR,.NL,.OUTPUT)
"RTN","PXEXMGR",39,0)
 . S START=VALMCNT+1
"RTN","PXEXMGR",40,0)
 . F IND=1:1:NL D
"RTN","PXEXMGR",41,0)
 .. S VALMCNT=VALMCNT+1,^TMP(NODE,$J,VALMCNT,0)=OUTPUT(IND)
"RTN","PXEXMGR",42,0)
 .. S ^TMP(NODE,$J,"IDX",VALMCNT,NUM)=""
"RTN","PXEXMGR",43,0)
 . S ^TMP(NODE,$J,"LINES",NUM)=START_U_VALMCNT
"RTN","PXEXMGR",44,0)
 S ^TMP(NODE,$J,"VALMCNT")=VALMCNT
"RTN","PXEXMGR",45,0)
 S ^TMP(NODE,$J,"NEXAM")=NUM
"RTN","PXEXMGR",46,0)
 Q
"RTN","PXEXMGR",47,0)
 ;
"RTN","PXEXMGR",48,0)
 ;=========================================
"RTN","PXEXMGR",49,0)
CLOG(IEN) ;Display the change log.
"RTN","PXEXMGR",50,0)
 D LMCLBROW^PXRMSINQ(9999999.15,"110*",IEN)
"RTN","PXEXMGR",51,0)
 Q
"RTN","PXEXMGR",52,0)
 ;
"RTN","PXEXMGR",53,0)
 ;=========================================
"RTN","PXEXMGR",54,0)
CLOGS ;Display Change Log for a selected entry.
"RTN","PXEXMGR",55,0)
 N IEN
"RTN","PXEXMGR",56,0)
 ;Get the entry
"RTN","PXEXMGR",57,0)
 S IEN=+$$GETSEL("Display the change log for which exam?")
"RTN","PXEXMGR",58,0)
 S VALMBCK="R"
"RTN","PXEXMGR",59,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEXMGR",60,0)
 D CLOG(IEN)
"RTN","PXEXMGR",61,0)
 S VALMBCK="R"
"RTN","PXEXMGR",62,0)
 Q
"RTN","PXEXMGR",63,0)
 ;
"RTN","PXEXMGR",64,0)
 ;=========================================
"RTN","PXEXMGR",65,0)
COPY(IEN) ;Copy a selected entry to a new name.
"RTN","PXEXMGR",66,0)
 D FULL^VALM1
"RTN","PXEXMGR",67,0)
 D COPY^PXCOPY(9999999.15,IEN)
"RTN","PXEXMGR",68,0)
 D BLDLIST^PXEXMGR("PXEXAML")
"RTN","PXEXMGR",69,0)
 S VALMBCK="R"
"RTN","PXEXMGR",70,0)
 Q
"RTN","PXEXMGR",71,0)
 ;
"RTN","PXEXMGR",72,0)
 ;=========================================
"RTN","PXEXMGR",73,0)
COPYS ;Copy a selected entry.
"RTN","PXEXMGR",74,0)
 N IEN
"RTN","PXEXMGR",75,0)
 ;Get the entry
"RTN","PXEXMGR",76,0)
 S IEN=+$$GETSEL("Select exam to copy")
"RTN","PXEXMGR",77,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEXMGR",78,0)
 D COPY(IEN)
"RTN","PXEXMGR",79,0)
 Q
"RTN","PXEXMGR",80,0)
 ;
"RTN","PXEXMGR",81,0)
 ;=========================================
"RTN","PXEXMGR",82,0)
EDITS ;Edit a selected entry.
"RTN","PXEXMGR",83,0)
 S VALMBCK="R"
"RTN","PXEXMGR",84,0)
 N CLASS,IEN
"RTN","PXEXMGR",85,0)
 ;Get the entry
"RTN","PXEXMGR",86,0)
 S IEN=+$$GETSEL("Select the exam to edit")
"RTN","PXEXMGR",87,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEXMGR",88,0)
 D SMANEDIT^PXEXSM(IEN,0)
"RTN","PXEXMGR",89,0)
 Q
"RTN","PXEXMGR",90,0)
 ;
"RTN","PXEXMGR",91,0)
 ;=========================================
"RTN","PXEXMGR",92,0)
ENTRY ;Entry code
"RTN","PXEXMGR",93,0)
 D INITMPG^PXEXMGR
"RTN","PXEXMGR",94,0)
 D BLDLIST^PXEXMGR("PXEXAML")
"RTN","PXEXMGR",95,0)
 D XQORM
"RTN","PXEXMGR",96,0)
 Q
"RTN","PXEXMGR",97,0)
 ;
"RTN","PXEXMGR",98,0)
 ;=========================================
"RTN","PXEXMGR",99,0)
EXIT ;Exit code
"RTN","PXEXMGR",100,0)
 D INITMPG^PXEXMGR
"RTN","PXEXMGR",101,0)
 D CLEAN^VALM10
"RTN","PXEXMGR",102,0)
 D FULL^VALM1
"RTN","PXEXMGR",103,0)
 S VALMBCK="Q"
"RTN","PXEXMGR",104,0)
 Q
"RTN","PXEXMGR",105,0)
 ;
"RTN","PXEXMGR",106,0)
 ;=========================================
"RTN","PXEXMGR",107,0)
FORMAT(NUMBER,NAME,DESC,FMTSTR,NL,OUTPUT) ;Format  entry number, name,
"RTN","PXEXMGR",108,0)
 ;and first line of description for LM display.
"RTN","PXEXMGR",109,0)
 N TEMP
"RTN","PXEXMGR",110,0)
 S TEMP=NUMBER_U_NAME_U_DESC
"RTN","PXEXMGR",111,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXEXMGR",112,0)
 Q
"RTN","PXEXMGR",113,0)
 ;
"RTN","PXEXMGR",114,0)
 ;=========================================
"RTN","PXEXMGR",115,0)
GETSEL(TEXT) ;Get a single selection
"RTN","PXEXMGR",116,0)
 N DIR,NEXAM,X,Y
"RTN","PXEXMGR",117,0)
 S NEXAM=+$G(^TMP("PXEXAML",$J,"NEXAM"))
"RTN","PXEXMGR",118,0)
 I NEXAM=0 Q 0
"RTN","PXEXMGR",119,0)
 S DIR(0)="N^1:"_NEXAM
"RTN","PXEXMGR",120,0)
 S DIR("A")=TEXT
"RTN","PXEXMGR",121,0)
 D ^DIR
"RTN","PXEXMGR",122,0)
 Q +$G(^TMP("PXEXAML",$J,"SEL",+Y))
"RTN","PXEXMGR",123,0)
 ;
"RTN","PXEXMGR",124,0)
 ;=========================================
"RTN","PXEXMGR",125,0)
HELP ;Display help.
"RTN","PXEXMGR",126,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXEXMGR",127,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXEXMGR",128,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXEXMGR",129,0)
 S DDS=1,DONE=0
"RTN","PXEXMGR",130,0)
 F IND=1:1 Q:DONE  D
"RTN","PXEXMGR",131,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXEXMGR",132,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXEXMGR",133,0)
 D BROWSE^DDBR("TEXT","NR","Exam Management Help")
"RTN","PXEXMGR",134,0)
 S VALMBCK="R"
"RTN","PXEXMGR",135,0)
 Q
"RTN","PXEXMGR",136,0)
 ;
"RTN","PXEXMGR",137,0)
 ;=========================================
"RTN","PXEXMGR",138,0)
HDR ; Header code
"RTN","PXEXMGR",139,0)
 S VALMHDR(1)="Exam File Entries."
"RTN","PXEXMGR",140,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXEXMGR",141,0)
 Q
"RTN","PXEXMGR",142,0)
 ;
"RTN","PXEXMGR",143,0)
 ;=========================================
"RTN","PXEXMGR",144,0)
HTEXT ;Exam mangement help text.
"RTN","PXEXMGR",145,0)
 ;;Select one of the following actions:
"RTN","PXEXMGR",146,0)
 ;; ADD  - add a new exam.
"RTN","PXEXMGR",147,0)
 ;; EDIT - edit an exam.
"RTN","PXEXMGR",148,0)
 ;; COPY - copy an existing exam to a new exam.
"RTN","PXEXMGR",149,0)
 ;; INQ  - exam inquiry.
"RTN","PXEXMGR",150,0)
 ;; EH   - exam edit history.
"RTN","PXEXMGR",151,0)
 ;;
"RTN","PXEXMGR",152,0)
 ;;You can select the action first and then the entry or choose the entry and then
"RTN","PXEXMGR",153,0)
 ;;the action.
"RTN","PXEXMGR",154,0)
 ;;
"RTN","PXEXMGR",155,0)
 ;;**End Text**
"RTN","PXEXMGR",156,0)
 Q
"RTN","PXEXMGR",157,0)
 ;
"RTN","PXEXMGR",158,0)
 ;=========================================
"RTN","PXEXMGR",159,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXEXMGR",160,0)
 K ^TMP("PXEXAML",$J)
"RTN","PXEXMGR",161,0)
 Q
"RTN","PXEXMGR",162,0)
 ;
"RTN","PXEXMGR",163,0)
 ;=========================================
"RTN","PXEXMGR",164,0)
INQ(IEN) ;Exam inquiry.
"RTN","PXEXMGR",165,0)
 S VALMBCK="R"
"RTN","PXEXMGR",166,0)
 D BEXINQ^PXEXINQ(IEN)
"RTN","PXEXMGR",167,0)
 Q
"RTN","PXEXMGR",168,0)
 ;
"RTN","PXEXMGR",169,0)
 ;=========================================
"RTN","PXEXMGR",170,0)
INQS ;Display inquiry for selected entries.
"RTN","PXEXMGR",171,0)
 S VALMBCK="R"
"RTN","PXEXMGR",172,0)
 N IEN
"RTN","PXEXMGR",173,0)
 ;Get the entry
"RTN","PXEXMGR",174,0)
 S IEN=+$$GETSEL("Display inquiry for which exam?")
"RTN","PXEXMGR",175,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXEXMGR",176,0)
 D INQ(IEN)
"RTN","PXEXMGR",177,0)
 S VALMBCK="R"
"RTN","PXEXMGR",178,0)
 Q
"RTN","PXEXMGR",179,0)
 ;
"RTN","PXEXMGR",180,0)
 ;=========================================
"RTN","PXEXMGR",181,0)
PEXIT ; Protocol exit code
"RTN","PXEXMGR",182,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXEXMGR",183,0)
 ;Reset after page up/down etc
"RTN","PXEXMGR",184,0)
 D XQORM
"RTN","PXEXMGR",185,0)
 Q
"RTN","PXEXMGR",186,0)
 ;
"RTN","PXEXMGR",187,0)
 ;=========================================
"RTN","PXEXMGR",188,0)
START ;Main entry point for PX Exam Management
"RTN","PXEXMGR",189,0)
 N VALMBCK,VALMSG,X
"RTN","PXEXMGR",190,0)
 S X="IORESET"
"RTN","PXEXMGR",191,0)
 D ENDR^%ZISS
"RTN","PXEXMGR",192,0)
 D EN^VALM("PX EXAM MANAGEMENT")
"RTN","PXEXMGR",193,0)
 W IORESET
"RTN","PXEXMGR",194,0)
 D KILL^%ZISS
"RTN","PXEXMGR",195,0)
 Q
"RTN","PXEXMGR",196,0)
 ;
"RTN","PXEXMGR",197,0)
 ;=========================================
"RTN","PXEXMGR",198,0)
XQORM ;Set range for selection.
"RTN","PXEXMGR",199,0)
 N NEXAM
"RTN","PXEXMGR",200,0)
 S NEXAM=^TMP("PXEXAML",$J,"NEXAM")
"RTN","PXEXMGR",201,0)
 S XQORM("#")=$O(^ORD(101,"B","PX EXAM SELECT ENTRY",0))_U_"1:"_NEXAM
"RTN","PXEXMGR",202,0)
 S XQORM("A")="Select Action: "
"RTN","PXEXMGR",203,0)
 Q
"RTN","PXEXMGR",204,0)
 ;
"RTN","PXEXMGR",205,0)
 ;=========================================
"RTN","PXEXMGR",206,0)
XSEL ;Entry action for protocol PX EXAM SELECT ENTRY.
"RTN","PXEXMGR",207,0)
 N CLASS,EDITOK,IEN,SEL
"RTN","PXEXMGR",208,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXEXMGR",209,0)
 ;Remove trailing ,
"RTN","PXEXMGR",210,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXEXMGR",211,0)
 ;Invalid selection
"RTN","PXEXMGR",212,0)
 I SEL["," D  Q
"RTN","PXEXMGR",213,0)
 . W !,"Only one item number allowed." H 2
"RTN","PXEXMGR",214,0)
 . S VALMBCK="R"
"RTN","PXEXMGR",215,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXEXMGR",216,0)
 . W !,SEL_" is not a valid item number." H 2
"RTN","PXEXMGR",217,0)
 . S VALMBCK="R"
"RTN","PXEXMGR",218,0)
 ;
"RTN","PXEXMGR",219,0)
 ;Get the IEN.
"RTN","PXEXMGR",220,0)
 S IEN=^TMP("PXEXAML",$J,"SEL",SEL)
"RTN","PXEXMGR",221,0)
 S CLASS=$P(^AUTTEXAM(IEN,100),U,1)
"RTN","PXEXMGR",222,0)
 ;
"RTN","PXEXMGR",223,0)
 ;Full screen mode
"RTN","PXEXMGR",224,0)
 D FULL^VALM1
"RTN","PXEXMGR",225,0)
 ;
"RTN","PXEXMGR",226,0)
 ;Action list.
"RTN","PXEXMGR",227,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXEXMGR",228,0)
 S DIR(0)="SBM"_U
"RTN","PXEXMGR",229,0)
 S EDITOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXEXMGR",230,0)
 I EDITOK S DIR(0)=DIR(0)_"EDIT:Edit;"
"RTN","PXEXMGR",231,0)
 S DIR(0)=DIR(0)_"COPY:Copy;"
"RTN","PXEXMGR",232,0)
 S DIR(0)=DIR(0)_"INQ:Inquire;"
"RTN","PXEXMGR",233,0)
 S DIR(0)=DIR(0)_"CL:Change Log;"
"RTN","PXEXMGR",234,0)
 S DIR("A")="Select Action: "
"RTN","PXEXMGR",235,0)
 S DIR("B")=$S(CLASS="N":"INQ",1:"EDIT")
"RTN","PXEXMGR",236,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXEXMGR",237,0)
 D ^DIR
"RTN","PXEXMGR",238,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXEXMGR",239,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXEXMGR",240,0)
 S OPTION=Y
"RTN","PXEXMGR",241,0)
 D CLEAR^VALM1
"RTN","PXEXMGR",242,0)
 ;
"RTN","PXEXMGR",243,0)
 I OPTION="COPY" D COPY^PXEXMGR(IEN)
"RTN","PXEXMGR",244,0)
 I OPTION="EDIT" D SMANEDIT^PXEXSM(IEN,0)
"RTN","PXEXMGR",245,0)
 I OPTION="INQ" D BEXINQ^PXEXINQ(IEN)
"RTN","PXEXMGR",246,0)
 I OPTION="CL" D CLOG^PXEXMGR(IEN)
"RTN","PXEXMGR",247,0)
 S VALMBCK="R"
"RTN","PXEXMGR",248,0)
 Q
"RTN","PXEXMGR",249,0)
 ;
"RTN","PXEXSM")
0^10^B24473496
"RTN","PXEXSM",1,0)
PXEXSM ;SLC/PKR - Exam ScreenMan routines ;01/25/2017
"RTN","PXEXSM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXEXSM",3,0)
 ;
"RTN","PXEXSM",4,0)
 ;===================================
"RTN","PXEXSM",5,0)
CODEPAOC(DA) ;Code Post-Action On Change.
"RTN","PXEXSM",6,0)
 N CODE,CODESYS,IENS,NEWCODE,OLDCODE,SAVEDDS
"RTN","PXEXSM",7,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","PXEXSM",8,0)
 S OLDCODE=$$GET1^DIQ(9999999.18,IENS,1)
"RTN","PXEXSM",9,0)
 S CODESYS=$$GET^DDSVAL(9999999.18,.DA,.01)
"RTN","PXEXSM",10,0)
 S CODE=$$GET^DDSVAL(9999999.18,.DA,1)
"RTN","PXEXSM",11,0)
 ;DBIA #5746 covers kill and set of DDS.
"RTN","PXEXSM",12,0)
 I $D(DDS) S SAVEDDS=DDS K DDS
"RTN","PXEXSM",13,0)
 ;Call the Lexicon search.
"RTN","PXEXSM",14,0)
 S NEWCODE=$$GETCODE^PXLEXS(CODESYS,CODE,DT,0)
"RTN","PXEXSM",15,0)
 ;Reset the screen so ScreenMan displays properly.
"RTN","PXEXSM",16,0)
 I $D(SAVEDDS) D
"RTN","PXEXSM",17,0)
 . N IOAWM0,X
"RTN","PXEXSM",18,0)
 . S DDS=SAVEDDS
"RTN","PXEXSM",19,0)
 . S X=0 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","PXEXSM",20,0)
 . S X="IOAWM0" D ENDR^%ZISS W IOAWM0
"RTN","PXEXSM",21,0)
 . D REFRESH^DDSUTL
"RTN","PXEXSM",22,0)
 S CODE=$S(NEWCODE'="":NEWCODE,1:OLDCODE)
"RTN","PXEXSM",23,0)
 D PUT^DDSVAL(9999999.18,.DA,1,CODE)
"RTN","PXEXSM",24,0)
 Q
"RTN","PXEXSM",25,0)
 ;
"RTN","PXEXSM",26,0)
 ;===================================
"RTN","PXEXSM",27,0)
CODEPRE(DA) ;Code pre-action.
"RTN","PXEXSM",28,0)
 N CODESYS,TEXT
"RTN","PXEXSM",29,0)
 S CODESYS=$$GET^DDSVAL(9999999.18,.DA,.01)
"RTN","PXEXSM",30,0)
 ;DBIA #5679
"RTN","PXEXSM",31,0)
 S CODESYS=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXEXSM",32,0)
 S TEXT(1)="Input a search term or a "_CODESYS_" code."
"RTN","PXEXSM",33,0)
 D EN^DDIOL(.TEXT)
"RTN","PXEXSM",34,0)
 Q
"RTN","PXEXSM",35,0)
 ;
"RTN","PXEXSM",36,0)
 ;===================================
"RTN","PXEXSM",37,0)
CSYSPAOC(DA) ;Coding System Post-Action On Change.
"RTN","PXEXSM",38,0)
 N CODESYS,IENS,OLDCSYS,SAVEDDS
"RTN","PXEXSM",39,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","PXEXSM",40,0)
 S OLDCSYS=$$GET1^DIQ(9999999.18,IENS,.01)
"RTN","PXEXSM",41,0)
 S CODESYS=$$GET^DDSVAL(9999999.18,.DA,.01)
"RTN","PXEXSM",42,0)
 ;If the coding system has changed delete the existing code.
"RTN","PXEXSM",43,0)
 I (CODESYS'=OLDCSYS) D PUT^DDSVAL(9999999.18,.DA,1,"")
"RTN","PXEXSM",44,0)
 Q
"RTN","PXEXSM",45,0)
 ;
"RTN","PXEXSM",46,0)
 ;===================================
"RTN","PXEXSM",47,0)
FDATAVAL(IEN) ;Form Data Validation.
"RTN","PXEXSM",48,0)
 ;If either MINIMUM VALUE or MAXIMUM VALUE is defined, they both must be.
"RTN","PXEXSM",49,0)
 N MAX,MIN,TEXT
"RTN","PXEXSM",50,0)
 S MIN=$$GET^DDSVAL(9999999.15,IEN,220)
"RTN","PXEXSM",51,0)
 S MAX=$$GET^DDSVAL(9999999.15,IEN,221)
"RTN","PXEXSM",52,0)
 I (MIN=""),(MAX'="") D  Q
"RTN","PXEXSM",53,0)
 . S TEXT(1)="The Maximum Value is "_MAX_", but the Minimum Value is undefined."
"RTN","PXEXSM",54,0)
 . S TEXT(2)="Set a Minimum Value or delete the Maximum Value."
"RTN","PXEXSM",55,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEXSM",56,0)
 . S DDSBR="MINIMUM VALUE",DDSERROR=1
"RTN","PXEXSM",57,0)
 I (MIN'=""),(MAX="") D  Q
"RTN","PXEXSM",58,0)
 . S TEXT(1)="The Minimum Value is "_MIN_", but the Maximum Value is undefined."
"RTN","PXEXSM",59,0)
 . S TEXT(2)="Set a Maximum Value or delete the Minimum Value."
"RTN","PXEXSM",60,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEXSM",61,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXEXSM",62,0)
 I MAX<MIN D  Q
"RTN","PXEXSM",63,0)
 . S TEXT(1)="The Maximum Value cannot be less than the Minimum Value."
"RTN","PXEXSM",64,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXEXSM",65,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXEXSM",66,0)
 Q
"RTN","PXEXSM",67,0)
 ;
"RTN","PXEXSM",68,0)
 ;===================================
"RTN","PXEXSM",69,0)
FPOSTACT(IEN) ;Form Post-Action
"RTN","PXEXSM",70,0)
 N INACTIVE,INUSE,OUTPUT
"RTN","PXEXSM",71,0)
 ;If the change was a deletion there is nothing else to do.
"RTN","PXEXSM",72,0)
 I '$D(^AUTTEXAM(D0)) Q
"RTN","PXEXSM",73,0)
 ;If the exam was inactivated check to see if it is being used.
"RTN","PXEXSM",74,0)
 ;Need a new FileMan API to do this.
"RTN","PXEXSM",75,0)
 S INACTIVE=$$GET^DDSVAL(9999999.15,IEN,"INACTIVE FLAG")
"RTN","PXEXSM",76,0)
 Q
"RTN","PXEXSM",77,0)
 ;S INUSE=$S(INACTIVE:$$INUSE^PXRMTAXD(D0,"INACT"),1:0)
"RTN","PXEXSM",78,0)
 ;I INUSE D HLP^DDSUTL("$$EOP")
"RTN","PXEXSM",79,0)
 Q
"RTN","PXEXSM",80,0)
 ;
"RTN","PXEXSM",81,0)
 ;===================================
"RTN","PXEXSM",82,0)
FPOSTSAV(IEN) ;Form Post-Save.
"RTN","PXEXSM",83,0)
 ;Check for codes to link.
"RTN","PXEXSM",84,0)
 D MCLINK^PXMCLINK(9999999.15,IEN)
"RTN","PXEXSM",85,0)
 ;Check for codes to unlink.
"RTN","PXEXSM",86,0)
 I $D(^TMP($J,"UNLINK",9999999.15)) D MCUNLINK^PXMCLINK(9999999.15,IEN)
"RTN","PXEXSM",87,0)
 Q
"RTN","PXEXSM",88,0)
 ;
"RTN","PXEXSM",89,0)
 ;===================================
"RTN","PXEXSM",90,0)
FPREACT(DA) ;Form pre-action
"RTN","PXEXSM",91,0)
 Q
"RTN","PXEXSM",92,0)
 ;
"RTN","PXEXSM",93,0)
 ;===================================
"RTN","PXEXSM",94,0)
LINKED(DA) ;This is really the display for the Linked column,
"RTN","PXEXSM",95,0)
 ;the field is uneditable.
"RTN","PXEXSM",96,0)
 I DA="" Q ""
"RTN","PXEXSM",97,0)
 N LINKDT
"RTN","PXEXSM",98,0)
 S LINKDT=$$GET^DDSVAL(9999999.18,.DA,"DATE LINKED")
"RTN","PXEXSM",99,0)
 Q $S(LINKDT'="":"Y",1:"N")
"RTN","PXEXSM",100,0)
 ;
"RTN","PXEXSM",101,0)
 ;===================================
"RTN","PXEXSM",102,0)
MCBLKPRE(DA) ;Mapped codes block pre-action.
"RTN","PXEXSM",103,0)
 ;Make any mapped codes that have been linked uneditable.
"RTN","PXEXSM",104,0)
 N IENS,IND,LINKDT
"RTN","PXEXSM",105,0)
 S IND=0
"RTN","PXEXSM",106,0)
 S IEN=DA(1)
"RTN","PXEXSM",107,0)
 F  S IND=+$O(^AUTTEXAM(IEN,210,IND)) Q:IND=0  D
"RTN","PXEXSM",108,0)
 . S LINKDT=$P(^AUTTEXAM(IEN,210,IND,0),U,4)
"RTN","PXEXSM",109,0)
 . I LINKDT="" Q
"RTN","PXEXSM",110,0)
 . S IENS=IND_","_IEN_","
"RTN","PXEXSM",111,0)
 . D UNED^DDSUTL("CODING SYSTEM","PX EXAM CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXEXSM",112,0)
 . D UNED^DDSUTL("CODE","PX EXAM CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXEXSM",113,0)
 . D UNED^DDSUTL("UNLINK","PX EXAM CODE MAPPINGS BLOCK",1,0,IENS)
"RTN","PXEXSM",114,0)
 Q
"RTN","PXEXSM",115,0)
 ;
"RTN","PXEXSM",116,0)
 ;===================================
"RTN","PXEXSM",117,0)
SMANEDIT(IEN,NEW) ;ScreenMan edit for entry IEN.
"RTN","PXEXSM",118,0)
 N CLASS,DA,DDSCHANG,DDSFILE,DDSPARM,DDSSAVE,DEL,DIDEL,DIMSG,DR,DTOUT
"RTN","PXEXSM",119,0)
 N HASH256,OCLOG,NATOK,SHASH256
"RTN","PXEXSM",120,0)
 S (DDSFILE,DIDEL)=9999999.15,DDSPARM="CS",DR="[PX EXAM EDIT]"
"RTN","PXEXSM",121,0)
 S CLASS=$P(^AUTTEXAM(IEN,100),U,1)
"RTN","PXEXSM",122,0)
 S NATOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXEXSM",123,0)
 I 'NATOK D  Q
"RTN","PXEXSM",124,0)
 . W !,"National exams cannot be edited."
"RTN","PXEXSM",125,0)
 . H 2
"RTN","PXEXSM",126,0)
 . S VALMBCK="R"
"RTN","PXEXSM",127,0)
 S NEW=$G(NEW)
"RTN","PXEXSM",128,0)
 S SHASH256=$$FILE^XLFSHAN(256,9999999.15,IEN)
"RTN","PXEXSM",129,0)
 S DA=IEN
"RTN","PXEXSM",130,0)
 D ^DDS
"RTN","PXEXSM",131,0)
 I $D(DIMSG) H 2
"RTN","PXEXSM",132,0)
 ;If the entry is new and the user did not save, delete it.
"RTN","PXEXSM",133,0)
 I NEW,$G(DDSSAVE)'=1 D DELETE^PXRMEXFI(9999999.15,IEN) Q
"RTN","PXEXSM",134,0)
 ;If changes were made update the change log. If the change was a
"RTN","PXEXSM",135,0)
 ;deletion skip the change log.
"RTN","PXEXSM",136,0)
 S DEL=$S($D(^AUTTEXAM(IEN)):0,1:1)
"RTN","PXEXSM",137,0)
 I DEL D  Q
"RTN","PXEXSM",138,0)
 . D BLDLIST^PXEXMGR("PXEXAML")
"RTN","PXEXSM",139,0)
 . S VALMBCK="R"
"RTN","PXEXSM",140,0)
 I NEW S OCLOG=1
"RTN","PXEXSM",141,0)
 E  S HASH256=$$FILE^XLFSHAN(256,9999999.15,IEN),OCLOG=$S(HASH256=SHASH256:0,1:1)
"RTN","PXEXSM",142,0)
 I 'OCLOG S VALMBCK="R" Q
"RTN","PXEXSM",143,0)
 ;Open the Change Log
"RTN","PXEXSM",144,0)
 N IENS,FDA,FDAIEN,MSG,WPTMP
"RTN","PXEXSM",145,0)
 S IENS="+1,"_IEN_","
"RTN","PXEXSM",146,0)
 S FDA(9999999.16,IENS,.01)=$$NOW^XLFDT
"RTN","PXEXSM",147,0)
 S FDA(9999999.16,IENS,1)=DUZ
"RTN","PXEXSM",148,0)
 I NEW D
"RTN","PXEXSM",149,0)
 . S WPTMP(1,1,1)=" Creation."
"RTN","PXEXSM",150,0)
 . S FDA(9999999.16,IENS,2)="WPTMP(1,1)"
"RTN","PXEXSM",151,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXEXSM",152,0)
 K DA,DDSFILE
"RTN","PXEXSM",153,0)
 S DA=FDAIEN(1),DA(1)=IEN
"RTN","PXEXSM",154,0)
 S DDSFILE=9999999.15,DDSFILE(1)=9999999.16
"RTN","PXEXSM",155,0)
 S DR="[PX EXAM CHANGE LOG]"
"RTN","PXEXSM",156,0)
 D ^DDS
"RTN","PXEXSM",157,0)
 D BLDLIST^PXEXMGR("PXEXAML") S VALMBCK="R"
"RTN","PXEXSM",158,0)
 Q
"RTN","PXEXSM",159,0)
 ;
"RTN","PXEXSM",160,0)
 ;===================================
"RTN","PXEXSM",161,0)
UNLINK(X,DA) ;Unlink form-only field save code.
"RTN","PXEXSM",162,0)
 N IENS
"RTN","PXEXSM",163,0)
 I X=1 S IENS=$$IENS^DILF(.DA),^TMP($J,"UNLINK",9999999.15,IENS)=""
"RTN","PXEXSM",164,0)
 Q
"RTN","PXEXSM",165,0)
 ;
"RTN","PXHFINQ")
0^11^B13212938
"RTN","PXHFINQ",1,0)
PXHFINQ ;SLC/PKR - Health Factor Inquire. ;12/21/2015
"RTN","PXHFINQ",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXHFINQ",3,0)
 ;
"RTN","PXHFINQ",4,0)
 ;==========================================
"RTN","PXHFINQ",5,0)
BHFINQ(IEN) ;Display an Health Factor inquiry, defaults to the Browswer.
"RTN","PXHFINQ",6,0)
 N BOP,DIR0,OUTPUT,TITLE,TYPE
"RTN","PXHFINQ",7,0)
 I '$D(^AUTTHF(IEN)) Q
"RTN","PXHFINQ",8,0)
 S TITLE="Health Factor Inquiry"
"RTN","PXHFINQ",9,0)
 D HFINQ(IEN,.OUTPUT)
"RTN","PXHFINQ",10,0)
 S BOP=$$BORP^PXRMUTIL("B")
"RTN","PXHFINQ",11,0)
 I BOP="" Q
"RTN","PXHFINQ",12,0)
 I BOP="B" D BROWSE^DDBR("OUTPUT","NR",TITLE)
"RTN","PXHFINQ",13,0)
 I BOP="P" D GPRINT^PXRMUTIL("OUTPUT")
"RTN","PXHFINQ",14,0)
 Q
"RTN","PXHFINQ",15,0)
 ;
"RTN","PXHFINQ",16,0)
 ;==========================================
"RTN","PXHFINQ",17,0)
HFINQ(IEN,OUTPUT) ;Health Factor inquiry, return the formatted text in OUTPUT.
"RTN","PXHFINQ",18,0)
 ;Use 80 column output.
"RTN","PXHFINQ",19,0)
 N CODE,CODELIST,CODESYS,IENSTR,IND,INDXDT,LEN,MAPDT
"RTN","PXHFINQ",20,0)
 N NL,NSP,RM,TEMP,TEXT,WPARRAY
"RTN","PXHFINQ",21,0)
 S RM=80
"RTN","PXHFINQ",22,0)
 S TEMP=^AUTTHF(IEN,0)
"RTN","PXHFINQ",23,0)
 S IENSTR="No. "_IEN
"RTN","PXHFINQ",24,0)
 S OUTPUT(1)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXHFINQ",25,0)
 S TEXT=$P(TEMP,U,1)
"RTN","PXHFINQ",26,0)
 S NSP=RM-$L(TEXT)-1
"RTN","PXHFINQ",27,0)
 S OUTPUT(2)=TEXT_$$RJ^XLFSTR(IENSTR,NSP," ")
"RTN","PXHFINQ",28,0)
 S OUTPUT(3)=$$REPEAT^XLFSTR("-",RM)
"RTN","PXHFINQ",29,0)
 S OUTPUT(4)="Print Name: "_$$GET1^DIQ(9999999.64,IEN,200)
"RTN","PXHFINQ",30,0)
 S OUTPUT(5)="Class: "_$$GET1^DIQ(9999999.64,IEN,100)
"RTN","PXHFINQ",31,0)
 S OUTPUT(6)="Sponsor: "_$$GET1^DIQ(9999999.64,IEN,101)
"RTN","PXHFINQ",32,0)
 S OUTPUT(7)="Entry Type: "_$$GET1^DIQ(9999999.64,IEN,.1)
"RTN","PXHFINQ",33,0)
 S OUTPUT(8)="Category: "_$$GET1^DIQ(9999999.64,IEN,.03)
"RTN","PXHFINQ",34,0)
 S OUTPUT(9)="Display on Health Summary: "_$$GET1^DIQ(9999999.64,IEN,.08)
"RTN","PXHFINQ",35,0)
 S OUTPUT(10)="Inactive Flag: "_$$GET1^DIQ(9999999.64,IEN,.11)
"RTN","PXHFINQ",36,0)
 S OUTPUT(11)="Short Name: "_$$GET1^DIQ(9999999.64,IEN,.04)
"RTN","PXHFINQ",37,0)
 S OUTPUT(12)="Synonym: "_$$GET1^DIQ(9999999.64,IEN,.09)
"RTN","PXHFINQ",38,0)
 S TEXT="Lower Age: "_$$GET1^DIQ(9999999.64,IEN,.06)
"RTN","PXHFINQ",39,0)
 S TEXT=TEXT_"  Upper Age: "_$$GET1^DIQ(9999999.64,IEN,.07)
"RTN","PXHFINQ",40,0)
 S OUTPUT(13)=TEXT
"RTN","PXHFINQ",41,0)
 S OUTPUT(14)="Use Only With Sex: "_$$GET1^DIQ(9999999.64,IEN,.05)
"RTN","PXHFINQ",42,0)
 S OUTPUT(15)=""
"RTN","PXHFINQ",43,0)
 S OUTPUT(16)="Description:"
"RTN","PXHFINQ",44,0)
 S NL=16
"RTN","PXHFINQ",45,0)
 S TEMP=$$GET1^DIQ(9999999.64,IEN,201,"","WPARRAY")
"RTN","PXHFINQ",46,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)=""
"RTN","PXHFINQ",47,0)
 I TEMP="WPARRAY" D
"RTN","PXHFINQ",48,0)
 . S IND=0
"RTN","PXHFINQ",49,0)
 . F  S IND=$O(WPARRAY(IND)) Q:IND=""  S NL=NL+1,OUTPUT(NL)=WPARRAY(IND)
"RTN","PXHFINQ",50,0)
 . K WPARRAY
"RTN","PXHFINQ",51,0)
 ;
"RTN","PXHFINQ",52,0)
 S IND=0
"RTN","PXHFINQ",53,0)
 F  S IND=+$O(^AUTTHF(IEN,210,IND)) Q:IND=0  D
"RTN","PXHFINQ",54,0)
 . S TEMP=^AUTTHF(IEN,210,IND,0)
"RTN","PXHFINQ",55,0)
 . S CODESYS=$P(TEMP,U,1),CODE=$P(TEMP,U,2)
"RTN","PXHFINQ",56,0)
 . S MAPDT=$P(TEMP,U,3),INDXDT=$P(TEMP,U,4)
"RTN","PXHFINQ",57,0)
 . I CODE'="" S CODELIST(CODESYS,CODE)=MAPDT_U_INDXDT
"RTN","PXHFINQ",58,0)
 D MCDISP^PXMCODES(.CODELIST,.NL,.OUTPUT)
"RTN","PXHFINQ",59,0)
 ;
"RTN","PXHFINQ",60,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXHFINQ",61,0)
 S NL=NL+1,OUTPUT(NL)="                             Value Range"
"RTN","PXHFINQ",62,0)
 S TEMP=$G(^AUTTHF(IEN,220))
"RTN","PXHFINQ",63,0)
 I TEMP="" S NL=NL+1,OUTPUT(NL)="Not defined"
"RTN","PXHFINQ",64,0)
 E  D
"RTN","PXHFINQ",65,0)
 . S NL=NL+1,OUTPUT(NL)=" Minimum Value                Maximum Value           UCUM Code"
"RTN","PXHFINQ",66,0)
 . S NL=NL+1,OUTPUT(NL)=$S($E(TEMP,1)="-":"",1:" ")_$P(TEMP,U,1)
"RTN","PXHFINQ",67,0)
 . S LEN=$L(OUTPUT(NL)),NSP=30-LEN
"RTN","PXHFINQ",68,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_$P(TEMP,U,2)
"RTN","PXHFINQ",69,0)
 . N UCUMDATA,UCUMIEN
"RTN","PXHFINQ",70,0)
 . S UCUMIEN=$P(TEMP,U,3)
"RTN","PXHFINQ",71,0)
 .;ICR #6225
"RTN","PXHFINQ",72,0)
 . D UCUMDATA^LEXMUCUM(UCUMIEN,.UCUMDATA)
"RTN","PXHFINQ",73,0)
 . S LEN=$L(OUTPUT(NL)),NSP=54-LEN
"RTN","PXHFINQ",74,0)
 . S OUTPUT(NL)=OUTPUT(NL)_$$REPEAT^XLFSTR(" ",NSP)_UCUMDATA(UCUMIEN,"UCUM CODE")
"RTN","PXHFINQ",75,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXHFINQ",76,0)
 . S NL=NL+1,OUTPUT(NL)="UCUM Description: "_UCUMDATA(UCUMIEN,"DESCRIPTION")
"RTN","PXHFINQ",77,0)
 ;
"RTN","PXHFINQ",78,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXHFINQ",79,0)
 S NL=NL+1,OUTPUT(NL)="Not Used With:"
"RTN","PXHFINQ",80,0)
 I +$P($G(^AUTTHF(IEN,11,0)),U,4)=0 S NL=NL+1,OUTPUT(NL)=" None defined" Q
"RTN","PXHFINQ",81,0)
 S IND=0
"RTN","PXHFINQ",82,0)
 F  S IND=+$O(^AUTTHF(IEN,11,IND)) Q:IND=0  D
"RTN","PXHFINQ",83,0)
 . S NL=NL+1,OUTPUT(NL)=" "_$$GET1^DIQ(9999999.64,$P(^AUTTHF(IEN,11,IND,0),U,1),.01)
"RTN","PXHFINQ",84,0)
 Q
"RTN","PXHFINQ",85,0)
 ;
"RTN","PXHFMGR")
0^12^B41400239
"RTN","PXHFMGR",1,0)
PXHFMGR ;SLC/PKR - List Manager routines for Health Factors. ;01/19/2017
"RTN","PXHFMGR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXHFMGR",3,0)
 ;
"RTN","PXHFMGR",4,0)
 ;=========================================
"RTN","PXHFMGR",5,0)
ADD ;Add a new entry.
"RTN","PXHFMGR",6,0)
 S VALMBCK="R"
"RTN","PXHFMGR",7,0)
 D CLEAR^VALM1
"RTN","PXHFMGR",8,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,NEW,Y
"RTN","PXHFMGR",9,0)
 S DIC="^AUTTHF("
"RTN","PXHFMGR",10,0)
 S DIC(0)="AEKLQ"
"RTN","PXHFMGR",11,0)
 S DIC("A")="Enter a new Health Factor Name: "
"RTN","PXHFMGR",12,0)
 S DLAYGO=9999999.15
"RTN","PXHFMGR",13,0)
 D ^DIC
"RTN","PXHFMGR",14,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y=-1) S VALMBCK="R" Q
"RTN","PXHFMGR",15,0)
 S NEW=$P(Y,U,3)
"RTN","PXHFMGR",16,0)
 I 'NEW D EN^DDIOL("That entry already exists, use EDIT instead.") H 2
"RTN","PXHFMGR",17,0)
 I NEW D
"RTN","PXHFMGR",18,0)
 . S DA=$P(Y,U,1)
"RTN","PXHFMGR",19,0)
 . D SMANEDIT^PXHFSM(DA,1)
"RTN","PXHFMGR",20,0)
 S VALMBCK="R"
"RTN","PXHFMGR",21,0)
 Q
"RTN","PXHFMGR",22,0)
 ;
"RTN","PXHFMGR",23,0)
 ;=========================================
"RTN","PXHFMGR",24,0)
BLDLIST(NODE) ;Build of list of Health Factor file entries.
"RTN","PXHFMGR",25,0)
 N IEN,DESC,FMTSTR,IND,NAME,NL,NUM,OUTPUT,START
"RTN","PXHFMGR",26,0)
 K ^TMP(NODE,$J)
"RTN","PXHFMGR",27,0)
 ;Build the list in alphabetical order.
"RTN","PXHFMGR",28,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLL")
"RTN","PXHFMGR",29,0)
 S (NUM,VALMCNT)=0
"RTN","PXHFMGR",30,0)
 S NAME=""
"RTN","PXHFMGR",31,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:NAME=""  D
"RTN","PXHFMGR",32,0)
 . S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","PXHFMGR",33,0)
 . S NUM=NUM+1
"RTN","PXHFMGR",34,0)
 . S ^TMP(NODE,$J,"SEL",NUM)=IEN
"RTN","PXHFMGR",35,0)
 . S ^TMP(NODE,$J,"IEN",IEN)=NUM
"RTN","PXHFMGR",36,0)
 . S DESC=$G(^AUTTHF(IEN,201,1,0))
"RTN","PXHFMGR",37,0)
 . I $L(DESC)>40 S DESC=$E(DESC,1,37)_"..."
"RTN","PXHFMGR",38,0)
 . D FORMAT(NUM,NAME,DESC,FMTSTR,.NL,.OUTPUT)
"RTN","PXHFMGR",39,0)
 . S START=VALMCNT+1
"RTN","PXHFMGR",40,0)
 . F IND=1:1:NL D
"RTN","PXHFMGR",41,0)
 .. S VALMCNT=VALMCNT+1,^TMP(NODE,$J,VALMCNT,0)=OUTPUT(IND)
"RTN","PXHFMGR",42,0)
 .. S ^TMP(NODE,$J,"IDX",VALMCNT,NUM)=""
"RTN","PXHFMGR",43,0)
 . S ^TMP(NODE,$J,"LINES",NUM)=START_U_VALMCNT
"RTN","PXHFMGR",44,0)
 S ^TMP(NODE,$J,"VALMCNT")=VALMCNT
"RTN","PXHFMGR",45,0)
 S ^TMP(NODE,$J,"NHF")=NUM
"RTN","PXHFMGR",46,0)
 Q
"RTN","PXHFMGR",47,0)
 ;
"RTN","PXHFMGR",48,0)
 ;=========================================
"RTN","PXHFMGR",49,0)
CLOG(IEN) ;Display the change log.
"RTN","PXHFMGR",50,0)
 D LMCLBROW^PXRMSINQ(9999999.64,"110*",IEN)
"RTN","PXHFMGR",51,0)
 Q
"RTN","PXHFMGR",52,0)
 ;
"RTN","PXHFMGR",53,0)
 ;=========================================
"RTN","PXHFMGR",54,0)
CLOGS ;Display Change Log for a selected entry.
"RTN","PXHFMGR",55,0)
 N IEN
"RTN","PXHFMGR",56,0)
 ;Get the entry
"RTN","PXHFMGR",57,0)
 S IEN=+$$GETSEL("Display the change log for which health factor?")
"RTN","PXHFMGR",58,0)
 S VALMBCK="R"
"RTN","PXHFMGR",59,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXHFMGR",60,0)
 D CLOG(IEN)
"RTN","PXHFMGR",61,0)
 S VALMBCK="R"
"RTN","PXHFMGR",62,0)
 Q
"RTN","PXHFMGR",63,0)
 ;
"RTN","PXHFMGR",64,0)
 ;=========================================
"RTN","PXHFMGR",65,0)
COPY(IEN) ;Copy a selected entry to a new name.
"RTN","PXHFMGR",66,0)
 D FULL^VALM1
"RTN","PXHFMGR",67,0)
 D COPY^PXCOPY(9999999.64,IEN)
"RTN","PXHFMGR",68,0)
 D BLDLIST^PXHFMGR("PXHFL")
"RTN","PXHFMGR",69,0)
 S VALMBCK="R"
"RTN","PXHFMGR",70,0)
 Q
"RTN","PXHFMGR",71,0)
 ;
"RTN","PXHFMGR",72,0)
 ;=========================================
"RTN","PXHFMGR",73,0)
COPYS ;Copy a selected entry.
"RTN","PXHFMGR",74,0)
 N IEN
"RTN","PXHFMGR",75,0)
 ;Get the entry
"RTN","PXHFMGR",76,0)
 S IEN=+$$GETSEL("Select exam to copy")
"RTN","PXHFMGR",77,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXHFMGR",78,0)
 D COPY(IEN)
"RTN","PXHFMGR",79,0)
 Q
"RTN","PXHFMGR",80,0)
 ;
"RTN","PXHFMGR",81,0)
 ;=========================================
"RTN","PXHFMGR",82,0)
EDITS ;Edit a selected entry.
"RTN","PXHFMGR",83,0)
 N CLASS,IEN
"RTN","PXHFMGR",84,0)
 ;Get the entry
"RTN","PXHFMGR",85,0)
 S IEN=+$$GETSEL("Select the health factor to edit")
"RTN","PXHFMGR",86,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXHFMGR",87,0)
 D SMANEDIT^PXHFSM(IEN,0)
"RTN","PXHFMGR",88,0)
 Q
"RTN","PXHFMGR",89,0)
 ;
"RTN","PXHFMGR",90,0)
 ;=========================================
"RTN","PXHFMGR",91,0)
ENTRY ;Entry code
"RTN","PXHFMGR",92,0)
 D INITMPG^PXHFMGR
"RTN","PXHFMGR",93,0)
 D BLDLIST^PXHFMGR("PXHFL")
"RTN","PXHFMGR",94,0)
 D XQORM
"RTN","PXHFMGR",95,0)
 Q
"RTN","PXHFMGR",96,0)
 ;
"RTN","PXHFMGR",97,0)
 ;=========================================
"RTN","PXHFMGR",98,0)
EXIT ;Exit code
"RTN","PXHFMGR",99,0)
 D INITMPG^PXHFMGR
"RTN","PXHFMGR",100,0)
 D CLEAN^VALM10
"RTN","PXHFMGR",101,0)
 D FULL^VALM1
"RTN","PXHFMGR",102,0)
 S VALMBCK="Q"
"RTN","PXHFMGR",103,0)
 Q
"RTN","PXHFMGR",104,0)
 ;
"RTN","PXHFMGR",105,0)
 ;=========================================
"RTN","PXHFMGR",106,0)
FORMAT(NUMBER,NAME,DESC,FMTSTR,NL,OUTPUT) ;Format  entry number, name,
"RTN","PXHFMGR",107,0)
 ;and first line of description for LM display.
"RTN","PXHFMGR",108,0)
 N TEMP
"RTN","PXHFMGR",109,0)
 S TEMP=NUMBER_U_NAME_U_DESC
"RTN","PXHFMGR",110,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEMP," ",.NL,.OUTPUT)
"RTN","PXHFMGR",111,0)
 Q
"RTN","PXHFMGR",112,0)
 ;
"RTN","PXHFMGR",113,0)
 ;=========================================
"RTN","PXHFMGR",114,0)
GETSEL(TEXT) ;Get a single selection
"RTN","PXHFMGR",115,0)
 N DIR,NHF,X,Y
"RTN","PXHFMGR",116,0)
 S NHF=+$G(^TMP("PXHFL",$J,"NHF"))
"RTN","PXHFMGR",117,0)
 I NHF=0 Q 0
"RTN","PXHFMGR",118,0)
 S DIR(0)="N^1:"_NHF
"RTN","PXHFMGR",119,0)
 S DIR("A")=TEXT
"RTN","PXHFMGR",120,0)
 D ^DIR
"RTN","PXHFMGR",121,0)
 Q +$G(^TMP("PXHFL",$J,"SEL",+Y))
"RTN","PXHFMGR",122,0)
 ;
"RTN","PXHFMGR",123,0)
 ;=========================================
"RTN","PXHFMGR",124,0)
HELP ;Display help.
"RTN","PXHFMGR",125,0)
 N DDS,DIR0,DONE,IND,TEXT
"RTN","PXHFMGR",126,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXHFMGR",127,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXHFMGR",128,0)
 S DDS=1,DONE=0
"RTN","PXHFMGR",129,0)
 F IND=1:1 Q:DONE  D
"RTN","PXHFMGR",130,0)
 . S TEXT(IND)=$P($T(HTEXT+IND),";",3,99)
"RTN","PXHFMGR",131,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXHFMGR",132,0)
 D BROWSE^DDBR("TEXT","NR","Health Factor Management Help")
"RTN","PXHFMGR",133,0)
 S VALMBCK="R"
"RTN","PXHFMGR",134,0)
 Q
"RTN","PXHFMGR",135,0)
 ;
"RTN","PXHFMGR",136,0)
 ;=========================================
"RTN","PXHFMGR",137,0)
HDR ; Header code
"RTN","PXHFMGR",138,0)
 S VALMHDR(1)="Health Factor File Entries."
"RTN","PXHFMGR",139,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXHFMGR",140,0)
 Q
"RTN","PXHFMGR",141,0)
 ;
"RTN","PXHFMGR",142,0)
 ;=========================================
"RTN","PXHFMGR",143,0)
HTEXT ;Health Factor mangement help text.
"RTN","PXHFMGR",144,0)
 ;;Select one of the following actions:
"RTN","PXHFMGR",145,0)
 ;; ADD  - add a new exam.
"RTN","PXHFMGR",146,0)
 ;; EDIT - edit an exam.
"RTN","PXHFMGR",147,0)
 ;; COPY - copy an existing exam to a new exam.
"RTN","PXHFMGR",148,0)
 ;; INQ  - exam inquiry.
"RTN","PXHFMGR",149,0)
 ;; EH   - exam edit history.
"RTN","PXHFMGR",150,0)
 ;;
"RTN","PXHFMGR",151,0)
 ;;You can select the action first and then the entry or choose the entry and then
"RTN","PXHFMGR",152,0)
 ;;the action.
"RTN","PXHFMGR",153,0)
 ;;
"RTN","PXHFMGR",154,0)
 ;;**End Text**
"RTN","PXHFMGR",155,0)
 Q
"RTN","PXHFMGR",156,0)
 ;
"RTN","PXHFMGR",157,0)
 ;=========================================
"RTN","PXHFMGR",158,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXHFMGR",159,0)
 K ^TMP("PXHFL",$J)
"RTN","PXHFMGR",160,0)
 Q
"RTN","PXHFMGR",161,0)
 ;
"RTN","PXHFMGR",162,0)
 ;=========================================
"RTN","PXHFMGR",163,0)
INQ(IEN) ;Health Factor inquiry.
"RTN","PXHFMGR",164,0)
 S VALMBCK="R"
"RTN","PXHFMGR",165,0)
 D BHFINQ^PXHFINQ(IEN)
"RTN","PXHFMGR",166,0)
 Q
"RTN","PXHFMGR",167,0)
 ;
"RTN","PXHFMGR",168,0)
 ;=========================================
"RTN","PXHFMGR",169,0)
INQS ;Display inquiry for selected entries.
"RTN","PXHFMGR",170,0)
 S VALMBCK="R"
"RTN","PXHFMGR",171,0)
 N IEN
"RTN","PXHFMGR",172,0)
 ;Get the entry
"RTN","PXHFMGR",173,0)
 S IEN=+$$GETSEL("Display inquiry for which health factor?")
"RTN","PXHFMGR",174,0)
 I IEN=0 S VALMBCK="R" Q
"RTN","PXHFMGR",175,0)
 D INQ(IEN)
"RTN","PXHFMGR",176,0)
 S VALMBCK="R"
"RTN","PXHFMGR",177,0)
 Q
"RTN","PXHFMGR",178,0)
 ;
"RTN","PXHFMGR",179,0)
 ;=========================================
"RTN","PXHFMGR",180,0)
PEXIT ; Protocol exit code
"RTN","PXHFMGR",181,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXHFMGR",182,0)
 ;Reset after page up/down etc
"RTN","PXHFMGR",183,0)
 D XQORM
"RTN","PXHFMGR",184,0)
 Q
"RTN","PXHFMGR",185,0)
 ;
"RTN","PXHFMGR",186,0)
 ;=========================================
"RTN","PXHFMGR",187,0)
START ;Main entry point for PX Health Factor Management
"RTN","PXHFMGR",188,0)
 N VALMBCK,VALMSG,X
"RTN","PXHFMGR",189,0)
 S X="IORESET"
"RTN","PXHFMGR",190,0)
 D ENDR^%ZISS
"RTN","PXHFMGR",191,0)
 D EN^VALM("PX HEALTH FACTOR MANAGEMENT")
"RTN","PXHFMGR",192,0)
 W IORESET
"RTN","PXHFMGR",193,0)
 D KILL^%ZISS
"RTN","PXHFMGR",194,0)
 Q
"RTN","PXHFMGR",195,0)
 ;
"RTN","PXHFMGR",196,0)
 ;=========================================
"RTN","PXHFMGR",197,0)
XQORM ;Set range for selection.
"RTN","PXHFMGR",198,0)
 N NHF
"RTN","PXHFMGR",199,0)
 S NHF=^TMP("PXHFL",$J,"NHF")
"RTN","PXHFMGR",200,0)
 S XQORM("#")=$O(^ORD(101,"B","PX HEALTH FACTOR SELECT ENTRY",0))_U_"1:"_NHF
"RTN","PXHFMGR",201,0)
 S XQORM("A")="Select Action: "
"RTN","PXHFMGR",202,0)
 Q
"RTN","PXHFMGR",203,0)
 ;
"RTN","PXHFMGR",204,0)
 ;=========================================
"RTN","PXHFMGR",205,0)
XSEL ;Entry action for protocol PX HEALTH FACTOR SELECT ENTRY.
"RTN","PXHFMGR",206,0)
 N CLASS,EDITOK,IEN,SEL
"RTN","PXHFMGR",207,0)
 S SEL=$P(XQORNOD(0),"=",2)
"RTN","PXHFMGR",208,0)
 ;Remove trailing ,
"RTN","PXHFMGR",209,0)
 I $E(SEL,$L(SEL))="," S SEL=$E(SEL,1,$L(SEL)-1)
"RTN","PXHFMGR",210,0)
 ;Invalid selection
"RTN","PXHFMGR",211,0)
 I SEL["," D  Q
"RTN","PXHFMGR",212,0)
 . W !,"Only one item number allowed." H 2
"RTN","PXHFMGR",213,0)
 . S VALMBCK="R"
"RTN","PXHFMGR",214,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("SEL",SEL))) D  Q
"RTN","PXHFMGR",215,0)
 . W !,SEL_" is not a valid item number." H 2
"RTN","PXHFMGR",216,0)
 . S VALMBCK="R"
"RTN","PXHFMGR",217,0)
 ;
"RTN","PXHFMGR",218,0)
 ;Get the IEN.
"RTN","PXHFMGR",219,0)
 S IEN=^TMP("PXHFL",$J,"SEL",SEL)
"RTN","PXHFMGR",220,0)
 S CLASS=$P(^AUTTHF(IEN,100),U,1)
"RTN","PXHFMGR",221,0)
 ;
"RTN","PXHFMGR",222,0)
 ;Full screen mode
"RTN","PXHFMGR",223,0)
 D FULL^VALM1
"RTN","PXHFMGR",224,0)
 ;
"RTN","PXHFMGR",225,0)
 ;Action list.
"RTN","PXHFMGR",226,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXHFMGR",227,0)
 S DIR(0)="SBM"_U
"RTN","PXHFMGR",228,0)
 S EDITOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXHFMGR",229,0)
 I EDITOK S DIR(0)=DIR(0)_"EDIT:Edit;"
"RTN","PXHFMGR",230,0)
 S DIR(0)=DIR(0)_"COPY:Copy;"
"RTN","PXHFMGR",231,0)
 S DIR(0)=DIR(0)_"INQ:Inquire;"
"RTN","PXHFMGR",232,0)
 S DIR(0)=DIR(0)_"CL:Change Log;"
"RTN","PXHFMGR",233,0)
 S DIR("A")="Select Action: "
"RTN","PXHFMGR",234,0)
 S DIR("B")=$S(CLASS="N":"INQ",1:"EDIT")
"RTN","PXHFMGR",235,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXHFMGR",236,0)
 D ^DIR
"RTN","PXHFMGR",237,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXHFMGR",238,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXHFMGR",239,0)
 S OPTION=Y
"RTN","PXHFMGR",240,0)
 D CLEAR^VALM1
"RTN","PXHFMGR",241,0)
 ;
"RTN","PXHFMGR",242,0)
 I OPTION="COPY" D COPY^PXHFMGR(IEN)
"RTN","PXHFMGR",243,0)
 I OPTION="EDIT" D SMANEDIT^PXHFSM(IEN,0)
"RTN","PXHFMGR",244,0)
 I OPTION="INQ" D BHFINQ^PXHFINQ(IEN)
"RTN","PXHFMGR",245,0)
 I OPTION="CL" D CLOG^PXHFMGR(IEN)
"RTN","PXHFMGR",246,0)
 S VALMBCK="R"
"RTN","PXHFMGR",247,0)
 Q
"RTN","PXHFMGR",248,0)
 ;
"RTN","PXHFSM")
0^13^B23623801
"RTN","PXHFSM",1,0)
PXHFSM ;SLC/PKR - Health Factor ScreenMan routines ;01/20/2017
"RTN","PXHFSM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXHFSM",3,0)
 ;
"RTN","PXHFSM",4,0)
 ;===================================
"RTN","PXHFSM",5,0)
CODEPAOC(DA) ;Code Post-Action On Change.
"RTN","PXHFSM",6,0)
 N CODE,CODESYS,NEWCODE,SAVEDDS
"RTN","PXHFSM",7,0)
 S CODESYS=$$GET^DDSVAL(9999999.66,.DA,.01)
"RTN","PXHFSM",8,0)
 S CODE=$$GET^DDSVAL(9999999.66,.DA,1)
"RTN","PXHFSM",9,0)
 ;DBIA #5746 covers kill and set of DDS.
"RTN","PXHFSM",10,0)
 I $D(DDS) S SAVEDDS=DDS K DDS
"RTN","PXHFSM",11,0)
 ;Call the Lexicon search.
"RTN","PXHFSM",12,0)
 S NEWCODE=$$GETCODE^PXLEXS(CODESYS,CODE,DT,0)
"RTN","PXHFSM",13,0)
 ;Reset the screen so ScreenMan displays properly.
"RTN","PXHFSM",14,0)
 I $D(SAVEDDS) D
"RTN","PXHFSM",15,0)
 . N IOAWM0,X
"RTN","PXHFSM",16,0)
 . S DDS=SAVEDDS
"RTN","PXHFSM",17,0)
 . S X=0 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","PXHFSM",18,0)
 . S X="IOAWM0" D ENDR^%ZISS W IOAWM0
"RTN","PXHFSM",19,0)
 . D REFRESH^DDSUTL
"RTN","PXHFSM",20,0)
 D PUT^DDSVAL(9999999.66,.DA,1,NEWCODE)
"RTN","PXHFSM",21,0)
 Q
"RTN","PXHFSM",22,0)
 ;
"RTN","PXHFSM",23,0)
 ;===================================
"RTN","PXHFSM",24,0)
CODEPRE(DA) ;Code pre-action.
"RTN","PXHFSM",25,0)
 N CODESYS,TEXT
"RTN","PXHFSM",26,0)
 S CODESYS=$$GET^DDSVAL(9999999.66,.DA,.01)
"RTN","PXHFSM",27,0)
 ;DBIA #5679
"RTN","PXHFSM",28,0)
 S CODESYS=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXHFSM",29,0)
 S TEXT(1)="Input a search term or a "_CODESYS_" code."
"RTN","PXHFSM",30,0)
 D EN^DDIOL(.TEXT)
"RTN","PXHFSM",31,0)
 Q
"RTN","PXHFSM",32,0)
 ;
"RTN","PXHFSM",33,0)
 ;===================================
"RTN","PXHFSM",34,0)
CSYSPAOC(DA) ;Coding System Post-Action On Change.
"RTN","PXHFSM",35,0)
 N CODESYS,IENS,OLDCSYS,SAVEDDS
"RTN","PXHFSM",36,0)
 S IENS=$$IENS^DILF(.DA)
"RTN","PXHFSM",37,0)
 S OLDCSYS=$$GET1^DIQ(9999999.66,IENS,.01)
"RTN","PXHFSM",38,0)
 S CODESYS=$$GET^DDSVAL(9999999.66,.DA,.01)
"RTN","PXHFSM",39,0)
 ;If the coding system has changed delete the existing code.
"RTN","PXHFSM",40,0)
 I (CODESYS'=OLDCSYS) D PUT^DDSVAL(9999999.66,.DA,1,"")
"RTN","PXHFSM",41,0)
 Q
"RTN","PXHFSM",42,0)
 ;
"RTN","PXHFSM",43,0)
 ;===================================
"RTN","PXHFSM",44,0)
FDATAVAL(IEN) ;Form Data Validation.
"RTN","PXHFSM",45,0)
 ;If either MINIMUM VALUE or MAXIMUM VALUE is defined, they both must be.
"RTN","PXHFSM",46,0)
 N MAX,MIN,TEXT
"RTN","PXHFSM",47,0)
 S MIN=$$GET^DDSVAL(9999999.64,IEN,220)
"RTN","PXHFSM",48,0)
 S MAX=$$GET^DDSVAL(9999999.64,IEN,221)
"RTN","PXHFSM",49,0)
 I (MIN=""),(MAX'="") D  Q
"RTN","PXHFSM",50,0)
 . S TEXT(1)="The Maximum Value is "_MAX_", but the Minimum Value is undefined."
"RTN","PXHFSM",51,0)
 . S TEXT(2)="Set a Minimum Value or delete the Maximum Value."
"RTN","PXHFSM",52,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXHFSM",53,0)
 . S DDSBR="MINIMUM VALUE",DDSERROR=1
"RTN","PXHFSM",54,0)
 I (MIN'=""),(MAX="") D  Q
"RTN","PXHFSM",55,0)
 . S TEXT(1)="The Minimum Value is "_MIN_", but the Maximum Value is undefined."
"RTN","PXHFSM",56,0)
 . S TEXT(2)="Set a Maximum Value or delete the Minimum Value."
"RTN","PXHFSM",57,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXHFSM",58,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXHFSM",59,0)
 I MAX<MIN D  Q
"RTN","PXHFSM",60,0)
 . S TEXT(1)="The Maximum Value cannot be less than the Minimum Value."
"RTN","PXHFSM",61,0)
 . D HLP^DDSUTL(.TEXT)
"RTN","PXHFSM",62,0)
 . S DDSBR="MAXIMUM VALUE",DDSERROR=1
"RTN","PXHFSM",63,0)
 Q
"RTN","PXHFSM",64,0)
 ;
"RTN","PXHFSM",65,0)
 ;===================================
"RTN","PXHFSM",66,0)
FPOSTACT(IEN) ;Form Post-Action
"RTN","PXHFSM",67,0)
 N INACTIVE,INUSE,OUTPUT
"RTN","PXHFSM",68,0)
 ;If the change was a deletion there is nothing else to do.
"RTN","PXHFSM",69,0)
 I '$D(^AUTTHF(D0)) Q
"RTN","PXHFSM",70,0)
 ;If the exam was inactivated check to see if it is being used.
"RTN","PXHFSM",71,0)
 ;Need a new FileMan API to do this.
"RTN","PXHFSM",72,0)
 S INACTIVE=$$GET^DDSVAL(9999999.64,IEN,"INACTIVE FLAG")
"RTN","PXHFSM",73,0)
 Q
"RTN","PXHFSM",74,0)
 ;S INUSE=$S(INACTIVE:$$INUSE^PXRMTAXD(D0,"INACT"),1:0)
"RTN","PXHFSM",75,0)
 ;I INUSE D HLP^DDSUTL("$$EOP")
"RTN","PXHFSM",76,0)
 Q
"RTN","PXHFSM",77,0)
 ;
"RTN","PXHFSM",78,0)
 ;===================================
"RTN","PXHFSM",79,0)
FPOSTSAV(IEN) ;Form Post-Save.
"RTN","PXHFSM",80,0)
 ;Check for codes to link.
"RTN","PXHFSM",81,0)
 D MCLINK^PXMCLINK(9999999.64,IEN)
"RTN","PXHFSM",82,0)
 ;Check for codes to unlink.
"RTN","PXHFSM",83,0)
 I $D(^TMP($J,"UNLINK",9999999.64)) D MCUNLINK^PXMCLINK(9999999.64,IEN)
"RTN","PXHFSM",84,0)
 Q
"RTN","PXHFSM",85,0)
 ;
"RTN","PXHFSM",86,0)
 ;===================================
"RTN","PXHFSM",87,0)
FPREACT(DA) ;Form pre-action
"RTN","PXHFSM",88,0)
 Q
"RTN","PXHFSM",89,0)
 ;
"RTN","PXHFSM",90,0)
 ;===================================
"RTN","PXHFSM",91,0)
LINKED(DA) ;This is the display for the Linked column, the field is uneditable.
"RTN","PXHFSM",92,0)
 I DA="" Q ""
"RTN","PXHFSM",93,0)
 N LINKDT
"RTN","PXHFSM",94,0)
 S LINKDT=$$GET^DDSVAL(9999999.66,.DA,"DATE LINKED")
"RTN","PXHFSM",95,0)
 Q $S(LINKDT'="":"Y",1:"N")
"RTN","PXHFSM",96,0)
 ;
"RTN","PXHFSM",97,0)
 ;===================================
"RTN","PXHFSM",98,0)
MCBLKPRE(DA) ;Mapped codes block pre-action.
"RTN","PXHFSM",99,0)
 ;Make any mapped codes that have been linked uneditable.
"RTN","PXHFSM",100,0)
 N IENS,IND,LINKDT
"RTN","PXHFSM",101,0)
 S IND=0
"RTN","PXHFSM",102,0)
 S IEN=DA(1)
"RTN","PXHFSM",103,0)
 F  S IND=+$O(^AUTTHF(IEN,210,IND)) Q:IND=0  D
"RTN","PXHFSM",104,0)
 . S LINKDT=$P(^AUTTHF(IEN,210,IND,0),U,4)
"RTN","PXHFSM",105,0)
 . I LINKDT="" Q
"RTN","PXHFSM",106,0)
 . S IENS=IND_","_IEN_","
"RTN","PXHFSM",107,0)
 . D UNED^DDSUTL("CODING SYSTEM","PX HF CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXHFSM",108,0)
 . D UNED^DDSUTL("CODE","PX HF CODE MAPPINGS BLOCK",1,1,IENS)
"RTN","PXHFSM",109,0)
 . D UNED^DDSUTL("UNLINK","PX HF CODE MAPPINGS BLOCK",1,0,IENS)
"RTN","PXHFSM",110,0)
 Q
"RTN","PXHFSM",111,0)
 ;
"RTN","PXHFSM",112,0)
 ;===================================
"RTN","PXHFSM",113,0)
SMANEDIT(IEN,NEW) ;ScreenMan edit for entry IEN.
"RTN","PXHFSM",114,0)
 N CLASS,DA,DDSCHANG,DDSFILE,DDSPARM,DDSSAVE,DEL,DIDEL,DIMSG,DR,DTOUT
"RTN","PXHFSM",115,0)
 N HASH256,OCLOG,NATOK,SHASH256
"RTN","PXHFSM",116,0)
 S (DDSFILE,DIDEL)=9999999.64,DDSPARM="CS",DR="[PX HEALTH FACTOR EDIT]"
"RTN","PXHFSM",117,0)
 S CLASS=$P(^AUTTHF(IEN,100),U,1)
"RTN","PXHFSM",118,0)
 S NATOK=$S(CLASS'="N":1,1:($G(PXNAT)=1)&($G(DUZ(0))="@"))
"RTN","PXHFSM",119,0)
 I 'NATOK D  Q
"RTN","PXHFSM",120,0)
 . W !,"National health factors cannot be edited."
"RTN","PXHFSM",121,0)
 . H 2
"RTN","PXHFSM",122,0)
 . S VALMBCK="R"
"RTN","PXHFSM",123,0)
 S NEW=$G(NEW)
"RTN","PXHFSM",124,0)
 S SHASH256=$$FILE^XLFSHAN(256,9999999.64,IEN)
"RTN","PXHFSM",125,0)
 S DA=IEN
"RTN","PXHFSM",126,0)
 D ^DDS
"RTN","PXHFSM",127,0)
 I $D(DIMSG) H 2
"RTN","PXHFSM",128,0)
 ;If the entry is new and the user did not save, delete it.
"RTN","PXHFSM",129,0)
 I NEW,$G(DDSSAVE)'=1 D DELETE^PXRMEXFI(9999999.64,IEN) Q
"RTN","PXHFSM",130,0)
 ;If changes were made update the change log. If the change was a
"RTN","PXHFSM",131,0)
 ;deletion skip the change log.
"RTN","PXHFSM",132,0)
 S DEL=$S($D(^AUTTHF(IEN)):0,1:1)
"RTN","PXHFSM",133,0)
 I DEL D  Q
"RTN","PXHFSM",134,0)
 . D BLDLIST^PXHFMGR("PXHFL")
"RTN","PXHFSM",135,0)
 . S VALMBCK="R"
"RTN","PXHFSM",136,0)
 I NEW S OCLOG=1
"RTN","PXHFSM",137,0)
 E  S HASH256=$$FILE^XLFSHAN(256,9999999.64,IEN),OCLOG=$S(HASH256=SHASH256:0,1:1)
"RTN","PXHFSM",138,0)
 I 'OCLOG S VALMBCK="R" Q
"RTN","PXHFSM",139,0)
 ;Open the Change Log
"RTN","PXHFSM",140,0)
 N IENS,FDA,FDAIEN,MSG,WPTMP
"RTN","PXHFSM",141,0)
 S IENS="+1,"_IEN_","
"RTN","PXHFSM",142,0)
 S FDA(9999999.65,IENS,.01)=$$NOW^XLFDT
"RTN","PXHFSM",143,0)
 S FDA(9999999.65,IENS,1)=DUZ
"RTN","PXHFSM",144,0)
 I NEW D
"RTN","PXHFSM",145,0)
 . S WPTMP(1,1,1)=" Creation."
"RTN","PXHFSM",146,0)
 . S FDA(9999999.65,IENS,2)="WPTMP(1,1)"
"RTN","PXHFSM",147,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXHFSM",148,0)
 K DA,DDSFILE
"RTN","PXHFSM",149,0)
 S DA=FDAIEN(1),DA(1)=IEN
"RTN","PXHFSM",150,0)
 S DDSFILE=9999999.64,DDSFILE(1)=9999999.65
"RTN","PXHFSM",151,0)
 S DR="[PX HEALTH FACTOR CHANGE LOG]"
"RTN","PXHFSM",152,0)
 D ^DDS
"RTN","PXHFSM",153,0)
 D BLDLIST^PXHFMGR("PXHFL") S VALMBCK="R"
"RTN","PXHFSM",154,0)
 Q
"RTN","PXHFSM",155,0)
 ;
"RTN","PXHFSM",156,0)
 ;===================================
"RTN","PXHFSM",157,0)
UNLINK(X,DA) ;Unlink form-only field save code.
"RTN","PXHFSM",158,0)
 N IENS
"RTN","PXHFSM",159,0)
 I X=1 S IENS=$$IENS^DILF(.DA),^TMP($J,"UNLINK",9999999.64,IENS)=""
"RTN","PXHFSM",160,0)
 Q
"RTN","PXHFSM",161,0)
 ;
"RTN","PXINPTR")
0^7^B5933655
"RTN","PXINPTR",1,0)
PXINPTR ;SLC/PKR - Input transforms for some PCE files. ;08/30/2016
"RTN","PXINPTR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXINPTR",3,0)
 ;=========================================
"RTN","PXINPTR",4,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXINPTR",5,0)
 ;National classes.
"RTN","PXINPTR",6,0)
 ;Do not execute as part of a verify fields.
"RTN","PXINPTR",7,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXINPTR",8,0)
 ;Do not execute as part of exchange.
"RTN","PXINPTR",9,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXINPTR",10,0)
 I (X["N"),(($G(PXNAT)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXINPTR",11,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXINPTR",12,0)
 E  Q 1
"RTN","PXINPTR",13,0)
 ;
"RTN","PXINPTR",14,0)
 ;=========================================
"RTN","PXINPTR",15,0)
VCODE(FILENUM,DA,CODE) ;Check for a valid coding system, code pair.
"RTN","PXINPTR",16,0)
 N CODESYS,VALID
"RTN","PXINPTR",17,0)
 S CODESYS=$$GET^DDSVAL(FILENUM,.DA,"CODING SYSTEM")
"RTN","PXINPTR",18,0)
 I CODESYS="" D  Q 0
"RTN","PXINPTR",19,0)
 . D EN^DDIOL("A coding system has not been specified.")
"RTN","PXINPTR",20,0)
 . H 3
"RTN","PXINPTR",21,0)
 I CODESYS'="BIR" S CODE=$$UP^XLFSTR(CODE)
"RTN","PXINPTR",22,0)
 S VALID=$$VCODE^PXLEX(CODESYS,CODE)
"RTN","PXINPTR",23,0)
 I 'VALID D EN^DDIOL(CODE_" is not a valid "_CODESYS_" code.")
"RTN","PXINPTR",24,0)
 Q VALID
"RTN","PXINPTR",25,0)
 ;
"RTN","PXINPTR",26,0)
 ;=========================================
"RTN","PXINPTR",27,0)
VCODESYS(CODESYS) ;Check for a valid coding system.
"RTN","PXINPTR",28,0)
 S CODESYS=$$UP^XLFSTR(CODESYS)
"RTN","PXINPTR",29,0)
 Q $$VCODESYS^PXLEX(CODESYS)
"RTN","PXINPTR",30,0)
 ;
"RTN","PXINPTR",31,0)
 ;=========================================
"RTN","PXINPTR",32,0)
VNAME(NAME) ;Check for a valid .01 value. The names of national reminder
"RTN","PXINPTR",33,0)
 ;components start with "VA-" and normal users are not allowed to
"RTN","PXINPTR",34,0)
 ;create them.
"RTN","PXINPTR",35,0)
 ;Do not execute as part of a verify fields.
"RTN","PXINPTR",36,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXINPTR",37,0)
 ;Do not execute as part of exchange.
"RTN","PXINPTR",38,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXINPTR",39,0)
 N AUTH,STEXT,TEXT,VALID
"RTN","PXINPTR",40,0)
 S NAME=$$UP^XLFSTR(NAME)
"RTN","PXINPTR",41,0)
 S VALID=1
"RTN","PXINPTR",42,0)
 I NAME["~" D
"RTN","PXINPTR",43,0)
 . S TEXT="Name cannot contain the ""~"" character."
"RTN","PXINPTR",44,0)
 . D EN^DDIOL(TEXT)
"RTN","PXINPTR",45,0)
 . H 2
"RTN","PXINPTR",46,0)
 . S VALID=0
"RTN","PXINPTR",47,0)
 S STEXT=$E(NAME,1,3)
"RTN","PXINPTR",48,0)
 I (STEXT="VA-") D
"RTN","PXINPTR",49,0)
 . S AUTH=($G(PXNAT)=1)&(DUZ(0)="@")
"RTN","PXINPTR",50,0)
 . I 'AUTH D
"RTN","PXINPTR",51,0)
 .. S TEXT="Name cannot start with ""VA-"", reserved for national PCE components!"
"RTN","PXINPTR",52,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXINPTR",53,0)
 .. H 2
"RTN","PXINPTR",54,0)
 .. S VALID=0
"RTN","PXINPTR",55,0)
 Q VALID
"RTN","PXINPTR",56,0)
 ;
"RTN","PXINPTR",57,0)
 ;=========================================
"RTN","PXINPTR",58,0)
VSPONSOR(FILENUM,X) ;Make sure file Class and Sponsor Class match.
"RTN","PXINPTR",59,0)
 ;If there is no sponsor don't do the check.
"RTN","PXINPTR",60,0)
 I X="" Q 1
"RTN","PXINPTR",61,0)
 ;Do not execute as part of a verify fields.
"RTN","PXINPTR",62,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXINPTR",63,0)
 ;Do not execute as part of exchange.
"RTN","PXINPTR",64,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXINPTR",65,0)
 N FCLASS,FNAME,SCLASS,TEXT,VALID
"RTN","PXINPTR",66,0)
 S VALID=1
"RTN","PXINPTR",67,0)
 I $G(X)="" Q VALID
"RTN","PXINPTR",68,0)
 S FCLASS=$$GET1^DIQ(FILENUM,DA,100)
"RTN","PXINPTR",69,0)
 S SCLASS=$$GET1^DIQ(811.6,X,100)
"RTN","PXINPTR",70,0)
 I SCLASS'=FCLASS D
"RTN","PXINPTR",71,0)
 . S FNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXINPTR",72,0)
 . S TEXT="Sponsor Class is "_SCLASS_", "_FNAME_" Class is "_FCLASS_" they must match!"
"RTN","PXINPTR",73,0)
 . D EN^DDIOL(TEXT)
"RTN","PXINPTR",74,0)
 . S VALID=0
"RTN","PXINPTR",75,0)
 Q VALID
"RTN","PXINPTR",76,0)
 ;
"RTN","PXKENC")
0^36^B29418539
"RTN","PXKENC",1,0)
PXKENC ;ISL/dee,ESW - Builds the array of all encounter data for the event point ;10/05/2016
"RTN","PXKENC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,22,73,108,143,183,210,215,211**;Aug 12, 1996;Build 84
"RTN","PXKENC",3,0)
 Q
"RTN","PXKENC",4,0)
 ;
"RTN","PXKENC",5,0)
GETENC(DFN,ENCDT,HLOC) ;Get all of the encounter data
"RTN","PXKENC",6,0)
 ;Parameters:
"RTN","PXKENC",7,0)
 ;  DFN    Pointer to the patient (#9000001)
"RTN","PXKENC",8,0)
 ;  ENCDT  Date/Time of the encounter in Fileman format
"RTN","PXKENC",9,0)
 ;  HLOC   Pointer to Hospital Location (#44)
"RTN","PXKENC",10,0)
 ;
"RTN","PXKENC",11,0)
 ;Returns:
"RTN","PXKENC",12,0)
 ;  -2  if called incorrectly
"RTN","PXKENC",13,0)
 ;  -1  if could not find encounter
"RTN","PXKENC",14,0)
 ;  >0  Visit ien(s) separated by ^
"RTN","PXKENC",15,0)
 ;
"RTN","PXKENC",16,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",17,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",18,0)
 ;  may contain more than one visit
"RTN","PXKENC",19,0)
 ;
"RTN","PXKENC",20,0)
 N VISITIEN,REVDT,RETURN
"RTN","PXKENC",21,0)
 K ^TMP("PXKENC",$J)
"RTN","PXKENC",22,0)
 S RETURN=-1
"RTN","PXKENC",23,0)
 Q:DFN'>0!(ENCDT<1800000)!(HLOC'>0) -2
"RTN","PXKENC",24,0)
 S REVDT=(9999999-$P(+ENCDT,".",1))_$S($P(+ENCDT,".",2)'="":"."_$P(+ENCDT,".",2),1:"")
"RTN","PXKENC",25,0)
 S VISITIEN=0
"RTN","PXKENC",26,0)
 F  S VISITIEN=$O(^AUPNVSIT("AA",+DFN,REVDT,VISITIEN)) Q:'VISITIEN  D
"RTN","PXKENC",27,0)
 . I $P($G(^AUPNVSIT(VISITIEN,0)),"^",22)=HLOC,"C~S"'[$P($G(^AUPNVSIT(VISITIEN,150)),"^",3) D
"RTN","PXKENC",28,0)
 .. D ENCEVENT(VISITIEN,1)
"RTN","PXKENC",29,0)
 .. I RETURN<1 S RETURN=VISITIEN
"RTN","PXKENC",30,0)
 .. E  S RETURN=RETURN_"^"_VISITIEN
"RTN","PXKENC",31,0)
 Q RETURN
"RTN","PXKENC",32,0)
 ;
"RTN","PXKENC",33,0)
ENCEVENT(VISITIEN,DONTKILL) ;Create the ^TMP("PXKENC",$J, array of all the
"RTN","PXKENC",34,0)
 ;  information about one encounter.
"RTN","PXKENC",35,0)
 ;Parameters:
"RTN","PXKENC",36,0)
 ;  VISITIEN  Pointer to the Visit (#9000010)
"RTN","PXKENC",37,0)
 ;  DONOTKILL is 1 if the output array is not to be killed before used
"RTN","PXKENC",38,0)
 ;            and 0 or null if the array is to be killed (cleaned out)
"RTN","PXKENC",39,0)
 ;
"RTN","PXKENC",40,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",41,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",42,0)
 ;
"RTN","PXKENC",43,0)
 I $G(VISITIEN)'>0 Q  ;PX/183
"RTN","PXKENC",44,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",45,0)
 K:'$G(DONTKILL) ^TMP("PXKENC",$J)
"RTN","PXKENC",46,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",47,0)
 S PXKROOT=$NA(@("^TMP(""PXKENC"",$J,"_VISITIEN_")"))
"RTN","PXKENC",48,0)
 ;
"RTN","PXKENC",49,0)
 N IEN,FILE,VFILE,FILESTR,PXKNODE
"RTN","PXKENC",50,0)
 F FILE="SIT","CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR","SC" D
"RTN","PXKENC",51,0)
 . S FILESTR=$S(FILE="SIT":"VST",1:FILE)
"RTN","PXKENC",52,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="SIT":"VST",FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",53,0)
 . I FILE="SIT" D
"RTN","PXKENC",54,0)
 .. S IEN=VISITIEN
"RTN","PXKENC",55,0)
 .. S PXKNODE=""
"RTN","PXKENC",56,0)
 .. F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D
"RTN","PXKENC",57,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE)=@VFILE@(IEN,PXKNODE)
"RTN","PXKENC",58,0)
 . E  D
"RTN","PXKENC",59,0)
 .. I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILESTR)
"RTN","PXKENC",60,0)
 .. I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",61,0)
 ... I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",62,0)
 ... S PXKNODE=""
"RTN","PXKENC",63,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",64,0)
 .... ;for cpt modifiers
"RTN","PXKENC",65,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",66,0)
 ..... S @PXKROOT@(FILESTR,IEN,PXKNODE,0)=$G(@VFILE@(IEN,PXKNODE,0))
"RTN","PXKENC",67,0)
 ..... N SUBIEN
"RTN","PXKENC",68,0)
 ..... S SUBIEN=0
"RTN","PXKENC",69,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:SUBIEN=""  D
"RTN","PXKENC",70,0)
 ...... S @PXKROOT@(FILESTR,IEN,PXKNODE,SUBIEN,0)=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",71,0)
 .... ;for immunizatin multiples
"RTN","PXKENC",72,0)
 .... I FILE="IMM",PXKNODE?1(1"2",1"3",1"11") D  Q
"RTN","PXKENC",73,0)
 ..... N SUBIEN
"RTN","PXKENC",74,0)
 ..... S SUBIEN=0
"RTN","PXKENC",75,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",76,0)
 ...... S @PXKROOT@(FILESTR,IEN,PXKNODE,SUBIEN,0)=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",77,0)
 .... ;
"RTN","PXKENC",78,0)
 .... S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",79,0)
 Q
"RTN","PXKENC",80,0)
EVALD(VISITIEN,PXKROOT,VFILE,FILESTR) ;evaluation for duplicate providers
"RTN","PXKENC",81,0)
 N CNT,PR,PRS,PS,PP,PRV,STR
"RTN","PXKENC",82,0)
 S IEN="",CNT=0
"RTN","PXKENC",83,0)
 F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",84,0)
 .S STR=@VFILE@(IEN,0),PR=+STR,PS=$P(STR,U,4)
"RTN","PXKENC",85,0)
 .I PS="P",'CNT S PRV=PR,CNT=1 D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",86,0)
 .I PS="S" S PRS(PR,IEN)="" D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",87,0)
 .Q
"RTN","PXKENC",88,0)
 S PR="" F  S PR=$O(PRS(PR)) Q:PR=""  S IEN="" D
"RTN","PXKENC",89,0)
 .F PP=1:1 S IEN=$O(PRS(PR,IEN)) Q:IEN=""  D
"RTN","PXKENC",90,0)
 ..I PR=$G(PRV) K @PXKROOT@(FILESTR,IEN) Q
"RTN","PXKENC",91,0)
 ..I PP>1 K @PXKROOT@(FILESTR,IEN)
"RTN","PXKENC",92,0)
 Q
"RTN","PXKENC",93,0)
PXKNODE(VFILE,FILESTR,IEN,PXKROOT) ;
"RTN","PXKENC",94,0)
 N STRR S PXKNODE=""
"RTN","PXKENC",95,0)
 F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",96,0)
 . I $E($P($P(PXKROOT,","),"(",2),2,7)="PXKENC" D
"RTN","PXKENC",97,0)
 ..; ENCEVENT called
"RTN","PXKENC",98,0)
 .. S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",99,0)
 . I $P(PXKROOT,"""",2)="PXKCO",'$D(@PXKROOT@(FILESTR,IEN)) D
"RTN","PXKENC",100,0)
 ..; COEVENT called
"RTN","PXKENC",101,0)
 .. F STRR="BEFORE","AFTER" D
"RTN","PXKENC",102,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE,STRR)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",103,0)
 Q
"RTN","PXKENC",104,0)
 ;
"RTN","PXKENC",105,0)
COEVENT(VISITIEN) ;Add to the ^TMP("PXKCO",$J, array all of the
"RTN","PXKENC",106,0)
 ;   information that is not already there.
"RTN","PXKENC",107,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",108,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",109,0)
 S PXKROOT=$NA(@("^TMP(""PXKCO"",$J,"_VISITIEN_")"))
"RTN","PXKENC",110,0)
 ;
"RTN","PXKENC",111,0)
 N IEN,FILE,VFILE,PXKNODE
"RTN","PXKENC",112,0)
 F FILE="CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR","SC" D
"RTN","PXKENC",113,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",114,0)
 . I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILE)
"RTN","PXKENC",115,0)
 . I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",116,0)
 .. I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",117,0)
 .. S PXKNODE=""
"RTN","PXKENC",118,0)
 .. I '$D(@PXKROOT@(FILE,IEN)) D
"RTN","PXKENC",119,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",120,0)
 .... ;
"RTN","PXKENC",121,0)
 .... I FILE="IMM",PXKNODE?1(1"2",1"3",1"11") D  Q
"RTN","PXKENC",122,0)
 ..... N SUBIEN,VAL
"RTN","PXKENC",123,0)
 ..... S SUBIEN=0
"RTN","PXKENC",124,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",125,0)
 ...... S VAL=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",126,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE",SUBIEN)=VAL
"RTN","PXKENC",127,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER",SUBIEN)=VAL
"RTN","PXKENC",128,0)
 .... ;
"RTN","PXKENC",129,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",130,0)
 ..... N SUBIEN,MOD
"RTN","PXKENC",131,0)
 ..... S SUBIEN=0
"RTN","PXKENC",132,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",133,0)
 ...... S MOD=@VFILE@(IEN,PXKNODE,SUBIEN,0)
"RTN","PXKENC",134,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE",MOD)=""
"RTN","PXKENC",135,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER",MOD)=""
"RTN","PXKENC",136,0)
 .... ;
"RTN","PXKENC",137,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",138,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",139,0)
 Q
"RTN","PXKENC",140,0)
 ;
"RTN","PXKFHF")
0^31^B2002717
"RTN","PXKFHF",1,0)
PXKFHF ;ISL/JVS - FIELDS for V HEALTH FACTORS file ;08/31/2016
"RTN","PXKFHF",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,211**;Aug 12, 1996;Build 84
"RTN","PXKFHF",3,0)
 ;
"RTN","PXKFHF",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFHF",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFHF",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFHF",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFHF",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFHF",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFHF",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFHF",11,0)
 ;    neither added or edited.
"RTN","PXKFHF",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFHF",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFHF",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFHF",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFHF",16,0)
 ;
"RTN","PXKFHF",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFHF",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFHF",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFHF",20,0)
 ;
"RTN","PXKFHF",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFHF",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFHF",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFHF",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFHF",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFHF",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFHF",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFHF",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFHF",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFHF",30,0)
 ;the information in $P 2.
"RTN","PXKFHF",31,0)
 ;
"RTN","PXKFHF",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFHF",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFHF",34,0)
GLOBAL ;;^AUPNVHF
"RTN","PXKFHF",35,0)
 ;
"RTN","PXKFHF",36,0)
EN1 ;
"RTN","PXKFHF",37,0)
 S PXKER=""
"RTN","PXKFHF",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFHF",39,0)
 Q
"RTN","PXKFHF",40,0)
EN2 ;
"RTN","PXKFHF",41,0)
 S PXKFD=""
"RTN","PXKFHF",42,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFHF",43,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFHF",44,0)
 Q
"RTN","PXKFHF",45,0)
ADD ;Add an entry to the file
"RTN","PXKFHF",46,0)
 Q
"RTN","PXKFHF",47,0)
0 ;;1,2,3 * 0+1,0+2,0+3 * 1
"RTN","PXKFHF",48,0)
 ;;.01////^S X=$G(
"RTN","PXKFHF",49,0)
 ;;.02////^S X=$G(
"RTN","PXKFHF",50,0)
 ;;.03////^S X=$G(
"RTN","PXKFHF",51,0)
 ;;.04///^S X=$G(
"RTN","PXKFHF",52,0)
 ;;.05////^S X=$G(
"RTN","PXKFHF",53,0)
12 ;;
"RTN","PXKFHF",54,0)
 ;;1201////^S X=$G(
"RTN","PXKFHF",55,0)
 ;;1202////^S X=$G(
"RTN","PXKFHF",56,0)
 ;;
"RTN","PXKFHF",57,0)
 ;;1204////^S X=$G(
"RTN","PXKFHF",58,0)
 ;;
"RTN","PXKFHF",59,0)
 ;;
"RTN","PXKFHF",60,0)
220 ;;
"RTN","PXKFHF",61,0)
 ;;220////^S X=$G(
"RTN","PXKFHF",62,0)
 ;;221////^S X=$G(
"RTN","PXKFHF",63,0)
801 ;;
"RTN","PXKFHF",64,0)
 ;;80101///^S X=1;
"RTN","PXKFHF",65,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFHF",66,0)
811 ;;
"RTN","PXKFHF",67,0)
 ;;81101///^S X=$G(
"RTN","PXKFHF",68,0)
812 ;;
"RTN","PXKFHF",69,0)
 ;;81201///^S X=$G(
"RTN","PXKFHF",70,0)
 ;;81202////^S X=$G(
"RTN","PXKFHF",71,0)
 ;;81203////^S X=$G(
"RTN","PXKFHF",72,0)
SPEC ;
"RTN","PXKFHF",73,0)
 Q
"RTN","PXKFPED")
0^29^B1977716
"RTN","PXKFPED",1,0)
PXKFPED ;ISL/JVS - Fields for V PATIENT EDUCATION file ;08/31/2016
"RTN","PXKFPED",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,211**;Aug 12, 1996;Build 84
"RTN","PXKFPED",3,0)
 ;
"RTN","PXKFPED",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFPED",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFPED",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFPED",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFPED",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFPED",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFPED",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFPED",11,0)
 ;    neither added or edited.
"RTN","PXKFPED",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFPED",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFPED",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFPED",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFPED",16,0)
 ;
"RTN","PXKFPED",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFPED",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFPED",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFPED",20,0)
 ;
"RTN","PXKFPED",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFPED",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFPED",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFPED",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFPED",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFPED",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFPED",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFPED",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFPED",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFPED",30,0)
 ;the information in $P 2.
"RTN","PXKFPED",31,0)
 ;
"RTN","PXKFPED",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFPED",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFPED",34,0)
GLOBAL ;;^AUPNVPED
"RTN","PXKFPED",35,0)
 ;
"RTN","PXKFPED",36,0)
 ;
"RTN","PXKFPED",37,0)
EN1 ;
"RTN","PXKFPED",38,0)
 S PXKER=""
"RTN","PXKFPED",39,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFPED",40,0)
 Q
"RTN","PXKFPED",41,0)
EN2 ;
"RTN","PXKFPED",42,0)
 S PXKFD=""
"RTN","PXKFPED",43,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFPED",44,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFPED",45,0)
 Q
"RTN","PXKFPED",46,0)
ADD ;Add an entry to the file
"RTN","PXKFPED",47,0)
 Q
"RTN","PXKFPED",48,0)
0 ;;1,2,3 * 0+1 * 0
"RTN","PXKFPED",49,0)
 ;;.01////^S X=$G(
"RTN","PXKFPED",50,0)
 ;;.02////^S X=$G(
"RTN","PXKFPED",51,0)
 ;;.03////^S X=$G(
"RTN","PXKFPED",52,0)
 ;;
"RTN","PXKFPED",53,0)
 ;;
"RTN","PXKFPED",54,0)
 ;;.06///^S X=$G(
"RTN","PXKFPED",55,0)
12 ;;
"RTN","PXKFPED",56,0)
 ;;1201///^S X=$G(
"RTN","PXKFPED",57,0)
 ;;1202////^S X=$G(
"RTN","PXKFPED",58,0)
 ;;
"RTN","PXKFPED",59,0)
 ;;1204////^S X=$G(
"RTN","PXKFPED",60,0)
 ;;
"RTN","PXKFPED",61,0)
 ;;
"RTN","PXKFPED",62,0)
220 ;;
"RTN","PXKFPED",63,0)
 ;;220////^S X=$G(
"RTN","PXKFPED",64,0)
 ;;221////^S X=$G(
"RTN","PXKFPED",65,0)
801 ;;
"RTN","PXKFPED",66,0)
 ;;80101///^S X=1;
"RTN","PXKFPED",67,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFPED",68,0)
811 ;;
"RTN","PXKFPED",69,0)
 ;;81101///^S X=$G(
"RTN","PXKFPED",70,0)
812 ;;
"RTN","PXKFPED",71,0)
 ;;81201///^S X=$G(
"RTN","PXKFPED",72,0)
 ;;81202////^S X=$G(
"RTN","PXKFPED",73,0)
 ;;81203////^S X=$G(
"RTN","PXKFPED",74,0)
SPEC ;
"RTN","PXKFPED",75,0)
 Q
"RTN","PXKFSC")
0^25^B1969432
"RTN","PXKFSC",1,0)
PXKFSC ;SLC/PKR - Fields for V STANDARDS CODE file ;08/19/2016
"RTN","PXKFSC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXKFSC",3,0)
 ;Based on PXKFPOV
"RTN","PXKFSC",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFSC",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFSC",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFSC",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFSC",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFSC",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFSC",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFSC",11,0)
 ;    neither added or edited.
"RTN","PXKFSC",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFSC",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFSC",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFSC",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFSC",16,0)
 ;
"RTN","PXKFSC",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFSC",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFSC",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFSC",20,0)
 ;
"RTN","PXKFSC",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFSC",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFSC",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFSC",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFSC",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFSC",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFSC",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFSC",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFSC",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFSC",30,0)
 ;the information in $P 2.
"RTN","PXKFSC",31,0)
 ;
"RTN","PXKFSC",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFSC",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFSC",34,0)
GLOBAL ;;^AUPNVSC
"RTN","PXKFSC",35,0)
 ;
"RTN","PXKFSC",36,0)
EN1 ;
"RTN","PXKFSC",37,0)
 S PXKER=""
"RTN","PXKFSC",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2) Q
"RTN","PXKFSC",39,0)
EN2 ;
"RTN","PXKFSC",40,0)
 S PXKFD=""
"RTN","PXKFSC",41,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFSC",42,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFSC",43,0)
 Q
"RTN","PXKFSC",44,0)
ADD ;Add an entry to the file
"RTN","PXKFSC",45,0)
 Q
"RTN","PXKFSC",46,0)
0 ;;1,2,3,5 * 0+1,0+3,0+5 * 1
"RTN","PXKFSC",47,0)
 ;;.01////^S X=$G(
"RTN","PXKFSC",48,0)
 ;;.02////^S X=$G(
"RTN","PXKFSC",49,0)
 ;;.03////^S X=$G(
"RTN","PXKFSC",50,0)
 ;;
"RTN","PXKFSC",51,0)
 ;;.05///^S X=$G(
"RTN","PXKFSC",52,0)
 ;;.06///^S X=$G(
"RTN","PXKFSC",53,0)
12 ;;
"RTN","PXKFSC",54,0)
 ;;1201////^S X=$G(
"RTN","PXKFSC",55,0)
 ;;1202////^S X=$G(
"RTN","PXKFSC",56,0)
 ;;
"RTN","PXKFSC",57,0)
 ;;1204////^S X=$G(
"RTN","PXKFSC",58,0)
220 ;;
"RTN","PXKFSC",59,0)
 ;;220////^S X=$G(
"RTN","PXKFSC",60,0)
 ;;221////^S X=$G(
"RTN","PXKFSC",61,0)
801 ;;
"RTN","PXKFSC",62,0)
 ;;80101///^S X=1;
"RTN","PXKFSC",63,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFSC",64,0)
811 ;;
"RTN","PXKFSC",65,0)
 ;;81101///^S X=$G(
"RTN","PXKFSC",66,0)
812 ;;
"RTN","PXKFSC",67,0)
 ;;81201///^S X=$G(
"RTN","PXKFSC",68,0)
 ;;81202////^S X=$G(
"RTN","PXKFSC",69,0)
 ;;81203////^S X=$G(
"RTN","PXKFSC",70,0)
SPEC ;
"RTN","PXKFSC",71,0)
 Q
"RTN","PXKFXAM")
0^30^B1932215
"RTN","PXKFXAM",1,0)
PXKFXAM ;ISL/JVS - Fields for V EXAM file ;08/31/2016
"RTN","PXKFXAM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,211**;Aug 12, 1996;Build 84
"RTN","PXKFXAM",3,0)
 ;
"RTN","PXKFXAM",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFXAM",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFXAM",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFXAM",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFXAM",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFXAM",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFXAM",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFXAM",11,0)
 ;    neither added or edited.
"RTN","PXKFXAM",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFXAM",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFXAM",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFXAM",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFXAM",16,0)
 ;
"RTN","PXKFXAM",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFXAM",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFXAM",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFXAM",20,0)
 ;
"RTN","PXKFXAM",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFXAM",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFXAM",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFXAM",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFXAM",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFXAM",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFXAM",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFXAM",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFXAM",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFXAM",30,0)
 ;the information in $P 2.
"RTN","PXKFXAM",31,0)
 ;
"RTN","PXKFXAM",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFXAM",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFXAM",34,0)
GLOBAL ;;^AUPNVXAM
"RTN","PXKFXAM",35,0)
 ;
"RTN","PXKFXAM",36,0)
EN1 ;
"RTN","PXKFXAM",37,0)
 S PXKER=""
"RTN","PXKFXAM",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFXAM",39,0)
 Q
"RTN","PXKFXAM",40,0)
EN2 ;
"RTN","PXKFXAM",41,0)
 S PXKFD=""
"RTN","PXKFXAM",42,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFXAM",43,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFXAM",44,0)
 Q
"RTN","PXKFXAM",45,0)
ADD ;Add an entry to the file
"RTN","PXKFXAM",46,0)
 Q
"RTN","PXKFXAM",47,0)
0 ;;1,2,3 * 0+1,0+2,0+3 * 1
"RTN","PXKFXAM",48,0)
 ;;.01////^S X=$G(
"RTN","PXKFXAM",49,0)
 ;;.02////^S X=$G(
"RTN","PXKFXAM",50,0)
 ;;.03////^S X=$G(
"RTN","PXKFXAM",51,0)
 ;;.04///^S X=$G(
"RTN","PXKFXAM",52,0)
12 ;;
"RTN","PXKFXAM",53,0)
 ;;1201////^S X=$G(
"RTN","PXKFXAM",54,0)
 ;;1202////^S X=$G(
"RTN","PXKFXAM",55,0)
 ;;
"RTN","PXKFXAM",56,0)
 ;;1204////^S X=$G(
"RTN","PXKFXAM",57,0)
 ;;
"RTN","PXKFXAM",58,0)
 ;;
"RTN","PXKFXAM",59,0)
220 ;;
"RTN","PXKFXAM",60,0)
 ;;220////^S X=$G(
"RTN","PXKFXAM",61,0)
 ;;221////^S X=$G(
"RTN","PXKFXAM",62,0)
801 ;;
"RTN","PXKFXAM",63,0)
 ;;80101///^S X=1;
"RTN","PXKFXAM",64,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFXAM",65,0)
811 ;;
"RTN","PXKFXAM",66,0)
 ;;81101///^S X=$G(
"RTN","PXKFXAM",67,0)
812 ;;
"RTN","PXKFXAM",68,0)
 ;;81201///^S X=$G(
"RTN","PXKFXAM",69,0)
 ;;81202////^S X=$G(
"RTN","PXKFXAM",70,0)
 ;;81203////^S X=$G(
"RTN","PXKFXAM",71,0)
SPEC ;
"RTN","PXKFXAM",72,0)
 Q
"RTN","PXKWSRCH")
0^16^B42503838
"RTN","PXKWSRCH",1,0)
PXKWSRCH ;SLC/PKR - Keyword search routines. ;02/24/2016
"RTN","PXKWSRCH",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXKWSRCH",3,0)
 ;
"RTN","PXKWSRCH",4,0)
 ;=====================================
"RTN","PXKWSRCH",5,0)
CASESEN() ;Ask the user if the search is case sensitive.
"RTN","PXKWSRCH",6,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","PXKWSRCH",7,0)
 S DIR(0)="YA"
"RTN","PXKWSRCH",8,0)
 S DIR("A")="Should the search be case-sensitive? "
"RTN","PXKWSRCH",9,0)
 S DIR("B")="N"
"RTN","PXKWSRCH",10,0)
 D ^DIR
"RTN","PXKWSRCH",11,0)
 I $D(DIRUT) S Y="^"
"RTN","PXKWSRCH",12,0)
 Q Y
"RTN","PXKWSRCH",13,0)
 ;
"RTN","PXKWSRCH",14,0)
 ;=====================================
"RTN","PXKWSRCH",15,0)
DISPLAY(CASESEN,NKW,KEYWORD) ;Display the search results.
"RTN","PXKWSRCH",16,0)
 N ENAME,FIELD,FILENUM,FLABEL,FNUM,GNAME,GNAMELST,IEN,IENS,IND
"RTN","PXKWSRCH",17,0)
 N LABEL,LN,NIEN,NL,NM,TEMP,TEXT
"RTN","PXKWSRCH",18,0)
 S NL=0
"RTN","PXKWSRCH",19,0)
 S NL=NL+1,TEXT(NL)="The search was for the following keywords:"
"RTN","PXKWSRCH",20,0)
 F IND=1:1:NKW S NL=NL+1,TEXT(NL)=" "_KEYWORD(IND)
"RTN","PXKWSRCH",21,0)
 S FILENUM=""
"RTN","PXKWSRCH",22,0)
 F  S FILENUM=$O(^TMP($J,"KWS",FILENUM)) Q:FILENUM=""  D
"RTN","PXKWSRCH",23,0)
 . S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXKWSRCH",24,0)
 . S GNAMELST(GNAME,FILENUM)=""
"RTN","PXKWSRCH",25,0)
 S GNAME=""
"RTN","PXKWSRCH",26,0)
 F  S GNAME=$O(GNAMELST(GNAME)) Q:GNAME=""  D
"RTN","PXKWSRCH",27,0)
 . I NL>1 S NL=NL+1,TEXT(NL)=""
"RTN","PXKWSRCH",28,0)
 . S NL=NL+1,TEXT(NL)="File: "_GNAME
"RTN","PXKWSRCH",29,0)
 . S FILENUM=$O(GNAMELST(GNAME,FILENUM))
"RTN","PXKWSRCH",30,0)
 . S IEN="",NIEN=0
"RTN","PXKWSRCH",31,0)
 . F  S IEN=$O(^TMP($J,"KWS",FILENUM,IEN)) Q:IEN=""  D
"RTN","PXKWSRCH",32,0)
 .. S ENAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXKWSRCH",33,0)
 .. S NIEN=NIEN+1
"RTN","PXKWSRCH",34,0)
 .. I NIEN>1 S NL=NL+1,TEXT(NL)=""
"RTN","PXKWSRCH",35,0)
 .. S NM=^TMP($J,"KWS",FILENUM,IEN)
"RTN","PXKWSRCH",36,0)
 .. S NL=NL+1,TEXT(NL)=" Entry "_ENAME_" (IEN="_IEN_") contains "_NM_" match"_$S(NM>1:"es.",1:".")
"RTN","PXKWSRCH",37,0)
 .. S FNUM=""
"RTN","PXKWSRCH",38,0)
 .. F  S FNUM=$O(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM)) Q:FNUM=""  D
"RTN","PXKWSRCH",39,0)
 ... S IENS=""
"RTN","PXKWSRCH",40,0)
 ... F  S IENS=$O(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS)) Q:IENS=""  D
"RTN","PXKWSRCH",41,0)
 .... S FIELD=""
"RTN","PXKWSRCH",42,0)
 .... F  S FIELD=$O(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXKWSRCH",43,0)
 ..... I '$D(FLABEL(FNUM,FIELD)) S FLABEL(FNUM,FIELD)=$$FLABEL(FNUM,FIELD)
"RTN","PXKWSRCH",44,0)
 ..... S NL=NL+1,TEXT(NL)="  Found in field "_FLABEL(FNUM,FIELD)_" the text is:"
"RTN","PXKWSRCH",45,0)
 ..... S TEMP=$G(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD))
"RTN","PXKWSRCH",46,0)
 ..... I TEMP'="" S NL=NL+1,TEXT(NL)="   "_$$HLITE(TEMP,CASESEN)
"RTN","PXKWSRCH",47,0)
 ..... S LN=0
"RTN","PXKWSRCH",48,0)
 ..... F  S LN=$O(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD,LN)) Q:LN=""  D
"RTN","PXKWSRCH",49,0)
 ...... S TEMP=$G(^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD,LN))
"RTN","PXKWSRCH",50,0)
 ...... I TEMP'="" S NL=NL+1,TEXT(NL)="   "_$$HLITE(TEMP,CASESEN)
"RTN","PXKWSRCH",51,0)
 I NL=(NKW+1) S NL=NL+1,TEXT(NL)="No matches were found."
"RTN","PXKWSRCH",52,0)
 D BROWSE^DDBR("TEXT","ANR","Text/Keyword Search")
"RTN","PXKWSRCH",53,0)
 K ^TMP($J,"KWS"),^TMP($J,"KWSIEN")
"RTN","PXKWSRCH",54,0)
 Q
"RTN","PXKWSRCH",55,0)
 ;
"RTN","PXKWSRCH",56,0)
 ;=====================================
"RTN","PXKWSRCH",57,0)
FLABEL(FNUM,FIELD) ;Return the label for a field.
"RTN","PXKWSRCH",58,0)
 N DATA
"RTN","PXKWSRCH",59,0)
 D FIELD^DID(FNUM,FIELD,"N","LABEL","DATA")
"RTN","PXKWSRCH",60,0)
 Q DATA("LABEL")
"RTN","PXKWSRCH",61,0)
 ;
"RTN","PXKWSRCH",62,0)
 ;=====================================
"RTN","PXKWSRCH",63,0)
GETFLIST(NSFILE,SFILE) ;Get the list of files to search.
"RTN","PXKWSRCH",64,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,FLIST,IND,LNUM,NFILES,X,Y
"RTN","PXKWSRCH",65,0)
 S FLIST(1)="1. ^Education Topics^9999999.09^AUTTEDT"
"RTN","PXKWSRCH",66,0)
 S FLIST(2)="2. ^Exam^9999999.15^AUTTEXAM"
"RTN","PXKWSRCH",67,0)
 S FLIST(3)="3. ^Health Factors^9999999.64^AUTTHF"
"RTN","PXKWSRCH",68,0)
 S FLIST(4)="4. ^Immunizations^9999999.14^AUTTIMM"
"RTN","PXKWSRCH",69,0)
 S FLIST(5)="5. ^Skin Test^9999999.28^AUTTSK"
"RTN","PXKWSRCH",70,0)
 S DIR(0)="LA^1:5"
"RTN","PXKWSRCH",71,0)
 S DIR("A")="Select the files to search: "
"RTN","PXKWSRCH",72,0)
 F IND=1:1:5 S DIR("A",IND)=$P(FLIST(IND),U,1)_$P(FLIST(IND),U,2)
"RTN","PXKWSRCH",73,0)
 D EN^DDIOL("Select from the following list of files:")
"RTN","PXKWSRCH",74,0)
 D ^DIR
"RTN","PXKWSRCH",75,0)
 I Y["^"!$G(DIROUT) S NSFILE=0 Q
"RTN","PXKWSRCH",76,0)
 S NSFILE=$L(Y,",")-1
"RTN","PXKWSRCH",77,0)
 F IND=1:1:NSFILE D
"RTN","PXKWSRCH",78,0)
 . S LNUM=$P(Y,",",IND)
"RTN","PXKWSRCH",79,0)
 . S SFILE(IND)=$P(FLIST(LNUM),U,2,4)
"RTN","PXKWSRCH",80,0)
 Q
"RTN","PXKWSRCH",81,0)
 ;
"RTN","PXKWSRCH",82,0)
 ;=====================================
"RTN","PXKWSRCH",83,0)
GETKWS(CASESEN,NKW,KEYWORD) ;Have the user input the key words.
"RTN","PXKWSRCH",84,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","PXKWSRCH",85,0)
 S NKW=0
"RTN","PXKWSRCH",86,0)
 D EN^DDIOL("Input the keywords, one per line. Enter NULL or '^' to exit.")
"RTN","PXKWSRCH",87,0)
 S DIR(0)="FAOU^2:45"
"RTN","PXKWSRCH",88,0)
 S DIR("A")="Input a keyword: "
"RTN","PXKWSRCH",89,0)
 S DONE=0
"RTN","PXKWSRCH",90,0)
 F  Q:DONE  D
"RTN","PXKWSRCH",91,0)
 . D ^DIR
"RTN","PXKWSRCH",92,0)
 . I (Y="^")!(Y="")!$G(DIROUT) S DONE=1 Q
"RTN","PXKWSRCH",93,0)
 . S NKW=NKW+1
"RTN","PXKWSRCH",94,0)
 . S KEYWORD(NKW)=$S(CASESEN:Y,1:$$UP^XLFSTR(Y))
"RTN","PXKWSRCH",95,0)
 Q
"RTN","PXKWSRCH",96,0)
 ;
"RTN","PXKWSRCH",97,0)
 ;=====================================
"RTN","PXKWSRCH",98,0)
GSEARCH ;Entry point for general selection of global to search.
"RTN","PXKWSRCH",99,0)
 N CASESEN,DIC,FILENUM,FNAME,GBL,IEN,KEYWORD,NKW,X,Y
"RTN","PXKWSRCH",100,0)
 ;Prompt the user for the file that want to search.
"RTN","PXKWSRCH",101,0)
 S DIC=1,DIC(0)="AEMNV"
"RTN","PXKWSRCH",102,0)
 S DIC("A")="Select a file to search: "
"RTN","PXKWSRCH",103,0)
 D ^DIC
"RTN","PXKWSRCH",104,0)
 I Y=-1 Q
"RTN","PXKWSRCH",105,0)
 S FILENUM=$P(Y,U,1)
"RTN","PXKWSRCH",106,0)
 S FNAME=$P(Y,U,2)
"RTN","PXKWSRCH",107,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXKWSRCH",108,0)
 S GBL=$$CREF^DILF(GBL)
"RTN","PXKWSRCH",109,0)
 ;Prompt for case-sensitive.
"RTN","PXKWSRCH",110,0)
 S CASESEN=$$CASESEN
"RTN","PXKWSRCH",111,0)
 I CASESEN["^" Q
"RTN","PXKWSRCH",112,0)
 ;Get the list of keywords.
"RTN","PXKWSRCH",113,0)
 D GETKWS(CASESEN,.NKW,.KEYWORD)
"RTN","PXKWSRCH",114,0)
 I NKW=0 Q
"RTN","PXKWSRCH",115,0)
 K ^TMP($J,"KWS"),^TMP($J,"KWSIEN")
"RTN","PXKWSRCH",116,0)
 D EN^DDIOL("Searching "_FNAME_" ...")
"RTN","PXKWSRCH",117,0)
 S IEN=0
"RTN","PXKWSRCH",118,0)
 F  S IEN=+$O(@GBL@(IEN)) Q:IEN=0  D SRCHTEXT(FILENUM,IEN,CASESEN,NKW,.KEYWORD)
"RTN","PXKWSRCH",119,0)
 D DISPLAY(CASESEN,NKW,.KEYWORD)
"RTN","PXKWSRCH",120,0)
 Q
"RTN","PXKWSRCH",121,0)
 ;
"RTN","PXKWSRCH",122,0)
 ;=====================================
"RTN","PXKWSRCH",123,0)
HLITE(TEXT,CASESEN) ;Mark the keyword so it will be highlighted in the Browser.
"RTN","PXKWSRCH",124,0)
 N FIND,KEYWORD,HTEXT,LKW,MKEY,MTEXT,START,STOP,TAG,TAGBEG,TAGEND,TTEXT
"RTN","PXKWSRCH",125,0)
 S TTEXT=$P(TEXT,U,1)
"RTN","PXKWSRCH",126,0)
 S MTEXT=$S(CASESEN:TTEXT,1:$$UP^XLFSTR(TTEXT))
"RTN","PXKWSRCH",127,0)
 S KEYWORD=$P(TEXT,U,2)
"RTN","PXKWSRCH",128,0)
 S MKEY=$S(CASESEN:KEYWORD,1:$$UP^XLFSTR(KEYWORD))
"RTN","PXKWSRCH",129,0)
 S LKW=$L(KEYWORD)
"RTN","PXKWSRCH",130,0)
 S FIND=1,HTEXT="",START=1
"RTN","PXKWSRCH",131,0)
 F  Q:FIND=0  D
"RTN","PXKWSRCH",132,0)
 . S FIND=$F(MTEXT,MKEY,FIND)
"RTN","PXKWSRCH",133,0)
 . I FIND=0 Q
"RTN","PXKWSRCH",134,0)
 . S TAGBEG=FIND-LKW
"RTN","PXKWSRCH",135,0)
 . S TAGEND=FIND-1
"RTN","PXKWSRCH",136,0)
 . S STOP=TAGEND-LKW
"RTN","PXKWSRCH",137,0)
 . S TAG="$.%^"_$E(TTEXT,TAGBEG,TAGEND)_"$.%"
"RTN","PXKWSRCH",138,0)
 . S HTEXT=HTEXT_$E(TTEXT,START,STOP)_TAG
"RTN","PXKWSRCH",139,0)
 . S START=FIND
"RTN","PXKWSRCH",140,0)
 S HTEXT=HTEXT_$E(TTEXT,START,$L(TTEXT))
"RTN","PXKWSRCH",141,0)
 Q HTEXT
"RTN","PXKWSRCH",142,0)
 ;
"RTN","PXKWSRCH",143,0)
 ;=====================================
"RTN","PXKWSRCH",144,0)
SEARCH ;Perform the keyword search.
"RTN","PXKWSRCH",145,0)
 N CASESEN,FILENUM,FNAME,IEN,IND,KEYWORD,NKW,NSFILE,SFILE
"RTN","PXKWSRCH",146,0)
 D EN^DDIOL("Search PCE files for keywords.")
"RTN","PXKWSRCH",147,0)
 ;Get the list of files to search.
"RTN","PXKWSRCH",148,0)
 D GETFLIST(.NSFILE,.SFILE)
"RTN","PXKWSRCH",149,0)
 I NSFILE=0 Q
"RTN","PXKWSRCH",150,0)
 ;Prompt for case-sensitive.
"RTN","PXKWSRCH",151,0)
 S CASESEN=$$CASESEN
"RTN","PXKWSRCH",152,0)
 I CASESEN["^" Q
"RTN","PXKWSRCH",153,0)
 ;Get the list of keywords.
"RTN","PXKWSRCH",154,0)
 D GETKWS(CASESEN,.NKW,.KEYWORD)
"RTN","PXKWSRCH",155,0)
 I NKW=0 Q
"RTN","PXKWSRCH",156,0)
 K ^TMP($J,"KWS"),^TMP($J,"KWSIEN")
"RTN","PXKWSRCH",157,0)
 F IND=1:1:NSFILE D
"RTN","PXKWSRCH",158,0)
 . S FNAME=$P(SFILE(IND),U,1)
"RTN","PXKWSRCH",159,0)
 . S FILENUM=$P(SFILE(IND),U,2)
"RTN","PXKWSRCH",160,0)
 . S GBL="^"_$P(SFILE(IND),U,3)
"RTN","PXKWSRCH",161,0)
 . D EN^DDIOL("Searching "_FNAME_" ...")
"RTN","PXKWSRCH",162,0)
 . S IEN=0
"RTN","PXKWSRCH",163,0)
 . F  S IEN=+$O(@GBL@(IEN)) Q:IEN=0  D SRCHTEXT(FILENUM,IEN,CASESEN,NKW,.KEYWORD)
"RTN","PXKWSRCH",164,0)
 D DISPLAY(CASESEN,NKW,.KEYWORD)
"RTN","PXKWSRCH",165,0)
 Q
"RTN","PXKWSRCH",166,0)
 ;
"RTN","PXKWSRCH",167,0)
 ;=====================================
"RTN","PXKWSRCH",168,0)
SRCHTEXT(FILENUM,IEN,CASESEN,NKW,KEYWORD) ;Search the text of an entry.
"RTN","PXKWSRCH",169,0)
 N DIQOUT,IENS,IND,FIELD,FNUM,LABEL,LN,MSG,MTEMP,NM,TEMP
"RTN","PXKWSRCH",170,0)
 D GETS^DIQ(FILENUM,IEN,"**","N","DIQOUT","MSG")
"RTN","PXKWSRCH",171,0)
 S FNUM="",NM=0
"RTN","PXKWSRCH",172,0)
 F  S FNUM=$O(DIQOUT(FNUM)) Q:FNUM=""  D
"RTN","PXKWSRCH",173,0)
 . S IENS=""
"RTN","PXKWSRCH",174,0)
 . F  S IENS=$O(DIQOUT(FNUM,IENS)) Q:IENS=""  D
"RTN","PXKWSRCH",175,0)
 .. S FIELD=""
"RTN","PXKWSRCH",176,0)
 .. F  S FIELD=$O(DIQOUT(FNUM,IENS,FIELD)) Q:FIELD=""  D
"RTN","PXKWSRCH",177,0)
 ... S TEMP=DIQOUT(FNUM,IENS,FIELD)
"RTN","PXKWSRCH",178,0)
 ... S MTEMP=$S(CASESEN:TEMP,1:$$UP^XLFSTR(TEMP))
"RTN","PXKWSRCH",179,0)
 ... F IND=1:1:NKW I MTEMP[KEYWORD(IND) D
"RTN","PXKWSRCH",180,0)
 .... S ^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD)=TEMP_U_KEYWORD(IND)
"RTN","PXKWSRCH",181,0)
 .... S NM=NM+1
"RTN","PXKWSRCH",182,0)
 ... S LN=""
"RTN","PXKWSRCH",183,0)
 ... F  S LN=$O(DIQOUT(FNUM,IENS,FIELD,LN)) Q:LN=""  D
"RTN","PXKWSRCH",184,0)
 .... ;S TEMP=DIQOUT(FNUM,IENS,FIELD)
"RTN","PXKWSRCH",185,0)
 .... S TEMP=DIQOUT(FNUM,IENS,FIELD,LN)
"RTN","PXKWSRCH",186,0)
 .... S MTEMP=$S(CASESEN:TEMP,1:$$UP^XLFSTR(TEMP))
"RTN","PXKWSRCH",187,0)
 .... F IND=1:1:NKW I MTEMP[KEYWORD(IND) D
"RTN","PXKWSRCH",188,0)
 ..... S ^TMP($J,"KWSIEN",FILENUM,IEN,FNUM,IENS,FIELD,LN)=TEMP_U_KEYWORD(IND)
"RTN","PXKWSRCH",189,0)
 ..... S NM=NM+1
"RTN","PXKWSRCH",190,0)
 I NM>0 S ^TMP($J,"KWS",FILENUM,IEN)=NM
"RTN","PXKWSRCH",191,0)
 Q
"RTN","PXKWSRCH",192,0)
 ;
"RTN","PXLEX")
0^5^B9267006
"RTN","PXLEX",1,0)
PXLEX ;SLC/PKR - Routines for PCE Lexicon functionality. ;09/22/2016
"RTN","PXLEX",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXLEX",3,0)
 ;
"RTN","PXLEX",4,0)
 ;==========================================
"RTN","PXLEX",5,0)
CODESYSL(CODESYSL) ;Return the list of Lexicon coding systems supported
"RTN","PXLEX",6,0)
 ;by PCE.
"RTN","PXLEX",7,0)
 S CODESYSL("10D")="",CODESYSL("10P")=""
"RTN","PXLEX",8,0)
 S CODESYSL("CPC")="",CODESYSL("CPT")=""
"RTN","PXLEX",9,0)
 S CODESYSL("ICD")="",CODESYSL("ICP")=""
"RTN","PXLEX",10,0)
 S CODESYSL("SCT")=""
"RTN","PXLEX",11,0)
 Q
"RTN","PXLEX",12,0)
 ;
"RTN","PXLEX",13,0)
 ;=========================================
"RTN","PXLEX",14,0)
CSHELP ;Display help, used as executable help for coding systems fields.
"RTN","PXLEX",15,0)
 N DIR0,TEXT
"RTN","PXLEX",16,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXLEX",17,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXLEX",18,0)
 D CSHTEXT(.TEXT)
"RTN","PXLEX",19,0)
 D BROWSE^DDBR("TEXT","NR","Supported PCE Coding Systems Help")
"RTN","PXLEX",20,0)
 I $D(DDS) D REFRESH^DDSUTL S DY=IOSL-7,DX=0 X IOXY S $Y=DY,$X=DX
"RTN","PXLEX",21,0)
 Q
"RTN","PXLEX",22,0)
 ;
"RTN","PXLEX",23,0)
 ;=========================================
"RTN","PXLEX",24,0)
CSHTEXT(TEXT) ;Supported coding systems help text.
"RTN","PXLEX",25,0)
 N CODESYS,CODESYSL,NL,TEMP
"RTN","PXLEX",26,0)
 S TEXT(1)="The following coding systems are supported in PCE:"
"RTN","PXLEX",27,0)
 S TEXT(2)=""
"RTN","PXLEX",28,0)
 D CODESYSL(.CODESYSL)
"RTN","PXLEX",29,0)
 S CODESYS="",NL=2
"RTN","PXLEX",30,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXLEX",31,0)
 .;DBIA #5679
"RTN","PXLEX",32,0)
 . S TEMP=$$CSYS^LEXU(CODESYS)
"RTN","PXLEX",33,0)
 . S NL=NL+1,TEXT(NL)=CODESYS_" = "_$P(TEMP,U,4)_"; "_$P(TEMP,U,5)
"RTN","PXLEX",34,0)
 Q
"RTN","PXLEX",35,0)
 ;
"RTN","PXLEX",36,0)
 ;==========================================
"RTN","PXLEX",37,0)
ISCACT(CODESYS,CODE,DOI) ;Return 1 if the code was active on the date
"RTN","PXLEX",38,0)
 ;of interest DOI.
"RTN","PXLEX",39,0)
 I DOI>DT Q -1
"RTN","PXLEX",40,0)
 N HDATA,NEVENTS,SUB
"RTN","PXLEX",41,0)
 ;DBIA #5679
"RTN","PXLEX",42,0)
 S NEVENTS=$$HIST^LEXU(CODE,CODESYS,.HDATA)
"RTN","PXLEX",43,0)
 I $P(NEVENTS,U,1)=-1 Q -1
"RTN","PXLEX",44,0)
 S DOI=$$FMADD^XLFDT(DOI,0,0,0,1)
"RTN","PXLEX",45,0)
 S DATE=$O(HDATA(DOI),-1)
"RTN","PXLEX",46,0)
 I DATE=0 Q 0
"RTN","PXLEX",47,0)
 S SUB=$O(HDATA(DATE,""))
"RTN","PXLEX",48,0)
 ;If the second subscript is 0 then the code was inactived.
"RTN","PXLEX",49,0)
 Q $S(SUB=0:0,1:1)
"RTN","PXLEX",50,0)
 ;
"RTN","PXLEX",51,0)
 ;==========================================
"RTN","PXLEX",52,0)
SCCSL(CODESYSL) ;Return the list of coding systems supported in
"RTN","PXLEX",53,0)
 ;V STANDARD CODES.
"RTN","PXLEX",54,0)
 S CODESYSL("SCT")=""
"RTN","PXLEX",55,0)
 S CODESYSL(0)=1
"RTN","PXLEX",56,0)
 Q
"RTN","PXLEX",57,0)
 ;
"RTN","PXLEX",58,0)
 ;==========================================
"RTN","PXLEX",59,0)
VCODE(CODESYS,CODE) ;Check that a code in the specified coding system is valid.
"RTN","PXLEX",60,0)
 N DATA,IEN,RESULT,VALID
"RTN","PXLEX",61,0)
 S VALID=0
"RTN","PXLEX",62,0)
 ;DBIA #5679
"RTN","PXLEX",63,0)
 S RESULT=$$HIST^LEXU(CODE,CODESYS,.DATA)
"RTN","PXLEX",64,0)
 I $P(RESULT,U,1)'=-1 Q 1
"RTN","PXLEX",65,0)
 I (CODESYS="CPC")!(CODESYS="CPT") D
"RTN","PXLEX",66,0)
 .;DBIA #1995
"RTN","PXLEX",67,0)
 . S RESULT=$$CPT^ICPTCOD(CODE)
"RTN","PXLEX",68,0)
 . S IEN=$P(RESULT,U,1)
"RTN","PXLEX",69,0)
 . I IEN=-1 S VALID=0 Q
"RTN","PXLEX",70,0)
 . I IEN=CODE S VALID=0 Q
"RTN","PXLEX",71,0)
 . I CODESYS="CPC",$P(RESULT,U,5)="H" S VALID=1 Q
"RTN","PXLEX",72,0)
 . I CODESYS="CPT",$P(RESULT,U,5)="C" S VALID=1 Q
"RTN","PXLEX",73,0)
 I VALID=1 Q VALID
"RTN","PXLEX",74,0)
 ;DBIA #3990
"RTN","PXLEX",75,0)
 I CODESYS="ICD" S RESULT=$$ICDDX^ICDCODE(CODE,DT,"",0)
"RTN","PXLEX",76,0)
 I CODESYS="ICP" S RESULT=$$ICDOP^ICDCODE(CODE,DT,"",0)
"RTN","PXLEX",77,0)
 S IEN=$P(RESULT,U,1)
"RTN","PXLEX",78,0)
 I IEN=-1 S VALID=0
"RTN","PXLEX",79,0)
 I CODE=IEN S VALID=0
"RTN","PXLEX",80,0)
 Q VALID
"RTN","PXLEX",81,0)
 ;
"RTN","PXLEX",82,0)
 ;==========================================
"RTN","PXLEX",83,0)
VCODESYS(CODESYS) ;Make sure the coding system is supported.
"RTN","PXLEX",84,0)
 N CODESYSL,RESULT
"RTN","PXLEX",85,0)
 S CODESYS=$$UP^XLFSTR(CODESYS)
"RTN","PXLEX",86,0)
 ;ICR #5679
"RTN","PXLEX",87,0)
 S RESULT=$$CSYS^LEXU(CODESYS)
"RTN","PXLEX",88,0)
 I RESULT="-1^Coding System not found" D  Q 0
"RTN","PXLEX",89,0)
 . D EN^DDIOL("The "_CODESYS_" coding system is not supported by the Lexicon.")
"RTN","PXLEX",90,0)
 . H 3
"RTN","PXLEX",91,0)
 D CODESYSL^PXLEX(.CODESYSL)
"RTN","PXLEX",92,0)
 I '$D(CODESYSL(CODESYS)) D  Q 0
"RTN","PXLEX",93,0)
 . D EN^DDIOL(CODESYS_" is not a valid coding system for use with PCE.")
"RTN","PXLEX",94,0)
 . H 3
"RTN","PXLEX",95,0)
 Q 1
"RTN","PXLEX",96,0)
 ;
"RTN","PXLEXS")
0^34^B107791393
"RTN","PXLEXS",1,0)
PXLEXS ;SLC/PKR - List Manager routines for Lexicon code selection. ;01/20/2017
"RTN","PXLEXS",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXLEXS",3,0)
 ;
"RTN","PXLEXS",4,0)
 ;=========================================
"RTN","PXLEXS",5,0)
ADDSEL(ENUM) ;Add entry ENUM to the selected list and highlight it.
"RTN","PXLEXS",6,0)
 N CODE
"RTN","PXLEXS",7,0)
 S CODE=^TMP("PXLEXL",$J,"CODE",ENUM)
"RTN","PXLEXS",8,0)
 S ^TMP("PXLEXL",$J,"SELECTED",ENUM)=CODE
"RTN","PXLEXS",9,0)
 D HLITE(ENUM,1)
"RTN","PXLEXS",10,0)
 Q
"RTN","PXLEXS",11,0)
 ;
"RTN","PXLEXS",12,0)
 ;=========================================
"RTN","PXLEXS",13,0)
BLDLIST ;Build the Lexicon list.
"RTN","PXLEXS",14,0)
 N ACTIVE,CODE,CODESYS,CODESYSP,DESC,ENUM,FMTSTR,IND,JND
"RTN","PXLEXS",15,0)
 N NCODES,NL,NLINES,NSEL,NUID,NUM,OUTPUT,START,TAXIEN,TERM,TEXT,UID
"RTN","PXLEXS",16,0)
 S FMTSTR=$$LMFMTSTR^PXRMTEXT(.VALMDDF,"RLLLL")
"RTN","PXLEXS",17,0)
 ;List Manager selection. 
"RTN","PXLEXS",18,0)
 ;Clear the display.
"RTN","PXLEXS",19,0)
 D KILL^VALM10
"RTN","PXLEXS",20,0)
 K ^TMP("PXLEXL",$J)
"RTN","PXLEXS",21,0)
 S CODESYS=^TMP("PXLEXT",$J,"CODING SYSTEM")
"RTN","PXLEXS",22,0)
 S TERM=^TMP("PXLEXT",$J,"SEARCH TERM")
"RTN","PXLEXS",23,0)
 S EVENTDT=^TMP("PXLEXT",$J,"EVENT D/T")
"RTN","PXLEXS",24,0)
 S ACTIVE=^TMP("PXLEXT",$J,"ACTIVE")
"RTN","PXLEXS",25,0)
 ;Clear the display.
"RTN","PXLEXS",26,0)
 D KILL^VALM10
"RTN","PXLEXS",27,0)
 K ^TMP("PXLEXL",$J)
"RTN","PXLEXS",28,0)
 D LEXLIST(TERM,CODESYS,EVENTDT,.NCODES,.NLINES,.TEXT,ACTIVE)
"RTN","PXLEXS",29,0)
 ;Get the coding system Lexicon information for building the display.
"RTN","PXLEXS",30,0)
 ;DBIA #5679
"RTN","PXLEXS",31,0)
 S CODESYSP=$$CSYS^LEXU(CODESYS)
"RTN","PXLEXS",32,0)
 S TEXT=^TMP("PXLEXT",$J,"SEARCH TERM")
"RTN","PXLEXS",33,0)
 S TEXT=$S(($L(TEXT)'>66):TEXT,1:$E(TEXT,1,63)_"...")
"RTN","PXLEXS",34,0)
 S VALMHDR(1)="Term/Code: "_TEXT
"RTN","PXLEXS",35,0)
 S VALMHDR(2)=NCODES_" "_$P(CODESYSP,U,4)_$S(NCODES=1:" code was found",1:" codes were found")
"RTN","PXLEXS",36,0)
 ;Set these so LM shows Page 1 of 1 when there are no codes.
"RTN","PXLEXS",37,0)
 I NCODES=0 S VALMHDR(2)=VALMHDR(2)_".",^TMP("PXLEXL",$J,1,0)="",VALMCNT=1 Q
"RTN","PXLEXS",38,0)
 ;
"RTN","PXLEXS",39,0)
 S VALMCNT=0
"RTN","PXLEXS",40,0)
 F IND=1:1:NLINES D
"RTN","PXLEXS",41,0)
 . S NUM=$P(TEXT(IND),U,1),CODE=$P(TEXT(IND),U,2)
"RTN","PXLEXS",42,0)
 . I NUM'="",CODE'="" S ENUM=NUM,^TMP("PXLEXL",$J,"CODE",NUM)=CODE,START=VALMCNT+1
"RTN","PXLEXS",43,0)
 . D FORMAT(TEXT(IND),FMTSTR,.NL,.OUTPUT)
"RTN","PXLEXS",44,0)
 . F JND=1:1:NL D
"RTN","PXLEXS",45,0)
 .. S VALMCNT=VALMCNT+1,^TMP("PXLEXL",$J,VALMCNT,0)=OUTPUT(JND)
"RTN","PXLEXS",46,0)
 .. S ^TMP("PXLEXL",$J,"IDX",VALMCNT,ENUM)=""
"RTN","PXLEXS",47,0)
 . S ^TMP("PXLEXL",$J,"LINES",ENUM)=START_U_VALMCNT
"RTN","PXLEXS",48,0)
 S ^TMP("PXLEXL",$J,"NCODES")=NCODES
"RTN","PXLEXS",49,0)
 S ^TMP("PXLEXL",$J,"VALMCNT")=VALMCNT
"RTN","PXLEXS",50,0)
 Q
"RTN","PXLEXS",51,0)
 ;
"RTN","PXLEXS",52,0)
 ;=========================================
"RTN","PXLEXS",53,0)
ENTRY ;Entry code
"RTN","PXLEXS",54,0)
 D INITMPG^PXLEXS
"RTN","PXLEXS",55,0)
 D BLDLIST^PXLEXS
"RTN","PXLEXS",56,0)
 D XQORM
"RTN","PXLEXS",57,0)
 Q
"RTN","PXLEXS",58,0)
 ;
"RTN","PXLEXS",59,0)
 ;=========================================
"RTN","PXLEXS",60,0)
EXIT ;Exit code
"RTN","PXLEXS",61,0)
 M ^TMP("PXLEXT",$J,"SELECTED CODES")=^TMP("PXLEXL",$J,"SELECTED")
"RTN","PXLEXS",62,0)
 D INITMPG^PXLEXS
"RTN","PXLEXS",63,0)
 D FULL^VALM1
"RTN","PXLEXS",64,0)
 D CLEAN^VALM10
"RTN","PXLEXS",65,0)
 D KILL^VALM10
"RTN","PXLEXS",66,0)
 D CLEAR^VALM1
"RTN","PXLEXS",67,0)
 S VALMBCK="Q"
"RTN","PXLEXS",68,0)
 Q
"RTN","PXLEXS",69,0)
 ;
"RTN","PXLEXS",70,0)
 ;=========================================
"RTN","PXLEXS",71,0)
FORMAT(TEXT,FMTSTR,NL,OUTPUT) ;Format  entry number, code,
"RTN","PXLEXS",72,0)
 ;activation date, inactivation date, short text for LM display.
"RTN","PXLEXS",73,0)
 N ACTDT,INACTDT
"RTN","PXLEXS",74,0)
 S ACTDT=$P(TEXT,U,3),INACTDT=$P(TEXT,U,4)
"RTN","PXLEXS",75,0)
 S ACTDT=$$FMTE^XLFDT(ACTDT,5)
"RTN","PXLEXS",76,0)
 S INACTDT=$$FMTE^XLFDT(INACTDT,5)
"RTN","PXLEXS",77,0)
 S $P(TEXT,U,3)=ACTDT,$P(TEXT,U,4)=INACTDT
"RTN","PXLEXS",78,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXLEXS",79,0)
 Q
"RTN","PXLEXS",80,0)
 ;
"RTN","PXLEXS",81,0)
 ;=========================================
"RTN","PXLEXS",82,0)
GETCODE(CODESYS,SRCHTERM,EVENTDT,ACTIVE) ;Given a coding system and search term,
"RTN","PXLEXS",83,0)
 ;display a list of matches so the user can make a single selection.
"RTN","PXLEXS",84,0)
 N CODE,SELECTED
"RTN","PXLEXS",85,0)
 K ^TMP("PXLEXT",$J)
"RTN","PXLEXS",86,0)
 S ^TMP("PXLEXT",$J,"CODING SYSTEM")=CODESYS
"RTN","PXLEXS",87,0)
 S ^TMP("PXLEXT",$J,"SEARCH TERM")=SRCHTERM
"RTN","PXLEXS",88,0)
 S ^TMP("PXLEXT",$J,"EVENT D/T")=EVENTDT
"RTN","PXLEXS",89,0)
 S ^TMP("PXLEXT",$J,"SINGLE")=1
"RTN","PXLEXS",90,0)
 S ^TMP("PXLEXT",$J,"ACTIVE")=ACTIVE
"RTN","PXLEXS",91,0)
 D EN^VALM("PXCE STANDARD CODES SELECT")
"RTN","PXLEXS",92,0)
 S SELECTED=$O(^TMP("PXLEXT",$J,"SELECTED CODES",""))
"RTN","PXLEXS",93,0)
 S CODE=$S(SELECTED="":"",1:^TMP("PXLEXT",$J,"SELECTED CODES",SELECTED))
"RTN","PXLEXS",94,0)
 K ^TMP("PXLEXT",$J)
"RTN","PXLEXS",95,0)
 Q CODE
"RTN","PXLEXS",96,0)
 ;
"RTN","PXLEXS",97,0)
 ;=========================================
"RTN","PXLEXS",98,0)
GETCODES(CODESYS,SRCHTERM,EVENTDT,CODELIST,ACTIVE) ;Given a coding system and
"RTN","PXLEXS",99,0)
 ;a search term, display a list of matches so the user can make a
"RTN","PXLEXS",100,0)
 ;selection.
"RTN","PXLEXS",101,0)
 K ^TMP("PXLEXT",$J)
"RTN","PXLEXS",102,0)
 S ^TMP("PXLEXT",$J,"CODING SYSTEM")=CODESYS
"RTN","PXLEXS",103,0)
 S ^TMP("PXLEXT",$J,"SEARCH TERM")=SRCHTERM
"RTN","PXLEXS",104,0)
 S ^TMP("PXLEXT",$J,"EVENT D/T")=EVENTDT
"RTN","PXLEXS",105,0)
 S ^TMP("PXLEXT",$J,"ACTIVE")=ACTIVE
"RTN","PXLEXS",106,0)
 D EN^VALM("PXCE STANDARD CODES SELECT")
"RTN","PXLEXS",107,0)
 M CODELIST=^TMP("PXLEXT",$J,"SELECTED CODES")
"RTN","PXLEXS",108,0)
 K ^TMP("PXLEXT",$J)
"RTN","PXLEXS",109,0)
 Q
"RTN","PXLEXS",110,0)
 ;
"RTN","PXLEXS",111,0)
 ;=========================================
"RTN","PXLEXS",112,0)
GETLIST(LIST) ;Let the user input a list of items.
"RTN","PXLEXS",113,0)
 N DIR,DIR0,INUM,ITEM,LEND,LELEM,NCODES,LSTART,X,Y
"RTN","PXLEXS",114,0)
 S NCODES=+$G(^TMP("PXLEXL",$J,"NCODES"))
"RTN","PXLEXS",115,0)
 I NCODES=0 Q
"RTN","PXLEXS",116,0)
 I NCODES=1 S LIST(1)="" Q
"RTN","PXLEXS",117,0)
 S DIR0=$S($D(^TMP("PXLEXT",$J,"SINGLE")):"N^1:"_NCODES_":0",1:"LC^1:"_NCODES)
"RTN","PXLEXS",118,0)
 S DIR(0)=DIR0
"RTN","PXLEXS",119,0)
 D ^DIR
"RTN","PXLEXS",120,0)
 I $E(Y,1)="^" Q
"RTN","PXLEXS",121,0)
 I Y?1.N S LIST(Y)="" Q
"RTN","PXLEXS",122,0)
 ;Populate the list.
"RTN","PXLEXS",123,0)
 F INUM=1:1:($L(Y,",")-1) D
"RTN","PXLEXS",124,0)
 . S LELEM=$P(Y,",",INUM)
"RTN","PXLEXS",125,0)
 . I LELEM?1.N  S LIST(LELEM)=""
"RTN","PXLEXS",126,0)
 . S LSTART=$P(LELEM,"-",1),LEND=$P(LELEM,"-",2)
"RTN","PXLEXS",127,0)
 . F ITEM=LSTART:1:LEND S LIST(ITEM)=""
"RTN","PXLEXS",128,0)
 Q
"RTN","PXLEXS",129,0)
 ;
"RTN","PXLEXS",130,0)
 ;=========================================
"RTN","PXLEXS",131,0)
HDR ; Header code
"RTN","PXLEXS",132,0)
 S VALMHDR(1)="Select the standard code(s)."
"RTN","PXLEXS",133,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXLEXS",134,0)
 Q
"RTN","PXLEXS",135,0)
 ;
"RTN","PXLEXS",136,0)
 ;=========================================
"RTN","PXLEXS",137,0)
HELP ;Display help.
"RTN","PXLEXS",138,0)
 N DDS,DIR0,DONE,IND,HTEXT,TEXT
"RTN","PXLEXS",139,0)
 ;DBIA #5746 covers kill and set of DDS. DDS needs to be set or the
"RTN","PXLEXS",140,0)
 ;Browser will kill some ScreenMan variables.
"RTN","PXLEXS",141,0)
 S HTEXT=$S($D(^TMP("PXLEXT",$J,"SINGLE")):"HTEXTS",1:"HTEXT")
"RTN","PXLEXS",142,0)
 S DDS=1,DONE=0
"RTN","PXLEXS",143,0)
 F IND=1:1 Q:DONE  D
"RTN","PXLEXS",144,0)
 . S TEXT(IND)=$P($T(@HTEXT+IND),";",3,99)
"RTN","PXLEXS",145,0)
 . I TEXT(IND)="**End Text**" K TEXT(IND) S DONE=1 Q
"RTN","PXLEXS",146,0)
 D BROWSE^DDBR("TEXT","NR","Lexicon Selection Help")
"RTN","PXLEXS",147,0)
 S VALMBCK="R"
"RTN","PXLEXS",148,0)
 Q
"RTN","PXLEXS",149,0)
 ;
"RTN","PXLEXS",150,0)
 ;=========================================
"RTN","PXLEXS",151,0)
HLITE(ENUM,MODE) ;Highlight/unhighlight an entry. MODE=1 turns on
"RTN","PXLEXS",152,0)
 ;highlighting, MODE=0 turns it off.
"RTN","PXLEXS",153,0)
 N LINE,START,STOP,VCTRL
"RTN","PXLEXS",154,0)
 S VCTRL=$S(MODE=1:IOINHI,1:IOINORM)
"RTN","PXLEXS",155,0)
 S START=$P(^TMP("PXLEXL",$J,"LINES",ENUM),U,1)
"RTN","PXLEXS",156,0)
 S STOP=$P(^TMP("PXLEXL",$J,"LINES",ENUM),U,2)
"RTN","PXLEXS",157,0)
 F LINE=START:1:STOP D CNTRL^VALM10(LINE,1,80,VCTRL,IOINORM)
"RTN","PXLEXS",158,0)
 ;If the entry is marked Use In Dialog turn on marker.
"RTN","PXLEXS",159,0)
 I MODE=0 D FLDCTRL^VALM10(START,"CODE",IORVOFF,IORVOFF,"")
"RTN","PXLEXS",160,0)
 Q
"RTN","PXLEXS",161,0)
 ;
"RTN","PXLEXS",162,0)
 ;=========================================
"RTN","PXLEXS",163,0)
HTEXT ;Lexicon selection help text.
"RTN","PXLEXS",164,0)
 ;;Select one of the following actions:
"RTN","PXLEXS",165,0)
 ;;
"RTN","PXLEXS",166,0)
 ;;  SEL  - Select codes to add to the encounter.
"RTN","PXLEXS",167,0)
 ;;  REM  - Removes selected codes from the encounter.
"RTN","PXLEXS",168,0)
 ;;
"RTN","PXLEXS",169,0)
 ;;When you exit by typing 'Q' the selected codes will be added to or removed
"RTN","PXLEXS",170,0)
 ;;from the encounter depending on the chosen action.
"RTN","PXLEXS",171,0)
 ;;
"RTN","PXLEXS",172,0)
 ;;You can select the action first and then be prompted for a list of codes or
"RTN","PXLEXS",173,0)
 ;;you can input the list and then select the action. Because of the way List
"RTN","PXLEXS",174,0)
 ;;Manager works, you may be able to select a larger list by selecting the action
"RTN","PXLEXS",175,0)
 ;;first.
"RTN","PXLEXS",176,0)
 ;;
"RTN","PXLEXS",177,0)
 ;;**End Text**
"RTN","PXLEXS",178,0)
 Q
"RTN","PXLEXS",179,0)
 ;=========================================
"RTN","PXLEXS",180,0)
HTEXTS ;Lexicon single selection help text.
"RTN","PXLEXS",181,0)
 ;;Select one of the following actions:
"RTN","PXLEXS",182,0)
 ;;
"RTN","PXLEXS",183,0)
 ;;  SEL  - Select a code to add to the encounter.
"RTN","PXLEXS",184,0)
 ;;  REM  - Remove a code from the encounter.
"RTN","PXLEXS",185,0)
 ;;
"RTN","PXLEXS",186,0)
 ;;When you exit by typing 'Q' the selected code will be added to or removed
"RTN","PXLEXS",187,0)
 ;;from the encounter depending on the chosen action.
"RTN","PXLEXS",188,0)
 ;;
"RTN","PXLEXS",189,0)
 ;;You can select the action first and then be prompted for a code or you
"RTN","PXLEXS",190,0)
 ;;can select a code and then select the action.
"RTN","PXLEXS",191,0)
 ;;
"RTN","PXLEXS",192,0)
 ;;**End Text**
"RTN","PXLEXS",193,0)
 Q
"RTN","PXLEXS",194,0)
 ;
"RTN","PXLEXS",195,0)
 ;=========================================
"RTN","PXLEXS",196,0)
INITMPG ;Initialize all the ^TMP globals.
"RTN","PXLEXS",197,0)
 K ^TMP("PXLEXL",$J)
"RTN","PXLEXS",198,0)
 Q
"RTN","PXLEXS",199,0)
 ;
"RTN","PXLEXS",200,0)
 ;=========================================
"RTN","PXLEXS",201,0)
LEXLIST(TERM,CODESYS,EVENTDT,NCODES,NLINES,TEXT,ACTIVE) ;Call Lexicon to get
"RTN","PXLEXS",202,0)
 ;the list of codes.
"RTN","PXLEXS",203,0)
 N ACTDT,CODE,CODEI,INACTDT,IND,NUM
"RTN","PXLEXS",204,0)
 N RESULT,SRC,SDESC,TEMP
"RTN","PXLEXS",205,0)
 W @IOF,"Searching Lexicon ..."
"RTN","PXLEXS",206,0)
 K ^TMP("PXLEX",$J)
"RTN","PXLEXS",207,0)
 ;DBIA #5681
"RTN","PXLEXS",208,0)
 ;S RESULT=$$TAX^LEX10CS(TERM,CODESYS,EVENTDT,"PXLEX",LEXACT)
"RTN","PXLEXS",209,0)
 S RESULT=$$TAX^LEX10CS(TERM,CODESYS,EVENTDT,"PXLEX",ACTIVE)
"RTN","PXLEXS",210,0)
 S NCODES=+RESULT
"RTN","PXLEXS",211,0)
 I NCODES=-1 S (NCODES,NLINES)=0 K ^TMP("PXLEX",$J) Q
"RTN","PXLEXS",212,0)
 S SRC=+$O(^TMP("PXLEX",$J,0))
"RTN","PXLEXS",213,0)
 I CODESYS="SCT" D SCTDESC("PXLEX")
"RTN","PXLEXS",214,0)
 S CODEI="",(NLINES,NUM)=0
"RTN","PXLEXS",215,0)
 F  S CODEI=$O(^TMP("PXLEX",$J,SRC,CODEI)) Q:CODEI=""  D
"RTN","PXLEXS",216,0)
 . S NUM=NUM+1,IND=0
"RTN","PXLEXS",217,0)
 . F  S IND=$O(^TMP("PXLEX",$J,SRC,CODEI,IND)) Q:IND=""  D
"RTN","PXLEXS",218,0)
 .. S TEMP=^TMP("PXLEX",$J,SRC,CODEI,IND)
"RTN","PXLEXS",219,0)
 .. S ACTDT=$P(TEMP,U,1),INACTDT=$P(TEMP,U,2)
"RTN","PXLEXS",220,0)
 .. S TEMP=^TMP("PXLEX",$J,SRC,CODEI,IND,0)
"RTN","PXLEXS",221,0)
 .. S CODE=$P(TEMP,U,1),SDESC=$P(TEMP,U,2)
"RTN","PXLEXS",222,0)
 .. S NLINES=NLINES+1
"RTN","PXLEXS",223,0)
 .. I IND=1 S TEXT(NLINES)=NUM_U_CODE_U_ACTDT_U_INACTDT_U_SDESC
"RTN","PXLEXS",224,0)
 .. E  S TEXT(NLINES)=U_U_ACTDT_U_INACTDT_U_SDESC
"RTN","PXLEXS",225,0)
 K ^TMP("PXLEX",$J)
"RTN","PXLEXS",226,0)
 Q
"RTN","PXLEXS",227,0)
 ;
"RTN","PXLEXS",228,0)
 ;=========================================
"RTN","PXLEXS",229,0)
PEXIT ; Protocol exit code
"RTN","PXLEXS",230,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXLEXS",231,0)
 ;Reset after page up/down etc
"RTN","PXLEXS",232,0)
 D XQORM
"RTN","PXLEXS",233,0)
 Q
"RTN","PXLEXS",234,0)
 ;
"RTN","PXLEXS",235,0)
 ;=========================================
"RTN","PXLEXS",236,0)
REM(ENUM) ;Remove entry ENUM from the selected list and unhighlight it.
"RTN","PXLEXS",237,0)
 K ^TMP("PXLEXL",$J,"SELECTED",ENUM)
"RTN","PXLEXS",238,0)
 D HLITE(ENUM,0)
"RTN","PXLEXS",239,0)
 Q
"RTN","PXLEXS",240,0)
 ;
"RTN","PXLEXS",241,0)
 ;=========================================
"RTN","PXLEXS",242,0)
REML ;Remove the selected entries from the selected list and unhighlight them.
"RTN","PXLEXS",243,0)
 N SEL,SELLIST
"RTN","PXLEXS",244,0)
 ;Get the list.
"RTN","PXLEXS",245,0)
 D GETLIST(.SELLIST)
"RTN","PXLEXS",246,0)
 ;If there is no list quit.
"RTN","PXLEXS",247,0)
 I '$D(SELLIST) Q
"RTN","PXLEXS",248,0)
 S SEL=""
"RTN","PXLEXS",249,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D REM(SEL)
"RTN","PXLEXS",250,0)
 S VALMBCK="R"
"RTN","PXLEXS",251,0)
 Q
"RTN","PXLEXS",252,0)
 ;
"RTN","PXLEXS",253,0)
 ;=========================================
"RTN","PXLEXS",254,0)
REMX(LIST) ;Remove the selected entries from the selected list and unhighlight
"RTN","PXLEXS",255,0)
 ;them.
"RTN","PXLEXS",256,0)
 N ENUM,IND
"RTN","PXLEXS",257,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXLEXS",258,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXLEXS",259,0)
 . D REM(ENUM)
"RTN","PXLEXS",260,0)
 Q
"RTN","PXLEXS",261,0)
 ;
"RTN","PXLEXS",262,0)
 ;=========================================
"RTN","PXLEXS",263,0)
SCTDESC(NODE) ;Append the SNOMED hierarchy to the description and then
"RTN","PXLEXS",264,0)
 ;sort the list by description.
"RTN","PXLEXS",265,0)
 N ACTDT,CODEI,CODE,DESC,FSN,HE,HIER,HS,NUM,SRC
"RTN","PXLEXS",266,0)
 K ^TMP($J,"DESC"),^TMP($J,"SORT")
"RTN","PXLEXS",267,0)
 S SRC=$O(^TMP(NODE,$J,0))
"RTN","PXLEXS",268,0)
 S CODEI=""
"RTN","PXLEXS",269,0)
 F  S CODEI=$O(^TMP(NODE,$J,SRC,CODEI)) Q:CODEI=""  D
"RTN","PXLEXS",270,0)
 . S ACTDT=$P(^TMP(NODE,$J,SRC,CODEI,1),U,1)
"RTN","PXLEXS",271,0)
 . S CODE=$P(^TMP(NODE,$J,SRC,CODEI,1,0),U,1)
"RTN","PXLEXS",272,0)
 . S DESC=$P(^TMP(NODE,$J,SRC,CODEI,1,0),U,2)
"RTN","PXLEXS",273,0)
 .;DBIA #5007
"RTN","PXLEXS",274,0)
 . S FSN=$$GETFSN^LEXTRAN1(SRC,CODE,ACTDT)
"RTN","PXLEXS",275,0)
 . S HS=$F(FSN,"(")
"RTN","PXLEXS",276,0)
 . S HE=$F(FSN,")",HS)
"RTN","PXLEXS",277,0)
 . S HIER=$E(FSN,HS-1,HE-1)
"RTN","PXLEXS",278,0)
 . S DESC=DESC_" "_HIER
"RTN","PXLEXS",279,0)
 . S ^TMP($J,"DESC",DESC,CODEI)=""
"RTN","PXLEXS",280,0)
 S DESC="",NUM=0
"RTN","PXLEXS",281,0)
 F  S DESC=$O(^TMP($J,"DESC",DESC)) Q:DESC=""  D
"RTN","PXLEXS",282,0)
 . S CODEI=""
"RTN","PXLEXS",283,0)
 . F  S CODEI=$O(^TMP($J,"DESC",DESC,CODEI)) Q:CODEI=""  D
"RTN","PXLEXS",284,0)
 .. S NUM=NUM+1
"RTN","PXLEXS",285,0)
 .. M ^TMP($J,"SORT",SRC,NUM)=^TMP(NODE,$J,SRC,CODEI)
"RTN","PXLEXS",286,0)
 .. S $P(^TMP($J,"SORT",SRC,NUM,1,0),U,2)=DESC
"RTN","PXLEXS",287,0)
 K ^TMP(NODE,$J)
"RTN","PXLEXS",288,0)
 M ^TMP(NODE,$J)=^TMP($J,"SORT")
"RTN","PXLEXS",289,0)
 K ^TMP($J,"DESC"),^TMP($J,"SORT")
"RTN","PXLEXS",290,0)
 Q
"RTN","PXLEXS",291,0)
 ;
"RTN","PXLEXS",292,0)
 ;=========================================
"RTN","PXLEXS",293,0)
SELL ;Put the selected entries on the selected list and highlight them.
"RTN","PXLEXS",294,0)
 N SEL,SELLIST
"RTN","PXLEXS",295,0)
 ;Get the list.
"RTN","PXLEXS",296,0)
 D GETLIST(.SELLIST)
"RTN","PXLEXS",297,0)
 ;If there is no list quit.
"RTN","PXLEXS",298,0)
 I '$D(SELLIST) Q
"RTN","PXLEXS",299,0)
 S SEL=""
"RTN","PXLEXS",300,0)
 F  S SEL=$O(SELLIST(SEL)) Q:SEL=""  D ADDSEL(SEL)
"RTN","PXLEXS",301,0)
 S VALMBCK="R"
"RTN","PXLEXS",302,0)
 Q
"RTN","PXLEXS",303,0)
 ;
"RTN","PXLEXS",304,0)
 ;=========================================
"RTN","PXLEXS",305,0)
SELX(LIST) ;Put the selected entries on the selected list and highlight
"RTN","PXLEXS",306,0)
 ;them.
"RTN","PXLEXS",307,0)
 N ENUM,IND
"RTN","PXLEXS",308,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXLEXS",309,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXLEXS",310,0)
 . D ADDSEL(ENUM)
"RTN","PXLEXS",311,0)
 Q
"RTN","PXLEXS",312,0)
 ;
"RTN","PXLEXS",313,0)
 ;=========================================
"RTN","PXLEXS",314,0)
XQORM ; Set range for selection.
"RTN","PXLEXS",315,0)
 N NCODES
"RTN","PXLEXS",316,0)
 S NCODES=+$G(^TMP("PXLEXL",$J,"NCODES"))
"RTN","PXLEXS",317,0)
 I NCODES=0 Q
"RTN","PXLEXS",318,0)
 S XQORM("#")=$O(^ORD(101,"B","PXCE LEXICON SELECT ENTRY",0))_U_"1:"_NCODES
"RTN","PXLEXS",319,0)
 S XQORM("A")="Select Action: "
"RTN","PXLEXS",320,0)
 Q
"RTN","PXLEXS",321,0)
 ;
"RTN","PXLEXS",322,0)
 ;=========================================
"RTN","PXLEXS",323,0)
XSEL ;Entry action for protocol PXCE LEXICON SELECT ENTRY.
"RTN","PXLEXS",324,0)
 N ENUM,IND,LIST,LVALID
"RTN","PXLEXS",325,0)
 S LIST=$P(XQORNOD(0),"=",2)
"RTN","PXLEXS",326,0)
 ;Remove trailing ,
"RTN","PXLEXS",327,0)
 I $E(LIST,$L(LIST))="," S LIST=$E(LIST,1,$L(LIST)-1)
"RTN","PXLEXS",328,0)
 S LVALID=1
"RTN","PXLEXS",329,0)
 F IND=1:1:$L(LIST,",") D
"RTN","PXLEXS",330,0)
 . S ENUM=$P(LIST,",",IND)
"RTN","PXLEXS",331,0)
 . I (ENUM<1)!(ENUM>VALMCNT)!('$D(^TMP("PXLEXL",$J,"LINES",ENUM))) D
"RTN","PXLEXS",332,0)
 .. W !,ENUM," is not a valid selection."
"RTN","PXLEXS",333,0)
 .. W !,"The range is 1 to ",$O(^TMP("PXLEXL",$J,"LINES",""),-1),"."
"RTN","PXLEXS",334,0)
 .. H 2
"RTN","PXLEXS",335,0)
 .. S LVALID=0
"RTN","PXLEXS",336,0)
 I $D(^TMP("PXLEXT",$J,"SINGLE")),LIST'?1.N D
"RTN","PXLEXS",337,0)
 . W !,"Only a single code can be selected."
"RTN","PXLEXS",338,0)
 . S LVALID=0
"RTN","PXLEXS",339,0)
 . H 2
"RTN","PXLEXS",340,0)
 I 'LVALID S VALMBCK="R" Q
"RTN","PXLEXS",341,0)
 ;
"RTN","PXLEXS",342,0)
 ;Full screen mode
"RTN","PXLEXS",343,0)
 D FULL^VALM1
"RTN","PXLEXS",344,0)
 ;
"RTN","PXLEXS",345,0)
 ;Possible actions.
"RTN","PXLEXS",346,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,OPTION,X,Y
"RTN","PXLEXS",347,0)
 S DIR(0)="SBM"_U_"SEL:Select code(s);"
"RTN","PXLEXS",348,0)
 S DIR(0)=DIR(0)_"REM:Remove code(s);"
"RTN","PXLEXS",349,0)
 S DIR("A")="Select Action: "
"RTN","PXLEXS",350,0)
 S DIR("B")="SEL"
"RTN","PXLEXS",351,0)
 S DIR("?")="Select from the actions displayed."
"RTN","PXLEXS",352,0)
 D ^DIR
"RTN","PXLEXS",353,0)
 I $D(DIROUT)!$D(DIRUT) S VALMBCK="R" Q
"RTN","PXLEXS",354,0)
 I $D(DTOUT)!$D(DUOUT) S VALMBCK="R" Q
"RTN","PXLEXS",355,0)
 S OPTION=Y
"RTN","PXLEXS",356,0)
 D CLEAR^VALM1
"RTN","PXLEXS",357,0)
 ;
"RTN","PXLEXS",358,0)
 I OPTION="SEL" D SELX^PXLEXS(.LIST)
"RTN","PXLEXS",359,0)
 I OPTION="REM" D REMX^PXLEXS(.LIST)
"RTN","PXLEXS",360,0)
 ;
"RTN","PXLEXS",361,0)
 S VALMBCK="R"
"RTN","PXLEXS",362,0)
 Q
"RTN","PXLEXS",363,0)
 ;
"RTN","PXMCLINK")
0^14^B90678468
"RTN","PXMCLINK",1,0)
PXMCLINK ;SLC/PKR - Mapped codes linking routines. ;03/08/2016
"RTN","PXMCLINK",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXMCLINK",3,0)
 ;
"RTN","PXMCLINK",4,0)
 ;==========================================
"RTN","PXMCLINK",5,0)
CODEPTR(CODESYS,CODE) ;Return the code pointer for CPC, CPT, and ICD codes.
"RTN","PXMCLINK",6,0)
 ;ICRs #1995, #3990
"RTN","PXMCLINK",7,0)
 I CODESYS="10D" Q $P($$CODEN^ICDCODE(CODE),"~",1)
"RTN","PXMCLINK",8,0)
 I CODESYS="CPC" Q $$CODEN^ICPTCOD(CODE)
"RTN","PXMCLINK",9,0)
 I CODESYS="CPT" Q $$CODEN^ICPTCOD(CODE)
"RTN","PXMCLINK",10,0)
 I CODESYS="ICD" Q $P($$CODEN^ICDCODE(CODE),"~",1)
"RTN","PXMCLINK",11,0)
 Q -1
"RTN","PXMCLINK",12,0)
 ;
"RTN","PXMCLINK",13,0)
 ;==========================================
"RTN","PXMCLINK",14,0)
CSCLIST(GBL,IEN,CODESYSL) ;Populate the coding system code list.
"RTN","PXMCLINK",15,0)
 N CODE,COESYS,IND,TEMP
"RTN","PXMCLINK",16,0)
 K CODESYSL
"RTN","PXMCLINK",17,0)
 S IND=0
"RTN","PXMCLINK",18,0)
 F  S IND=+$O(@GBL@(IEN,210,IND)) Q:IND=0  D
"RTN","PXMCLINK",19,0)
 . S TEMP=@GBL@(IEN,210,IND,0)
"RTN","PXMCLINK",20,0)
 .;Skip if there already is a Date Linked.
"RTN","PXMCLINK",21,0)
 . I $P(TEMP,U,4)'="" Q
"RTN","PXMCLINK",22,0)
 . S CODESYS=$P(TEMP,U,1),CODE=$P(TEMP,U,2)
"RTN","PXMCLINK",23,0)
 . I CODE'="" S CODESYSL(CODESYS,CODE)=IND
"RTN","PXMCLINK",24,0)
 Q
"RTN","PXMCLINK",25,0)
 ;
"RTN","PXMCLINK",26,0)
 ;==========================================
"RTN","PXMCLINK",27,0)
LINK(FILENUM,GBL,IEN,CODESYSL) ;Create entries in V CPT, V POV or
"RTN","PXMCLINK",28,0)
 ;V Standard Codes files for legacy data that has been mapped to
"RTN","PXMCLINK",29,0)
 ;standard codes and link them through the Mapped Source field.
"RTN","PXMCLINK",30,0)
 N CODE,CODEP,CODESYS,DAS,DATE,DFN,ERROR,FDA,IENS,IND,MSG
"RTN","PXMCLINK",31,0)
 N SRCVFILE,VFCSYS,VISITIEN
"RTN","PXMCLINK",32,0)
 ;
"RTN","PXMCLINK",33,0)
 K ^TMP("PXXMZ",$J)
"RTN","PXMCLINK",34,0)
 S SRCVFILE=$$SRCVFILE(FILENUM)
"RTN","PXMCLINK",35,0)
 I '$D(^PXRMINDX(SRCVFILE,"IP",IEN)) Q
"RTN","PXMCLINK",36,0)
 S IENS="+1,"
"RTN","PXMCLINK",37,0)
 S CODESYS="",NL=2
"RTN","PXMCLINK",38,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXMCLINK",39,0)
 . K FDA
"RTN","PXMCLINK",40,0)
 . S VFCSYS=$$VFCSYS(CODESYS)
"RTN","PXMCLINK",41,0)
 . S FDA(VFCSYS,IENS,300)=FILENUM_";"_IEN
"RTN","PXMCLINK",42,0)
 . I VFCSYS=9000010.71 S FDA(VFCSYS,IENS,.05)=CODESYS
"RTN","PXMCLINK",43,0)
 . S CODE=""
"RTN","PXMCLINK",44,0)
 . F  S CODE=$O(CODESYSL(CODESYS,CODE)) Q:CODE=""  D
"RTN","PXMCLINK",45,0)
 .. S NL=NL+1,^TMP("PXXMZ",$J,NL,0)=" "_CODESYS_"  "_CODE
"RTN","PXMCLINK",46,0)
 .. I VFCSYS=9000010.71 S FDA(9000010.71,IENS,.01)=CODE
"RTN","PXMCLINK",47,0)
 .. E  D  Q:CODEP=-1
"RTN","PXMCLINK",48,0)
 ... S CODEP=$$CODEPTR(CODESYS,CODE)
"RTN","PXMCLINK",49,0)
 ... I CODEP'=-1 S FDA(VFCSYS,IENS,.01)=CODEP
"RTN","PXMCLINK",50,0)
 .. S DFN=""
"RTN","PXMCLINK",51,0)
 .. F  S DFN=$O(^PXRMINDX(SRCVFILE,"IP",IEN,DFN)) Q:DFN=""  D
"RTN","PXMCLINK",52,0)
 ... S ERROR=0
"RTN","PXMCLINK",53,0)
 ... S FDA(VFCSYS,IENS,.02)=DFN
"RTN","PXMCLINK",54,0)
 ... S DATE=""
"RTN","PXMCLINK",55,0)
 ... F  S DATE=$O(^PXRMINDX(SRCVFILE,"IP",IEN,DFN,DATE)) Q:DATE=""  D
"RTN","PXMCLINK",56,0)
 .... S DAS=""
"RTN","PXMCLINK",57,0)
 .... F  S DAS=$O(^PXRMINDX(SRCVFILE,"IP",IEN,DFN,DATE,DAS)) Q:DAS=""  D
"RTN","PXMCLINK",58,0)
 ..... S VISITIEN=$$GET1^DIQ(SRCVFILE,DAS,.03,"I")
"RTN","PXMCLINK",59,0)
 ..... S FDA(VFCSYS,IENS,.03)=VISITIEN
"RTN","PXMCLINK",60,0)
 ..... K MSG
"RTN","PXMCLINK",61,0)
 ..... D UPDATE^DIE("S","FDA","","MSG")
"RTN","PXMCLINK",62,0)
 ..... I $D(MSG) D  Q
"RTN","PXMCLINK",63,0)
 ...... S ERROR=1
"RTN","PXMCLINK",64,0)
 ...... S SUBJECT="Mapped code linking failed for file #"_SRCVFILE_", IEN="_IEN_", DFN="_DFN
"RTN","PXMCLINK",65,0)
 ...... D SENDEMSG(SRCVFILE,IEN,SUBJECT,.MSG)
"RTN","PXMCLINK",66,0)
 .....;Linking complete, set the Date Linked.
"RTN","PXMCLINK",67,0)
 ..... S IND=CODESYSL(CODESYS,CODE)
"RTN","PXMCLINK",68,0)
 ..... S $P(@GBL@(IEN,210,IND,0),U,4)=$$NOW^XLFDT
"RTN","PXMCLINK",69,0)
 I ERROR Q
"RTN","PXMCLINK",70,0)
 N ENAME,GNAME,SUBJECT,FROM,TO
"RTN","PXMCLINK",71,0)
 D SETTF(.TO,.FROM)
"RTN","PXMCLINK",72,0)
 S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXMCLINK",73,0)
 S ENAME=$P($G(@GBL@(IEN,0)),U,1)
"RTN","PXMCLINK",74,0)
 S SUBJECT=GNAME_" entry "_ENAME_" has been linked."
"RTN","PXMCLINK",75,0)
 S ^TMP("PXXMZ",$J,1,0)="Linking completed at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXMCLINK",76,0)
 S ^TMP("PXXMZ",$J,2,0)="The following codes were linked:"
"RTN","PXMCLINK",77,0)
 D SEND^PXRMMSG("PXXMZ",SUBJECT,.TO,FROM)
"RTN","PXMCLINK",78,0)
 K ^TMP("PXXMZ",$J)
"RTN","PXMCLINK",79,0)
 Q
"RTN","PXMCLINK",80,0)
 ;
"RTN","PXMCLINK",81,0)
 ;==========================================
"RTN","PXMCLINK",82,0)
LINKALL ;Link all national exams, education topics, and health factors
"RTN","PXMCLINK",83,0)
 ;that have been mapped.
"RTN","PXMCLINK",84,0)
 N CLASS,IEN,FILENUM,GBL,GNAME,NL,NMAPPED,TEXT
"RTN","PXMCLINK",85,0)
 K ^TMP("PXXMZ",$J)
"RTN","PXMCLINK",86,0)
 S NL=1
"RTN","PXMCLINK",87,0)
 F FILENUM=9999999.09,9999999.15,9999999.64 D
"RTN","PXMCLINK",88,0)
 . S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXMCLINK",89,0)
 . S GBL=$P(GBL,"(",1)
"RTN","PXMCLINK",90,0)
 . S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXMCLINK",91,0)
 . S NL=NL+1,^TMP("PXXMZ",$J,NL,0)=""
"RTN","PXMCLINK",92,0)
 . S NL=NL+1,^TMP("PXXMZ",$J,NL,0)="Linking national "_GNAME_" that have been mapped."
"RTN","PXMCLINK",93,0)
 . S IEN=0
"RTN","PXMCLINK",94,0)
 . F  S IEN=+$O(@GBL@(IEN)) Q:IEN=0  D
"RTN","PXMCLINK",95,0)
 .. S NMAPPED=+$P($G(@GBL@(IEN,210,0)),U,4)
"RTN","PXMCLINK",96,0)
 .. I NMAPPED=0 Q
"RTN","PXMCLINK",97,0)
 .. S CLASS=$P(@GBL@(IEN,100),U,1)
"RTN","PXMCLINK",98,0)
 .. I CLASS'="N" Q
"RTN","PXMCLINK",99,0)
 .. S NL=NL+1,^TMP("PXXMZ",$J,NL,0)=" Linking "_GNAME_": "_$P(@GBL@(IEN,0),U,1)
"RTN","PXMCLINK",100,0)
 .. D CSCLIST^PXMCLINK(GBL,IEN,.CODESYSL)
"RTN","PXMCLINK",101,0)
 .. I '$D(CODESYSL) Q
"RTN","PXMCLINK",102,0)
 .. D LINK^PXMCLINK(FILENUM,GBL,IEN,CODESYSL,0)
"RTN","PXMCLINK",103,0)
 D SEND^PXRMMSG("PXXMZ","LINKING NATIONAL PCE ENTRIES",DUZ,"PCE")
"RTN","PXMCLINK",104,0)
 K ^TMP("PXXMZ",$J)
"RTN","PXMCLINK",105,0)
 Q
"RTN","PXMCLINK",106,0)
 ;
"RTN","PXMCLINK",107,0)
 ;==========================================
"RTN","PXMCLINK",108,0)
MCLINK(FILENUM,IEN) ;Check for codes that have been mapped but not linked.
"RTN","PXMCLINK",109,0)
 ;It there are any, ask the user if they want to link them.
"RTN","PXMCLINK",110,0)
 N CODE,CODESYS,CODESYSL,DDS,DIR,DIR0,ENAME,GBL,GNAME,NL,NMAPPED
"RTN","PXMCLINK",111,0)
 N STARTDT,TEMP,TEXT,VFILENUM,X,Y
"RTN","PXMCLINK",112,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXMCLINK",113,0)
 S GBL=$P(GBL,"(",1)
"RTN","PXMCLINK",114,0)
 S NMAPPED=+$P($G(@GBL@(IEN,210,0)),U,4)
"RTN","PXMCLINK",115,0)
 I NMAPPED=0 Q
"RTN","PXMCLINK",116,0)
 S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXMCLINK",117,0)
 S ENAME=$P($G(@GBL@(IEN,0)),U,1)
"RTN","PXMCLINK",118,0)
 D CSCLIST^PXMCLINK(GBL,IEN,.CODESYSL)
"RTN","PXMCLINK",119,0)
 I '$D(CODESYSL) Q
"RTN","PXMCLINK",120,0)
 S TEXT(1)="The following codes have been mapped but not linked to existing"
"RTN","PXMCLINK",121,0)
 S TEXT(2)=ENAME_" "_GNAME_" patient data:"
"RTN","PXMCLINK",122,0)
 S CODESYS="",NL=2
"RTN","PXMCLINK",123,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXMCLINK",124,0)
 . S CODE=""
"RTN","PXMCLINK",125,0)
 . F  S CODE=$O(CODESYSL(CODESYS,CODE)) Q:CODE=""  D
"RTN","PXMCLINK",126,0)
 .. S NL=NL+1,TEXT(NL)=" "_CODESYS_"  "_CODE
"RTN","PXMCLINK",127,0)
 S NL=NL+1,TEXT(NL)=""
"RTN","PXMCLINK",128,0)
 D EN^DDIOL(.TEXT)
"RTN","PXMCLINK",129,0)
 S VFILENUM=$$SRCVFILE(FILENUM)
"RTN","PXMCLINK",130,0)
 I '$D(^PXRMINDX(VFILENUM,"IP",IEN)) D  Q
"RTN","PXMCLINK",131,0)
 . K TEXT
"RTN","PXMCLINK",132,0)
 . S TEXT(1)=""
"RTN","PXMCLINK",133,0)
 . S TEXT(2)="No patients have been given the "_GNAME_": "_ENAME
"RTN","PXMCLINK",134,0)
 . S TEXT(3)="there is no data to link."
"RTN","PXMCLINK",135,0)
 . D EN^DDIOL(.TEXT) H 2
"RTN","PXMCLINK",136,0)
 K DIR
"RTN","PXMCLINK",137,0)
 S DIR(0)="YAO",DIR("B")="Y"
"RTN","PXMCLINK",138,0)
 S DIR("A")="Do you want to link them? "
"RTN","PXMCLINK",139,0)
 D ^DIR
"RTN","PXMCLINK",140,0)
 I 'Y Q
"RTN","PXMCLINK",141,0)
 K DIR
"RTN","PXMCLINK",142,0)
 S DIR(0)="DAO^NOW::ERX"
"RTN","PXMCLINK",143,0)
 S DIR("A")="When do you want the linking job to start? "
"RTN","PXMCLINK",144,0)
 S DIR("B")="NOW"
"RTN","PXMCLINK",145,0)
 D ^DIR
"RTN","PXMCLINK",146,0)
 I (Y="^")!(Y="") Q
"RTN","PXMCLINK",147,0)
 S STARTDT=Y
"RTN","PXMCLINK",148,0)
 D TASKLINK(FILENUM,GBL,IEN,.CODESYSL,STARTDT)
"RTN","PXMCLINK",149,0)
 ;D LINK(FILENUM,GBL,IEN,.CODESYSL)
"RTN","PXMCLINK",150,0)
 Q
"RTN","PXMCLINK",151,0)
 ;
"RTN","PXMCLINK",152,0)
 ;==========================================
"RTN","PXMCLINK",153,0)
MCUNLINK(FILENUM,IEN) ;Start a task to unlink mapped codes.
"RTN","PXMCLINK",154,0)
 N DA,DDS,DIR,DIR0,GBL,IENS,STARTDT,NL,TEMP,TEXT,X,Y,UNLINK
"RTN","PXMCLINK",155,0)
 I '$D(^TMP($J,"UNLINK")) Q
"RTN","PXMCLINK",156,0)
 M UNLINK=^TMP($J,"UNLINK")
"RTN","PXMCLINK",157,0)
 K ^TMP($J,"UNLINK")
"RTN","PXMCLINK",158,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXMCLINK",159,0)
 S GBL=$P(GBL,"(",1)
"RTN","PXMCLINK",160,0)
 S TEXT(1)="The following codes have been selected for unlinking:"
"RTN","PXMCLINK",161,0)
 S IENS="",NL=1
"RTN","PXMCLINK",162,0)
 F  S IENS=$O(UNLINK(FILENUM,IENS)) Q:IENS=""  D
"RTN","PXMCLINK",163,0)
 . D DA^DILF(IENS,.DA)
"RTN","PXMCLINK",164,0)
 . S TEMP=@GBL@(DA(1),210,DA,0)
"RTN","PXMCLINK",165,0)
 . S CODESYS=$P(TEMP,U,1)
"RTN","PXMCLINK",166,0)
 . S CODE=$P(TEMP,U,2)
"RTN","PXMCLINK",167,0)
 . S NL=NL+1,TEXT(NL)=" "_CODESYS_"  "_CODE
"RTN","PXMCLINK",168,0)
 D EN^DDIOL(.TEXT)
"RTN","PXMCLINK",169,0)
 K DIR
"RTN","PXMCLINK",170,0)
 S DIR(0)="DAO^NOW::ERX"
"RTN","PXMCLINK",171,0)
 S DIR("A")="When do you want the unlinking job to start? "
"RTN","PXMCLINK",172,0)
 S DIR("B")="NOW"
"RTN","PXMCLINK",173,0)
 D ^DIR
"RTN","PXMCLINK",174,0)
 I (Y="^")!(Y="") Q
"RTN","PXMCLINK",175,0)
 S STARTDT=Y
"RTN","PXMCLINK",176,0)
 D TASKUNLK(FILENUM,IEN,.UNLINK,STARTDT)
"RTN","PXMCLINK",177,0)
 ;D UNLINK^PXMCLINK(FILENUM,IEN,.UNLINK)
"RTN","PXMCLINK",178,0)
 Q
"RTN","PXMCLINK",179,0)
 ;
"RTN","PXMCLINK",180,0)
 ;==========================================
"RTN","PXMCLINK",181,0)
SENDEMSG(VFILENUM,IEN,SUBJECT,MSG) ;
"RTN","PXMCLINK",182,0)
 N DIERR,EMSG,FROM,NL,TO
"RTN","PXMCLINK",183,0)
 D SETTF(.TO,.FROM)
"RTN","PXMCLINK",184,0)
 K ^TMP("PXEMSG",$J)
"RTN","PXMCLINK",185,0)
 S NL=1,^TMP("PXEMSG",$J,NL,0)=SUBJECT
"RTN","PXMCLINK",186,0)
 S NL=NL+1,^TMP("PXEMSG",$J,NL,0)="The following error message was returned by FileMan:"
"RTN","PXMCLINK",187,0)
 D ACOPY^PXRMUTIL("MSG","EMSG()")
"RTN","PXMCLINK",188,0)
 S IND=0 F  S IND=$O(EMSG(IND)) Q:IND=""  S NL=NL+1,^TMP("PXEMSG",$J,NL,0)=EMSG(IND)
"RTN","PXMCLINK",189,0)
 D SEND^PXRMMSG("PXEMSG",SUBJECT,.TO,FROM)
"RTN","PXMCLINK",190,0)
 K ^TMP("PXEMSG",$J)
"RTN","PXMCLINK",191,0)
 Q
"RTN","PXMCLINK",192,0)
 ;
"RTN","PXMCLINK",193,0)
 ;==========================================
"RTN","PXMCLINK",194,0)
SETTF(TO,FROM) ;Set the TO and FROM for delivering the MailMan messages.
"RTN","PXMCLINK",195,0)
 N MGIEN,MGROUP
"RTN","PXMCLINK",196,0)
 S FROM=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXMCLINK",197,0)
 S MGIEN=$P($G(^PX(815,1,650)),U,1)
"RTN","PXMCLINK",198,0)
 S TO(DUZ)=""
"RTN","PXMCLINK",199,0)
 I MGIEN'="" D
"RTN","PXMCLINK",200,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXMCLINK",201,0)
 . S TO(MGROUP)=""
"RTN","PXMCLINK",202,0)
 Q
"RTN","PXMCLINK",203,0)
 ;
"RTN","PXMCLINK",204,0)
 ;==========================================
"RTN","PXMCLINK",205,0)
SRCVFILE(FILENUM) ;Given a file number return the associated V file
"RTN","PXMCLINK",206,0)
 ;number.
"RTN","PXMCLINK",207,0)
 Q $S(FILENUM=9999999.09:9000010.16,FILENUM=9999999.15:9000010.13,FILENUM=9999999.64:9000010.23,1:"")
"RTN","PXMCLINK",208,0)
 ;
"RTN","PXMCLINK",209,0)
 ;==========================================
"RTN","PXMCLINK",210,0)
TASKLINK(FILENUM,GBL,IEN,CODESYSL,STARTDT) ;Start a task to link
"RTN","PXMCLINK",211,0)
 ;mapped codes.
"RTN","PXMCLINK",212,0)
 K ZTSAVE
"RTN","PXMCLINK",213,0)
 S ZTSAVE("FILENUM")=""
"RTN","PXMCLINK",214,0)
 S ZTSAVE("GBL")=""
"RTN","PXMCLINK",215,0)
 S ZTSAVE("IEN")=""
"RTN","PXMCLINK",216,0)
 S ZTSAVE("CODESYSL(")=""
"RTN","PXMCLINK",217,0)
 S ZTRTN="TSKLINK^PXMCLINK"
"RTN","PXMCLINK",218,0)
 S ZTDESC="Link mapped codes for "_GBL_" IEN="_IEN
"RTN","PXMCLINK",219,0)
 S ZTDTH=STARTDT
"RTN","PXMCLINK",220,0)
 S ZTIO=""
"RTN","PXMCLINK",221,0)
 D ^%ZTLOAD
"RTN","PXMCLINK",222,0)
 I ZTSK'="" D EN^DDIOL("Task number "_ZTSK_" queued.")
"RTN","PXMCLINK",223,0)
 Q
"RTN","PXMCLINK",224,0)
 ;
"RTN","PXMCLINK",225,0)
 ;==========================================
"RTN","PXMCLINK",226,0)
TASKUNLK(FILENUM,IEN,UNLINK,STARTDT) ;Start a task to unlink mapped codes.
"RTN","PXMCLINK",227,0)
 K ZSTAVE
"RTN","PXMCLINK",228,0)
 S ZTSAVE("IEN")=""
"RTN","PXMCLINK",229,0)
 S ZTSAVE("FILENUM")=""
"RTN","PXMCLINK",230,0)
 S ZTSAVE("UNLINK(")=""
"RTN","PXMCLINK",231,0)
 S ZTRTN="TSKUNLK^PXMCLINK"
"RTN","PXMCLINK",232,0)
 S ZTDESC="Unlink mapped codes for "_GBL_" IEN="_IEN
"RTN","PXMCLINK",233,0)
 S ZTDTH=STARTDT
"RTN","PXMCLINK",234,0)
 S ZTIO=""
"RTN","PXMCLINK",235,0)
 D ^%ZTLOAD
"RTN","PXMCLINK",236,0)
 I ZTSK'="" D EN^DDIOL("Task number "_ZTSK_" queued.")
"RTN","PXMCLINK",237,0)
 Q
"RTN","PXMCLINK",238,0)
 ;
"RTN","PXMCLINK",239,0)
 ;==========================================
"RTN","PXMCLINK",240,0)
TSKLINK ;Arguments come through ZTSAVE.
"RTN","PXMCLINK",241,0)
 D LINK^PXMCLINK(FILENUM,GBL,IEN,.CODESYSL)
"RTN","PXMCLINK",242,0)
 Q
"RTN","PXMCLINK",243,0)
 ;
"RTN","PXMCLINK",244,0)
 ;==========================================
"RTN","PXMCLINK",245,0)
TSKUNLK ;Arguments come through ZTSAVE.
"RTN","PXMCLINK",246,0)
 D UNLINK^PXMCLINK(FILENUM,IEN,.UNLINK)
"RTN","PXMCLINK",247,0)
 Q
"RTN","PXMCLINK",248,0)
 ;
"RTN","PXMCLINK",249,0)
 ;==========================================
"RTN","PXMCLINK",250,0)
UNLINK(FILENUM,IEN,UNLINK) ;Check for codes that should be unlinked.
"RTN","PXMCLINK",251,0)
 N CODE,CODEP,CODESYS,DA,ENAME,ERROR,FROM,GBL,GNAME,IENS,KFDA,MSG,NL
"RTN","PXMCLINK",252,0)
 N SOURCE,SRCVFILE,SUBJECT,TEMP,TO,VFCSYS,VFIEN
"RTN","PXMCLINK",253,0)
 S SRCVFILE=$$SRCVFILE(FILENUM)
"RTN","PXMCLINK",254,0)
 S SOURCE=FILENUM_";"_IEN
"RTN","PXMCLINK",255,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")
"RTN","PXMCLINK",256,0)
 S GBL=$P(GBL,"(",1)
"RTN","PXMCLINK",257,0)
 S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXMCLINK",258,0)
 S ENAME=$P($G(@GBL@(IEN,0)),U,1)
"RTN","PXMCLINK",259,0)
 S SUBJECT=GNAME_" entry "_ENAME_" has been unlinked."
"RTN","PXMCLINK",260,0)
 S ^TMP("PXXMZ",$J,1,0)=SUBJECT
"RTN","PXMCLINK",261,0)
 S ^TMP("PXXMZ",$J,2,0)="The following codes were unlinked:"
"RTN","PXMCLINK",262,0)
 S NL=2
"RTN","PXMCLINK",263,0)
 S ERROR=0,IENS=""
"RTN","PXMCLINK",264,0)
 F  S IENS=$O(UNLINK(FILENUM,IENS)) Q:IENS=""  D
"RTN","PXMCLINK",265,0)
 . D DA^DILF(IENS,.DA)
"RTN","PXMCLINK",266,0)
 . S TEMP=@GBL@(DA(1),210,DA,0)
"RTN","PXMCLINK",267,0)
 . S CODESYS=$P(TEMP,U,1)
"RTN","PXMCLINK",268,0)
 . S CODE=$P(TEMP,U,2)
"RTN","PXMCLINK",269,0)
 . S VFCSYS=$$VFCSYS(CODESYS)
"RTN","PXMCLINK",270,0)
 . S NL=NL+1,^TMP("PXXMZ",$J,NL,0)=" "_CODESYS_" "_CODE
"RTN","PXMCLINK",271,0)
 . K ^TMP($J,"LIST")
"RTN","PXMCLINK",272,0)
 . I VFCSYS=9000010.07 D
"RTN","PXMCLINK",273,0)
 .. S CODEP=$$CODEPTR(CODESYS,CODE)
"RTN","PXMCLINK",274,0)
 .. M ^TMP($J,"LIST")=^AUPNVPOV("SC",SOURCE,CODEP)
"RTN","PXMCLINK",275,0)
 . I VFCSYS=9000010.18 D
"RTN","PXMCLINK",276,0)
 .. S CODEP=$$CODEPTR(CODESYS,CODE)
"RTN","PXMCLINK",277,0)
 .. M ^TMP($J,"LIST")=^AUPNVCPT("SC",SOURCE,CODEP)
"RTN","PXMCLINK",278,0)
 . I VFCSYS=9000010.71 M ^TMP($J,"LIST")=^AUPNVSC("SCC",SOURCE,CODESYS,CODE)
"RTN","PXMCLINK",279,0)
 . S VFIEN=""
"RTN","PXMCLINK",280,0)
 . F  S VFIEN=$O(^TMP($J,"LIST",VFIEN)) Q:VFIEN=""  D
"RTN","PXMCLINK",281,0)
 .. K KFDA,MSG
"RTN","PXMCLINK",282,0)
 .. S KFDA(VFCSYS,VFIEN_",",.01)="@"
"RTN","PXMCLINK",283,0)
 .. D FILE^DIE("","KFDA","MSG")
"RTN","PXMCLINK",284,0)
 .. I $D(MSG) D  Q
"RTN","PXMCLINK",285,0)
 ... S ERROR=1
"RTN","PXMCLINK",286,0)
 ... S SUBJECT="Mapped code unlinking failed for file #"_SRCVFILE_", IEN="_IEN_", VFIEN="_VFIEN
"RTN","PXMCLINK",287,0)
 ... D SENDEMSG(SRCVFILE,IEN,SUBJECT,.MSG)
"RTN","PXMCLINK",288,0)
 . I 'ERROR S $P(@GBL@(DA(1),210,DA,0),U,4)=""
"RTN","PXMCLINK",289,0)
 I 'ERROR D 
"RTN","PXMCLINK",290,0)
 . D SETTF(.TO,.FROM)
"RTN","PXMCLINK",291,0)
 . D SEND^PXRMMSG("PXXMZ",SUBJECT,.TO,"PCE MANAGEMENT")
"RTN","PXMCLINK",292,0)
 K ^TMP($J,"LIST"),^TMP("PXXMZ",$J)
"RTN","PXMCLINK",293,0)
 Q
"RTN","PXMCLINK",294,0)
 ;
"RTN","PXMCLINK",295,0)
 ;==========================================
"RTN","PXMCLINK",296,0)
VFCSYS(CODESYS) ;Given a coding system return the associated V file number.
"RTN","PXMCLINK",297,0)
 Q $S(CODESYS="CPC":9000010.18,CODESYS="CPT":9000010.18,CODESYS="ICD":9000010.07,CODESYS="10D":9000010.07,1:9000010.71)
"RTN","PXMCLINK",298,0)
 ;
"RTN","PXMCODES")
0^17^B8655204
"RTN","PXMCODES",1,0)
PXMCODES ;SLC/PKR - Mapped codes listing for inquire. ;02/26/2016
"RTN","PXMCODES",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXMCODES",3,0)
 ;
"RTN","PXMCODES",4,0)
 ;==========================================
"RTN","PXMCODES",5,0)
MCDISP(CODELIST,NL,OUTPUT) ;Mapped codes display.
"RTN","PXMCODES",6,0)
 N ACTDT,CHDR,CODE,CODESYS,DATE,DESC,FMTSTR,INACTDT,IND,INDXDT
"RTN","PXMCODES",7,0)
 N MAPDT,NOLEX,NOUT,NP,PDATA,RESULT,TEXT,TEXTOUT
"RTN","PXMCODES",8,0)
 S FMTSTR(1)="10L1^10C2^10C2^19C2^19C2"
"RTN","PXMCODES",9,0)
 S FMTSTR(2)="15L1^60L"
"RTN","PXMCODES",10,0)
 S CHDR(1)="Code       Activation Inactivation       Mapped               Linked"
"RTN","PXMCODES",11,0)
 S CHDR(2)="---------- ---------- ------------ -------------------  -------------------"
"RTN","PXMCODES",12,0)
 S CHDR(3)="Code            Description"
"RTN","PXMCODES",13,0)
 S CHDR(4)="--------------  -----------"
"RTN","PXMCODES",14,0)
 S NL=NL+1,OUTPUT(NL)=""
"RTN","PXMCODES",15,0)
 S NL=NL+1,OUTPUT(NL)="                    Code Mappings"
"RTN","PXMCODES",16,0)
 I '$D(CODELIST) S NL=NL+1,OUTPUT(NL)="No codes are mapped" Q
"RTN","PXMCODES",17,0)
 S CODESYS=""
"RTN","PXMCODES",18,0)
 F  S CODESYS=$O(CODELIST(CODESYS)) Q:CODESYS=""  D
"RTN","PXMCODES",19,0)
 . K DESC
"RTN","PXMCODES",20,0)
 . S NL=NL+1,OUTPUT(NL)=""
"RTN","PXMCODES",21,0)
 .;ICR #5679
"RTN","PXMCODES",22,0)
 . S NL=NL+1,OUTPUT(NL)="Coding System: "_CODESYS_" = "_$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXMCODES",23,0)
 . S NL=NL+1,OUTPUT(NL)=CHDR(1)
"RTN","PXMCODES",24,0)
 . S NL=NL+1,OUTPUT(NL)=CHDR(2)
"RTN","PXMCODES",25,0)
 . S CODE=""
"RTN","PXMCODES",26,0)
 . F  S CODE=$O(CODELIST(CODESYS,CODE)) Q:CODE=""  D
"RTN","PXMCODES",27,0)
 .. S MAPDT=$$FMTE^XLFDT($P(CODELIST(CODESYS,CODE),U,1),"5Z")
"RTN","PXMCODES",28,0)
 .. S INDXDT=$$FMTE^XLFDT($P(CODELIST(CODESYS,CODE),U,2),"5Z")
"RTN","PXMCODES",29,0)
 ..;DBIA #5679
"RTN","PXMCODES",30,0)
 .. K PDATA
"RTN","PXMCODES",31,0)
 .. S NOLEX=0
"RTN","PXMCODES",32,0)
 .. S RESULT=$$PERIOD^LEXU(CODE,CODESYS,.PDATA)
"RTN","PXMCODES",33,0)
 .. I +RESULT=-1 D
"RTN","PXMCODES",34,0)
 ... S NOLEX=1
"RTN","PXMCODES",35,0)
 ...;DBIA #1997, #3991
"RTN","PXMCODES",36,0)
 ... I (CODESYS="CPC")!(CODESYS="CPT") D PERIOD^ICPTAPIU(CODE,.PDATA)
"RTN","PXMCODES",37,0)
 ... I (CODESYS="ICD")!(CODESYS="ICP") D PERIOD^ICDAPIU(CODE,.PDATA)
"RTN","PXMCODES",38,0)
 .. S ACTDT=1000101,NP=0
"RTN","PXMCODES",39,0)
 .. F  S ACTDT=$O(PDATA(ACTDT)) Q:ACTDT=""  D
"RTN","PXMCODES",40,0)
 ... S NP=NP+1
"RTN","PXMCODES",41,0)
 ... S INACTDT=$$FMTE^XLFDT($P(PDATA(ACTDT),U,1),"5Z")
"RTN","PXMCODES",42,0)
 ... S DESC(CODE)=CODE_U_$S(NOLEX=1:$P(PDATA(ACTDT),U,2),1:PDATA(ACTDT,0))
"RTN","PXMCODES",43,0)
 ... I CODESYS="SCT" S DESC(CODE)=DESC(CODE)_" "_$$SCTHIER(CODE,ACTDT)
"RTN","PXMCODES",44,0)
 ... I NP=1 S TEXT=CODE_U_$$FMTE^XLFDT(ACTDT,"5Z")_U_INACTDT_U_MAPDT_U_INDXDT
"RTN","PXMCODES",45,0)
 ... I NP>1 S TEXT=U_$$FMTE^XLFDT(ACTDT,"5Z")_U_INACTDT
"RTN","PXMCODES",46,0)
 ... D COLFMT^PXRMTEXT(FMTSTR(1),TEXT," ",.NOUT,.TEXTOUT)
"RTN","PXMCODES",47,0)
 ... F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXMCODES",48,0)
 .;Display the code descriptions.
"RTN","PXMCODES",49,0)
 . S CODE="",NP=0
"RTN","PXMCODES",50,0)
 . F  S CODE=$O(DESC(CODE)) Q:CODE=""  D
"RTN","PXMCODES",51,0)
 .. S NP=NP+1
"RTN","PXMCODES",52,0)
 .. I NP=1 D
"RTN","PXMCODES",53,0)
 ... S NL=NL+1,OUTPUT(NL)=""
"RTN","PXMCODES",54,0)
 ... S NL=NL+1,OUTPUT(NL)=CHDR(3)
"RTN","PXMCODES",55,0)
 ... S NL=NL+1,OUTPUT(NL)=CHDR(4)
"RTN","PXMCODES",56,0)
 .. D COLFMT^PXRMTEXT(FMTSTR(2),DESC(CODE)," ",.NOUT,.TEXTOUT)
"RTN","PXMCODES",57,0)
 .. F IND=1:1:NOUT S NL=NL+1,OUTPUT(NL)=TEXTOUT(IND)
"RTN","PXMCODES",58,0)
 Q
"RTN","PXMCODES",59,0)
 ;
"RTN","PXMCODES",60,0)
 ;==========================================
"RTN","PXMCODES",61,0)
SCTHIER(CODE,ACTDT) ;Return the SNOMED hierarchy.
"RTN","PXMCODES",62,0)
 N FSN,HE,HIER,HS
"RTN","PXMCODES",63,0)
 ;DBIA #5007
"RTN","PXMCODES",64,0)
 S FSN=$$GETFSN^LEXTRAN1("SCT",CODE,ACTDT)
"RTN","PXMCODES",65,0)
 S HS=$F(FSN,"(")
"RTN","PXMCODES",66,0)
 S HE=$F(FSN,")",HS)
"RTN","PXMCODES",67,0)
 S HIER=$E(FSN,HS-1,HE-1)
"RTN","PXMCODES",68,0)
 Q HIER
"RTN","PXMCODES",69,0)
 ;
"RTN","PXP211EC")
0^^B11184374
"RTN","PXP211EC",1,0)
PXP211EC ;SLC/PKR - Environment check for PX*1.0*211 ;01/23/2017
"RTN","PXP211EC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXP211EC",3,0)
 ;======================
"RTN","PXP211EC",4,0)
ENVCHK ;Environment check.
"RTN","PXP211EC",5,0)
 D DUPNAME^PXP211EC
"RTN","PXP211EC",6,0)
 I '$D(XPDABORT) D BMES^XPDUTL("The environment check passed, this build can be installed.")
"RTN","PXP211EC",7,0)
 Q
"RTN","PXP211EC",8,0)
 ;
"RTN","PXP211EC",9,0)
 ;======================
"RTN","PXP211EC",10,0)
DUPNAME ;Environment check for duplicate .01s, duplicates must be resolved
"RTN","PXP211EC",11,0)
 ;before the install.
"RTN","PXP211EC",12,0)
 N IEN,NAME,NFOUND,TEXT,UPNAME
"RTN","PXP211EC",13,0)
 S TEXT(1)=""
"RTN","PXP211EC",14,0)
 S TEXT(3)="this must be corrected before the patch can be installed."
"RTN","PXP211EC",15,0)
 ;Education Topics
"RTN","PXP211EC",16,0)
 S NAME=""
"RTN","PXP211EC",17,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXP211EC",18,0)
 . S UPNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211EC",19,0)
 . S IEN=""
"RTN","PXP211EC",20,0)
 . F  S IEN=$O(^AUTTEDT("B",NAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",21,0)
 .. S ^TMP($J,"UPNAME",UPNAME,IEN)=""
"RTN","PXP211EC",22,0)
 D BMES^XPDUTL("Checking for duplicated Education Topics ... ")
"RTN","PXP211EC",23,0)
 S UPNAME=""
"RTN","PXP211EC",24,0)
 F  S UPNAME=$O(^TMP($J,"UPNAME",UPNAME)) Q:UPNAME=""  D
"RTN","PXP211EC",25,0)
 . S IEN="",NFOUND=0
"RTN","PXP211EC",26,0)
 . F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  S NFOUND=NFOUND+1
"RTN","PXP211EC",27,0)
 . I NFOUND>1 D
"RTN","PXP211EC",28,0)
 .. S TEXT(2)="Education Topic "_UPNAME_" is duplicated "_NFOUND_" times,"
"RTN","PXP211EC",29,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXP211EC",30,0)
 .. D MES^XPDUTL("The entries are:")
"RTN","PXP211EC",31,0)
 .. S IEN=""
"RTN","PXP211EC",32,0)
 .. F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",33,0)
 ... S NAME=$P(^AUTTEDT(IEN,0),U,1)
"RTN","PXP211EC",34,0)
 ... D MES^XPDUTL(" "_NAME_" (IEN="_IEN_")")
"RTN","PXP211EC",35,0)
 .. S XPDABORT=1
"RTN","PXP211EC",36,0)
 K ^TMP($J,"UPNAME")
"RTN","PXP211EC",37,0)
 ;
"RTN","PXP211EC",38,0)
 ;Exams
"RTN","PXP211EC",39,0)
 S NAME=""
"RTN","PXP211EC",40,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXP211EC",41,0)
 . S UPNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211EC",42,0)
 . S IEN=""
"RTN","PXP211EC",43,0)
 . F  S IEN=$O(^AUTTEDT("B",NAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",44,0)
 .. S ^TMP($J,"UPNAME",UPNAME,IEN)=""
"RTN","PXP211EC",45,0)
 D BMES^XPDUTL("Checking for duplicated Exams ... ")
"RTN","PXP211EC",46,0)
 S UPNAME=""
"RTN","PXP211EC",47,0)
 F  S UPNAME=$O(^TMP($J,"UPNAME",UPNAME)) Q:UPNAME=""  D
"RTN","PXP211EC",48,0)
 . S IEN="",NFOUND=0
"RTN","PXP211EC",49,0)
 . F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  S NFOUND=NFOUND+1
"RTN","PXP211EC",50,0)
 . I NFOUND>1 D
"RTN","PXP211EC",51,0)
 .. S TEXT(2)="Exam "_UPNAME_" is duplicated "_NFOUND_" times,"
"RTN","PXP211EC",52,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXP211EC",53,0)
 .. D MES^XPDUTL("The entries are:")
"RTN","PXP211EC",54,0)
 .. S IEN=""
"RTN","PXP211EC",55,0)
 .. F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",56,0)
 ... S NAME=$P(^AUTTEXAM(IEN,0),U,1)
"RTN","PXP211EC",57,0)
 ... D MES^XPDUTL(" "_NAME_" (IEN="_IEN_")")
"RTN","PXP211EC",58,0)
 .. S XPDABORT=1
"RTN","PXP211EC",59,0)
 K ^TMP($J,"UPNAME")
"RTN","PXP211EC",60,0)
 ;
"RTN","PXP211EC",61,0)
 ;Health Factors
"RTN","PXP211EC",62,0)
 S NAME=""
"RTN","PXP211EC",63,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:NAME=""  D
"RTN","PXP211EC",64,0)
 . S UPNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211EC",65,0)
 . S IEN=""
"RTN","PXP211EC",66,0)
 . F  S IEN=$O(^AUTTHF("B",NAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",67,0)
 .. S ^TMP($J,"UPNAME",UPNAME,IEN)=""
"RTN","PXP211EC",68,0)
 D BMES^XPDUTL("Checking for duplicated Health Factors ... ")
"RTN","PXP211EC",69,0)
 S UPNAME=""
"RTN","PXP211EC",70,0)
 F  S UPNAME=$O(^TMP($J,"UPNAME",UPNAME)) Q:UPNAME=""  D
"RTN","PXP211EC",71,0)
 . S IEN="",NFOUND=0
"RTN","PXP211EC",72,0)
 . F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  S NFOUND=NFOUND+1
"RTN","PXP211EC",73,0)
 . I NFOUND>1 D
"RTN","PXP211EC",74,0)
 .. S TEXT(2)="Health Factor "_UPNAME_" is duplicated "_NFOUND_" times,"
"RTN","PXP211EC",75,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXP211EC",76,0)
 .. D MES^XPDUTL("The entries are:")
"RTN","PXP211EC",77,0)
 .. S IEN=""
"RTN","PXP211EC",78,0)
 .. F  S IEN=$O(^TMP($J,"UPNAME",UPNAME,IEN)) Q:IEN=""  D
"RTN","PXP211EC",79,0)
 ... S NAME=$P(^AUTTHF(IEN,0),U,1)
"RTN","PXP211EC",80,0)
 ... D MES^XPDUTL(" "_NAME_" (IEN="_IEN_")")
"RTN","PXP211EC",81,0)
 .. S XPDABORT=1
"RTN","PXP211EC",82,0)
 K ^TMP($J,"UPNAME")
"RTN","PXP211EC",83,0)
 Q
"RTN","PXP211EC",84,0)
 ;
"RTN","PXP211I")
0^1^B229813073
"RTN","PXP211I",1,0)
PXP211I ;SLC/PKR - Init routine for PX*1.0*211 ;01/23/2017
"RTN","PXP211I",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXP211I",3,0)
 ;======================
"RTN","PXP211I",4,0)
BINDEX ;Make sure the "B" index matches what is in the .01.
"RTN","PXP211I",5,0)
 N BNAME,IEN,NAME
"RTN","PXP211I",6,0)
 D BMES^XPDUTL("Checking B indexes.")
"RTN","PXP211I",7,0)
 ;
"RTN","PXP211I",8,0)
 D BMES^XPDUTL("Checking Education Topics.")
"RTN","PXP211I",9,0)
 S BNAME=""
"RTN","PXP211I",10,0)
 F  S BNAME=$O(^AUTTEDT("B",BNAME)) Q:BNAME=""  D
"RTN","PXP211I",11,0)
 . S IEN=$O(^AUTTEDT("B",BNAME,""))
"RTN","PXP211I",12,0)
 . S NAME=$P($G(^AUTTEDT(IEN,0)),U,1)
"RTN","PXP211I",13,0)
 . I BNAME=NAME Q
"RTN","PXP211I",14,0)
 . D BMES^XPDUTL("Setting B index for Education Topic: "_NAME)
"RTN","PXP211I",15,0)
 . K ^AUTTEDT("B",BNAME)
"RTN","PXP211I",16,0)
 . S ^AUTTEDT("B",NAME,IEN)=""
"RTN","PXP211I",17,0)
 ;
"RTN","PXP211I",18,0)
 D BMES^XPDUTL("Checking Exams.")
"RTN","PXP211I",19,0)
 S BNAME=""
"RTN","PXP211I",20,0)
 F  S BNAME=$O(^AUTTEXAM("B",BNAME)) Q:BNAME=""  D
"RTN","PXP211I",21,0)
 . S IEN=$O(^AUTTEXAM("B",BNAME,""))
"RTN","PXP211I",22,0)
 . S NAME=$P($G(^AUTTEXAM(IEN,0)),U,1)
"RTN","PXP211I",23,0)
 . I BNAME=NAME Q
"RTN","PXP211I",24,0)
 . D BMES^XPDUTL("Setting B index for Exam: "_NAME)
"RTN","PXP211I",25,0)
 . K ^AUTTEXAM("B",BNAME)
"RTN","PXP211I",26,0)
 . S ^AUTTEXAM("B",NAME,IEN)=""
"RTN","PXP211I",27,0)
 ;
"RTN","PXP211I",28,0)
 D BMES^XPDUTL("Checking Health Factors.")
"RTN","PXP211I",29,0)
 S BNAME=""
"RTN","PXP211I",30,0)
 F  S BNAME=$O(^AUTTHF("B",BNAME)) Q:BNAME=""  D
"RTN","PXP211I",31,0)
 . S IEN=$O(^AUTTHF("B",BNAME,""))
"RTN","PXP211I",32,0)
 . S NAME=$P($G(^AUTTHF(IEN,0)),U,1)
"RTN","PXP211I",33,0)
 . I BNAME=NAME Q
"RTN","PXP211I",34,0)
 . D BMES^XPDUTL("Setting B index for Health Factor: "_NAME)
"RTN","PXP211I",35,0)
 . K ^AUTTHF("B",BNAME)
"RTN","PXP211I",36,0)
 . S ^AUTTHF("B",NAME,IEN)=""
"RTN","PXP211I",37,0)
 Q
"RTN","PXP211I",38,0)
 ;
"RTN","PXP211I",39,0)
 ;======================
"RTN","PXP211I",40,0)
GENPNAME ;For any entry missing a print names generate one.
"RTN","PXP211I",41,0)
 N IEN,IENS,FDA,MSG,NAME,PNAME,REPA,TNAME
"RTN","PXP211I",42,0)
 D HFREPA(.REPA)
"RTN","PXP211I",43,0)
 D BMES^XPDUTL("Generating Print Names for entries that do not have one.")
"RTN","PXP211I",44,0)
 ;
"RTN","PXP211I",45,0)
 D BMES^XPDUTL("Checking Education Topics.")
"RTN","PXP211I",46,0)
 S NAME=""
"RTN","PXP211I",47,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",48,0)
 . S IEN=$O(^AUTTEDT("B",NAME,""))
"RTN","PXP211I",49,0)
 . S PNAME=$P($G(^AUTTEDT(IEN,0)),U,4)
"RTN","PXP211I",50,0)
 . I PNAME'="" Q
"RTN","PXP211I",51,0)
 . K FDA,MSG
"RTN","PXP211I",52,0)
 . S IENS=IEN_","
"RTN","PXP211I",53,0)
 . S TNAME=$S($E(NAME,1,2)="ZZ":$E(NAME,3,99),1:NAME)
"RTN","PXP211I",54,0)
 . S PNAME=$$HFPNAME(TNAME,.REPA)
"RTN","PXP211I",55,0)
 . S FDA(9999999.09,IENS,.04)=PNAME
"RTN","PXP211I",56,0)
 . D BMES^XPDUTL("Setting Print Name for Education Topic: "_NAME)
"RTN","PXP211I",57,0)
 . D MES^XPDUTL("Print Name: "_PNAME)
"RTN","PXP211I",58,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",59,0)
 ;
"RTN","PXP211I",60,0)
 D BMES^XPDUTL("Checking Exams.")
"RTN","PXP211I",61,0)
 S NAME=""
"RTN","PXP211I",62,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",63,0)
 . S IEN=$O(^AUTTEXAM("B",NAME,""))
"RTN","PXP211I",64,0)
 . S PNAME=$P($G(^AUTTEXAM(IEN,200)),U,1)
"RTN","PXP211I",65,0)
 . I PNAME'="" Q
"RTN","PXP211I",66,0)
 . K FDA,MSG
"RTN","PXP211I",67,0)
 . S IENS=IEN_","
"RTN","PXP211I",68,0)
 . S TNAME=$S($E(NAME,1,2)="ZZ":$E(NAME,3,99),1:NAME)
"RTN","PXP211I",69,0)
 . S PNAME=$$HFPNAME(TNAME,.REPA)
"RTN","PXP211I",70,0)
 . S FDA(9999999.15,IENS,200)=PNAME
"RTN","PXP211I",71,0)
 . D BMES^XPDUTL("Setting Print Name for Exam: "_NAME)
"RTN","PXP211I",72,0)
 . D MES^XPDUTL("Print Name: "_PNAME)
"RTN","PXP211I",73,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",74,0)
 ;
"RTN","PXP211I",75,0)
 D BMES^XPDUTL("Checking Health Factors.")
"RTN","PXP211I",76,0)
 S NAME=""
"RTN","PXP211I",77,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:(NAME="")  D
"RTN","PXP211I",78,0)
 . S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","PXP211I",79,0)
 . S PNAME=$P($G(^AUTTHF(IEN,200)),U,1)
"RTN","PXP211I",80,0)
 . I PNAME'="" Q
"RTN","PXP211I",81,0)
 . K FDA,MSG
"RTN","PXP211I",82,0)
 . S IENS=IEN_","
"RTN","PXP211I",83,0)
 . S TNAME=$S($E(NAME,1,2)="ZZ":$E(NAME,3,99),1:NAME)
"RTN","PXP211I",84,0)
 . S PNAME=$$HFPNAME(TNAME,.REPA)
"RTN","PXP211I",85,0)
 . S FDA(9999999.64,IENS,200)=PNAME
"RTN","PXP211I",86,0)
 . D BMES^XPDUTL("Setting Print Name for Health Factor: "_NAME)
"RTN","PXP211I",87,0)
 . D MES^XPDUTL("Print Name: "_PNAME)
"RTN","PXP211I",88,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",89,0)
 Q
"RTN","PXP211I",90,0)
 ;
"RTN","PXP211I",91,0)
 ;======================
"RTN","PXP211I",92,0)
HFPNAME(NAME,REPA) ;Turn name into a print name for health factors.
"RTN","PXP211I",93,0)
 N CF,CHAR,CP,PNAME,ONC
"RTN","PXP211I",94,0)
 I $E(NAME,1,3)="VA-" S PNAME=$E(NAME,4,99)
"RTN","PXP211I",95,0)
 E  S PNAME=NAME
"RTN","PXP211I",96,0)
 S ONC=0
"RTN","PXP211I",97,0)
 I $E(NAME,1,3)="ONC" S ONC=1
"RTN","PXP211I",98,0)
 I 'ONC S PNAME=$$TITLE^XLFSTR(PNAME)
"RTN","PXP211I",99,0)
 S PNAME=$$REPLACE^XLFSTR(PNAME,.REPA)
"RTN","PXP211I",100,0)
 ;Make sure characters following those below are uppercase.
"RTN","PXP211I",101,0)
 F CHAR="-","/","\" D
"RTN","PXP211I",102,0)
 . S CP=0
"RTN","PXP211I",103,0)
 . F  S CP=$F(PNAME,CHAR,CP) Q:CP=0  D
"RTN","PXP211I",104,0)
 .. S CF=$E(PNAME,CP)
"RTN","PXP211I",105,0)
 .. S $E(PNAME,CP)=$$UP^XLFSTR(CF)
"RTN","PXP211I",106,0)
 Q PNAME
"RTN","PXP211I",107,0)
 ;
"RTN","PXP211I",108,0)
 ;======================
"RTN","PXP211I",109,0)
HFREPA(REPA) ;Establish the replacements for health factor print names.
"RTN","PXP211I",110,0)
 ;AH health factors
"RTN","PXP211I",111,0)
 S REPA("Abn ")="ABN ",REPA("Abg")="ABG"
"RTN","PXP211I",112,0)
 S REPA("Ah-bpr")="Airborne Hazard Burn Pit Registry"
"RTN","PXP211I",113,0)
 S REPA(" Cbc")=" CBC",REPA(" Cc")=" CC"
"RTN","PXP211I",114,0)
 S REPA(" Ent ")=" ENT ",REPA("/onc")="/ONC"
"RTN","PXP211I",115,0)
 ;
"RTN","PXP211I",116,0)
 ;ARCH health factors
"RTN","PXP211I",117,0)
 S REPA("Arch")="ARCH"
"RTN","PXP211I",118,0)
 S REPA("-no")="-No",REPA("-service")="-Service"
"RTN","PXP211I",119,0)
 ;
"RTN","PXP211I",120,0)
 ;CGA health factors
"RTN","PXP211I",121,0)
 S REPA("Cg ")="CG ",REPA("Cga ")="Caregiver Annual Assessment "
"RTN","PXP211I",122,0)
 S REPA(" Pc")=" PC"
"RTN","PXP211I",123,0)
 S REPA("W/out")="W/OUT",REPA("Zbi ")="ZBI "
"RTN","PXP211I",124,0)
 ;
"RTN","PXP211I",125,0)
 ;CGF health factors
"RTN","PXP211I",126,0)
 S REPA("Cgf")="Caregiver 90 Day Monitoring Assessments"
"RTN","PXP211I",127,0)
 S REPA(" Cvt")=" CVT",REPA(" Mh")=" MH"
"RTN","PXP211I",128,0)
 ;
"RTN","PXP211I",129,0)
 ;CGI health factors
"RTN","PXP211I",130,0)
 S REPA("Cgi")="Caregiver Initial Assessment"
"RTN","PXP211I",131,0)
 ;
"RTN","PXP211I",132,0)
 ;CGINT health factors
"RTN","PXP211I",133,0)
 S REPA("Cgint")="Caregiver Interim Assessment"
"RTN","PXP211I",134,0)
 ;
"RTN","PXP211I",135,0)
 ;Ebola health factors
"RTN","PXP211I",136,0)
 S REPA("W/o")="W/O"
"RTN","PXP211I",137,0)
 ;
"RTN","PXP211I",138,0)
 ;ECOE health factors
"RTN","PXP211I",139,0)
 S REPA("Aed ")="AED ",REPA("Aeds")="AEDS"
"RTN","PXP211I",140,0)
 S REPA("Ecoe")="Epilepsy Center Of Excellence"
"RTN","PXP211I",141,0)
 S REPA("Eeg ")="EEG ",REPA("Mh ")="MH ",REPA("Mri ")="MRI "
"RTN","PXP211I",142,0)
 S REPA("Pet ")="PET ",REPA("Qolie")="QOLIE"
"RTN","PXP211I",143,0)
 S REPA("Tbi")="TBI",REPA("Vid ")="VID ",REPA("Vns")="VNS"
"RTN","PXP211I",144,0)
 S REPA("Wada")="WADA"
"RTN","PXP211I",145,0)
 ;
"RTN","PXP211I",146,0)
 ;Embedded Fragments
"RTN","PXP211I",147,0)
 S REPA("Ef-")="Embedded Fragments-",REPA("-ied")="-IED"
"RTN","PXP211I",148,0)
 S REPA("rpg")="RPG"
"RTN","PXP211I",149,0)
 ;
"RTN","PXP211I",150,0)
 ;GEC health factors
"RTN","PXP211I",151,0)
 S REPA("Adl")="ADL",REPA("bipap")="BIPAP",REPA("Cpap")="CPAP"
"RTN","PXP211I",152,0)
 S REPA("Dpoa ")="DPOA ",REPA("Iadl")="IADL",REPA("Iv ")="IV "
"RTN","PXP211I",153,0)
 S REPA("Fx")="FX",REPA("Gec")="Geriatric Extended Care"
"RTN","PXP211I",154,0)
 S REPA("Geri ")="GERI "
"RTN","PXP211I",155,0)
 S REPA("-medicaid")="-Medicaid",REPA("-medicare")="-Medicare"
"RTN","PXP211I",156,0)
 S REPA("Nhcu")="NHCU",REPA("Pt-")="PT-",REPA("/pt")="/PT"
"RTN","PXP211I",157,0)
 S REPA("Pt/ot")="PT/OT",REPA("t+/-30d")="T+/-30D",REPA("Tx-")="TX-"
"RTN","PXP211I",158,0)
 S REPA("-va")="-VA",REPA("Va ")="VA ",REPA("-yes")="-Yes"
"RTN","PXP211I",159,0)
 S REPA("Wc ")="WC "
"RTN","PXP211I",160,0)
 ;
"RTN","PXP211I",161,0)
 ;Hepatitis C Virus
"RTN","PXP211I",162,0)
 S REPA("-hcv")="-Hepatitis C Virus",REPA("Hcv")="Hepatitis C Virus"
"RTN","PXP211I",163,0)
 S REPA("Hiv")="HIV"
"RTN","PXP211I",164,0)
 ;
"RTN","PXP211I",165,0)
 ;Miscellaneous
"RTN","PXP211I",166,0)
 S REPA("Aaa")="AAA",REPA("AAa")="AAA",REPA("Abd ")="ABD "
"RTN","PXP211I",167,0)
 S REPA("Cm")="cm",REPA("Fobt")="FOBT",REPA("Hpv")="HPV"
"RTN","PXP211I",168,0)
 S REPA("Ihd")="IHD",REPA("-mh")="-MH",REPA("Md ")="MD "
"RTN","PXP211I",169,0)
 S REPA("Oef")="OEF",REPA("/oif")="/OIF",REPA("Oif")="OIF"
"RTN","PXP211I",170,0)
 S REPA("Na ")="NA ",REPA("Tb ")="TB ",REPA("Zzmh")="ZZMH"
"RTN","PXP211I",171,0)
 ;
"RTN","PXP211I",172,0)
 ;MH health factors
"RTN","PXP211I",173,0)
 S REPA("2Nd")="2nd",REPA("3Rd")="3rd"
"RTN","PXP211I",174,0)
 S REPA("Act ")="ACT ",REPA("Bft ")="BFT "
"RTN","PXP211I",175,0)
 S REPA("Cbt-i")="CBT-I",REPA("Cbt-d")="CBT-D",REPA("Cog ")="COG "
"RTN","PXP211I",176,0)
 S REPA("Cpt ")="CPT ",REPA("Cqs")="CQS"
"RTN","PXP211I",177,0)
 S REPA("Dbas ")="DBAS ",REPA("Ebp ")="EBP ",REPA("Ibct ")="IBCT "
"RTN","PXP211I",178,0)
 S REPA("Ipt ")="IPT ",REPA("Isi ")="ISI ",REPA("Mh ")="MH "
"RTN","PXP211I",179,0)
 S REPA("Mst")="MST",REPA("Pct ")="PCT "
"RTN","PXP211I",180,0)
 S REPA("Pei ")="PEI ",REPA("Phq9")="PHQ-9",REPA("Q&a")="Q&A"
"RTN","PXP211I",181,0)
 S REPA("Snq ")="SNQ ",REPA(" Ssn")=" SSN",REPA("Sst")="SST"
"RTN","PXP211I",182,0)
 S REPA("Waso")="WASO"
"RTN","PXP211I",183,0)
 ;
"RTN","PXP211I",184,0)
 ;ONC health factors
"RTN","PXP211I",185,0)
 S REPA("Ecog")="ECOG",REPA("ONC ")="Oncology ",REPA("(Onc) ")=""
"RTN","PXP211I",186,0)
 S REPA("Onc Pca")="ONC PCA"
"RTN","PXP211I",187,0)
 S REPA("Pca")="PCA",REPA("Sob")="SOB",REPA("Vsas")="VSAS"
"RTN","PXP211I",188,0)
 ;
"RTN","PXP211I",189,0)
 ;ONS health factors
"RTN","PXP211I",190,0)
 S REPA("Aa ")="AA ",REPA("amb ")="AMB ",REPA("Amb ")="AMB "
"RTN","PXP211I",191,0)
 S REPA("Cant")="Can't",REPA("Ca/tbi")="CA/TBI",REPA("Cv ")="CV "
"RTN","PXP211I",192,0)
 S REPA("Etoh")="ETOH",REPA("Fr ")="FR ",REPA(" Gi")=" GI"
"RTN","PXP211I",193,0)
 S REPA("Gi ")="GI "
"RTN","PXP211I",194,0)
 S REPA("Gu ")="GU ",REPA("hn ")="HN ",REPA("Hob ")="Head of Bed "
"RTN","PXP211I",195,0)
 S REPA("hob")="Head of Bed",REPA("Ic ")="IC ",REPA("Id-")="ID-"
"RTN","PXP211I",196,0)
 S REPA(" Ii")=" II",REPA(" Iii")=" III",REPA("Iv ")="IV "
"RTN","PXP211I",197,0)
 S REPA("Ldl")="LDL"
"RTN","PXP211I",198,0)
 S REPA("Mrsa")="MRSA",REPA("Ms ")="MS ",REPA("Ntf")="NTF"
"RTN","PXP211I",199,0)
 S REPA("Ons ")="ONS "
"RTN","PXP211I",200,0)
 S REPA(" Oob")=" OOB",REPA("Pf ")="PF "
"RTN","PXP211I",201,0)
 S REPA("Pu ")="Pressure Ulcer "
"RTN","PXP211I",202,0)
 S REPA("Q2h")="Q2H",REPA("Ra ")="RA "
"RTN","PXP211I",203,0)
 S REPA(" Rn")=" RN",REPA(" Tv")=" TV"
"RTN","PXP211I",204,0)
 ;
"RTN","PXP211I",205,0)
 ;PTSD health factors
"RTN","PXP211I",206,0)
 S REPA("Ptsd")="PTSD"
"RTN","PXP211I",207,0)
 ;
"RTN","PXP211I",208,0)
 ;TBI health factors
"RTN","PXP211I",209,0)
 S REPA(" Ii")=" II",REPA(" Iii")=" III",REPA(" Iv")=" IV"
"RTN","PXP211I",210,0)
 S REPA("-pt")="-Pt"
"RTN","PXP211I",211,0)
 ;
"RTN","PXP211I",212,0)
 ;TDI health factors
"RTN","PXP211I",213,0)
 S REPA("Tdi")="Telederm Imager",REPA("Tdr")="Telederm Reader"
"RTN","PXP211I",214,0)
 ;
"RTN","PXP211I",215,0)
 ;TDR health factors
"RTN","PXP211I",216,0)
 S REPA("Pcc")="PCC"
"RTN","PXP211I",217,0)
 ;
"RTN","PXP211I",218,0)
 ;VANOD health factors
"RTN","PXP211I",219,0)
 S REPA("Vanod")="VANOD"
"RTN","PXP211I",220,0)
 ;
"RTN","PXP211I",221,0)
 ;VC health factors
"RTN","PXP211I",222,0)
 S REPA("Vc ")="Veteran's Choice "
"RTN","PXP211I",223,0)
 ;
"RTN","PXP211I",224,0)
 ;WH health factors
"RTN","PXP211I",225,0)
 S REPA("F/u")="F/U",REPA(" Hf")=" HF",REPA("le<")="LE<"
"RTN","PXP211I",226,0)
 S REPA("N/a")="N/A",REPA("Wh ")="Women's Health ",REPA("Zzwh")="ZZWH"
"RTN","PXP211I",227,0)
 Q
"RTN","PXP211I",228,0)
 ;
"RTN","PXP211I",229,0)
 ;======================
"RTN","PXP211I",230,0)
MVTREAT ;Move Treatment from sequence 13 to 15 on PXCE ADD/EDIT MENU.
"RTN","PXP211I",231,0)
 N IENM,IENT,IND
"RTN","PXP211I",232,0)
 S IENM=$$FIND1^DIC(101,"","BX","PXCE ADD/EDIT MENU")
"RTN","PXP211I",233,0)
 S IENT=$$FIND1^DIC(101,"","BX","PXCE TREATMENT ADD")
"RTN","PXP211I",234,0)
 S IND=$O(^ORD(101,IENM,10,"B",IENT,""))
"RTN","PXP211I",235,0)
 S $P(^ORD(101,IENM,10,IND,0),U,3)=15
"RTN","PXP211I",236,0)
 Q
"RTN","PXP211I",237,0)
 ;
"RTN","PXP211I",238,0)
 ;======================
"RTN","PXP211I",239,0)
PRE ;Pre-init
"RTN","PXP211I",240,0)
 D BINDEX
"RTN","PXP211I",241,0)
 D RMOLDDDS
"RTN","PXP211I",242,0)
 D MVTREAT
"RTN","PXP211I",243,0)
 Q
"RTN","PXP211I",244,0)
 ;
"RTN","PXP211I",245,0)
 ;======================
"RTN","PXP211I",246,0)
POST ;Post-init
"RTN","PXP211I",247,0)
 D SETCLASS^PXP211I
"RTN","PXP211I",248,0)
 D GENPNAME^PXP211I
"RTN","PXP211I",249,0)
 D UPCNAME^PXP211I
"RTN","PXP211I",250,0)
 ;D RENAME^PXP211I
"RTN","PXP211I",251,0)
 Q
"RTN","PXP211I",252,0)
 ;
"RTN","PXP211I",253,0)
 ;======================
"RTN","PXP211I",254,0)
RENAME ;Rename entries from the Platinum list so they start with "VA-".
"RTN","PXP211I",255,0)
 Q
"RTN","PXP211I",256,0)
 N FDA,IEN,IENS,IND,MSG,NAME,NDONE,PLTNAME,PXNAT,XPDIDTOT
"RTN","PXP211I",257,0)
 S NDONE=0,PXNAT=1,XPDIDTOT=0
"RTN","PXP211I",258,0)
 S IND=0
"RTN","PXP211I",259,0)
 F  S IND=+$O(@XPDGREF@("ED",IND)) Q:IND=0  D
"RTN","PXP211I",260,0)
 . S PLTNAME=@XPDGREF@("ED",IND)
"RTN","PXP211I",261,0)
 . S IEN=$O(^AUTTEDT("B",PLTNAME,""))
"RTN","PXP211I",262,0)
 . I IEN="" Q
"RTN","PXP211I",263,0)
 . I $E(PLTNAME,1,3)="VA-" Q
"RTN","PXP211I",264,0)
 . S XPDIDTOT=XPDIDTOT+1
"RTN","PXP211I",265,0)
 S IND=0
"RTN","PXP211I",266,0)
 F  S IND=+$O(@XPDGREF@("EX",IND)) Q:IND=0  D
"RTN","PXP211I",267,0)
 . S PLTNAME=@XPDGREF@("EX",IND)
"RTN","PXP211I",268,0)
 . S IEN=$O(^AUTTEXAM("B",PLTNAME,""))
"RTN","PXP211I",269,0)
 . I IEN="" Q
"RTN","PXP211I",270,0)
 . I $E(PLTNAME,1,3)="VA-" Q
"RTN","PXP211I",271,0)
 . S XPDIDTOT=XPDIDTOT+1
"RTN","PXP211I",272,0)
 S IND=0
"RTN","PXP211I",273,0)
 F  S IND=+$O(@XPDGREF@("HF",IND)) Q:IND=0  D
"RTN","PXP211I",274,0)
 . S PLTNAME=@XPDGREF@("HF",IND)
"RTN","PXP211I",275,0)
 . S IEN=$O(^AUTTHF("B",PLTNAME,""))
"RTN","PXP211I",276,0)
 . I IEN="" Q
"RTN","PXP211I",277,0)
 . I $E(PLTNAME,1,3)="VA-" Q
"RTN","PXP211I",278,0)
 . S XPDIDTOT=XPDIDTOT+1
"RTN","PXP211I",279,0)
 D BMES^XPDUTL("There are "_XPDIDTOT_" entries that need to be renamed.")
"RTN","PXP211I",280,0)
 I XPDIDTOT=0 Q
"RTN","PXP211I",281,0)
 ;
"RTN","PXP211I",282,0)
 D BMES^XPDUTL("Checking for Education Topics that need renamed.")
"RTN","PXP211I",283,0)
 S IND=0
"RTN","PXP211I",284,0)
 F  S IND=+$O(@XPDGREF@("ED",IND)) Q:IND=0  D
"RTN","PXP211I",285,0)
 . S PLTNAME=@XPDGREF@("ED",IND)
"RTN","PXP211I",286,0)
 . S IEN=$O(^AUTTEDT("B",PLTNAME,""))
"RTN","PXP211I",287,0)
 . I IEN="" D BMES^XPDUTL("Education Topic "_PLTNAME_" was not found!") Q
"RTN","PXP211I",288,0)
 . S NAME=$S($E(PLTNAME,1,3)="VA-":PLTNAME,1:"VA-"_PLTNAME)
"RTN","PXP211I",289,0)
 . I NAME'=PLTNAME S NDONE=NDONE+1
"RTN","PXP211I",290,0)
 . S NAME=$$UP^XLFSTR(NAME)
"RTN","PXP211I",291,0)
 . D BMES^XPDUTL(" Renaming Education Topic: "_PLTNAME)
"RTN","PXP211I",292,0)
 . D MES^XPDUTL(" To: "_NAME)
"RTN","PXP211I",293,0)
 . K FDA,MSG
"RTN","PXP211I",294,0)
 . S IENS=IEN_","
"RTN","PXP211I",295,0)
 . S FDA(9999999.09,IENS,.01)=NAME
"RTN","PXP211I",296,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",297,0)
 . D UPDATE^XPDID(NDONE)
"RTN","PXP211I",298,0)
 ;
"RTN","PXP211I",299,0)
 D BMES^XPDUTL("Checking for Health Factors that need renamed.")
"RTN","PXP211I",300,0)
 S IND=0
"RTN","PXP211I",301,0)
 F  S IND=+$O(@XPDGREF@("HF",IND)) Q:IND=0  D
"RTN","PXP211I",302,0)
 . S PLTNAME=@XPDGREF@("HF",IND)
"RTN","PXP211I",303,0)
 . S IEN=$O(^AUTTHF("B",PLTNAME,""))
"RTN","PXP211I",304,0)
 . I IEN="" D BMES^XPDUTL("Health Factor "_PLTNAME_" was not found!") Q
"RTN","PXP211I",305,0)
 . I $E(PLTNAME,1,3)="VA-" Q
"RTN","PXP211I",306,0)
 . I $E(PLTNAME,1,5)="ZZVA-" Q
"RTN","PXP211I",307,0)
 . S NAME=$S($E(PLTNAME,1,2)="ZZ":"ZZVA-"_$E(PLTNAME,3,99),$E(PLTNAME,1,3)="VA-":PLTNAME,1:"VA-"_PLTNAME)
"RTN","PXP211I",308,0)
 . I NAME'=PLTNAME S NDONE=NDONE+1
"RTN","PXP211I",309,0)
 . S NAME=$$UP^XLFSTR(NAME)
"RTN","PXP211I",310,0)
 . D BMES^XPDUTL(" Renaming Health Factor: "_PLTNAME)
"RTN","PXP211I",311,0)
 . D MES^XPDUTL(" To: "_NAME)
"RTN","PXP211I",312,0)
 . K FDA,MSG
"RTN","PXP211I",313,0)
 . S IENS=IEN_","
"RTN","PXP211I",314,0)
 . S FDA(9999999.64,IENS,.01)=NAME
"RTN","PXP211I",315,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",316,0)
 . D UPDATE^XPDID(NDONE)
"RTN","PXP211I",317,0)
 D BMES^XPDUTL("Renaming completed.")
"RTN","PXP211I",318,0)
 Q
"RTN","PXP211I",319,0)
 ;
"RTN","PXP211I",320,0)
 ;======================
"RTN","PXP211I",321,0)
RMOLDDDS ;Remove old data dictionaries.
"RTN","PXP211I",322,0)
 N DIU,TEXT
"RTN","PXP211I",323,0)
 D EN^DDIOL("Removing old data dictionaries.")
"RTN","PXP211I",324,0)
 S DIU(0)=""
"RTN","PXP211I",325,0)
 F DIU=9999999.09,9999999.15,9999999.64,9000010.16,9000010.13,9000010.23 D
"RTN","PXP211I",326,0)
 . S TEXT=" Deleting data dictionary for file # "_DIU
"RTN","PXP211I",327,0)
 . D EN^DDIOL(TEXT)
"RTN","PXP211I",328,0)
 . D EN^DIU2
"RTN","PXP211I",329,0)
 Q
"RTN","PXP211I",330,0)
 ;
"RTN","PXP211I",331,0)
 ;======================
"RTN","PXP211I",332,0)
SETCLASS ;Until a decision on national entries has been made make everything
"RTN","PXP211I",333,0)
 ;local.
"RTN","PXP211I",334,0)
 N CLASS,FDA,IEN,IENS,IND,MSG,NAME
"RTN","PXP211I",335,0)
 D BMES^XPDUTL("Setting undefined Education Topic Class fields.")
"RTN","PXP211I",336,0)
 S NAME=""
"RTN","PXP211I",337,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",338,0)
 . I NAME="VA-NATIONAL CLASS TEST" Q
"RTN","PXP211I",339,0)
 . S IEN=$O(^AUTTEDT("B",NAME,""))
"RTN","PXP211I",340,0)
 . D MES^XPDUTL(" Setting the Class of Education Topic: "_NAME_" to LOCAL.")
"RTN","PXP211I",341,0)
 . K FDA,MSG
"RTN","PXP211I",342,0)
 . S IENS=IEN_","
"RTN","PXP211I",343,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",344,0)
 . ;I $E(NAME,1,3)="VA-" S FDA(9999999.09,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",345,0)
 . S FDA(9999999.09,IENS,100)="L"
"RTN","PXP211I",346,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",347,0)
 ;
"RTN","PXP211I",348,0)
 ;Make all Exam entries local and if the name starts with "VA-"
"RTN","PXP211I",349,0)
 ;remove it.
"RTN","PXP211I",350,0)
 D BMES^XPDUTL("Setting undefined Exam Class fields.")
"RTN","PXP211I",351,0)
 S NAME=""
"RTN","PXP211I",352,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",353,0)
 . I NAME="VA-NATIONAL CLASS TEST" Q
"RTN","PXP211I",354,0)
 . S IEN=$O(^AUTTEXAM("B",NAME,""))
"RTN","PXP211I",355,0)
 . D MES^XPDUTL(" Setting the Class of EXAM: "_NAME_" to LOCAL.")
"RTN","PXP211I",356,0)
 . K FDA,MSG
"RTN","PXP211I",357,0)
 . S IENS=IEN_","
"RTN","PXP211I",358,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",359,0)
 . ;I $E(NAME,1,3)="VA-" S FDA(9999999.15,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",360,0)
 . S FDA(9999999.15,IENS,100)="L"
"RTN","PXP211I",361,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",362,0)
 ;
"RTN","PXP211I",363,0)
 D BMES^XPDUTL("Setting undefined Health Factor Class fields.")
"RTN","PXP211I",364,0)
 S NAME=""
"RTN","PXP211I",365,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",366,0)
 . I NAME="VA-NATIONAL CLASS TEST" Q
"RTN","PXP211I",367,0)
 . S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","PXP211I",368,0)
 . D MES^XPDUTL(" Setting the Class of HF: "_NAME_" to LOCAL.")
"RTN","PXP211I",369,0)
 . K FDA,MSG
"RTN","PXP211I",370,0)
 . S IENS=IEN_","
"RTN","PXP211I",371,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",372,0)
 . ;I $E(NAME,1,3)="VA-" S FDA(9999999.64,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",373,0)
 . S FDA(9999999.64,IENS,100)="L"
"RTN","PXP211I",374,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",375,0)
 ;K ^TMP($J,"HFB")
"RTN","PXP211I",376,0)
 Q
"RTN","PXP211I",377,0)
 ;
"RTN","PXP211I",378,0)
 ;======================
"RTN","PXP211I",379,0)
SETCL ;Set the Class of all entries whose Class is not already defined
"RTN","PXP211I",380,0)
 ;to local. Preserve this version, as a basis for the final SETCLASS
"RTN","PXP211I",381,0)
 ;once a decision on national entries has been made.
"RTN","PXP211I",382,0)
 N CLASS,FDA,IEN,IENS,IND,MSG,NAME
"RTN","PXP211I",383,0)
 S IND=0
"RTN","PXP211I",384,0)
 F  S IND=+$O(@XPDGREF@("ED",IND)) Q:IND=0  D
"RTN","PXP211I",385,0)
 . S NAME=@XPDGREF@("ED",IND)
"RTN","PXP211I",386,0)
 . S ^TMP($J,"EDB",NAME)=""
"RTN","PXP211I",387,0)
 ;
"RTN","PXP211I",388,0)
 D BMES^XPDUTL("Setting undefined Education Topic Class fields.")
"RTN","PXP211I",389,0)
 S NAME=""
"RTN","PXP211I",390,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",391,0)
 . S IEN=$O(^AUTTEDT("B",NAME,""))
"RTN","PXP211I",392,0)
 . S CLASS=$P($G(^AUTTEDT(IEN,100)),U,1)
"RTN","PXP211I",393,0)
 . I CLASS="N",$D(^TMP($J,"EDB",NAME)) Q
"RTN","PXP211I",394,0)
 . D MES^XPDUTL(" Setting the Class of Education Topic: "_NAME_" to LOCAL.")
"RTN","PXP211I",395,0)
 . K FDA,MSG
"RTN","PXP211I",396,0)
 . S IENS=IEN_","
"RTN","PXP211I",397,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",398,0)
 . I $E(NAME,1,3)="VA-" S FDA(9999999.09,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",399,0)
 . S FDA(9999999.09,IENS,100)="L"
"RTN","PXP211I",400,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",401,0)
 K ^TMP($J,"EDB")
"RTN","PXP211I",402,0)
 ;
"RTN","PXP211I",403,0)
 ;Make all Exam entries local and if the name starts with "VA-"
"RTN","PXP211I",404,0)
 ;remove it.
"RTN","PXP211I",405,0)
 D BMES^XPDUTL("Setting undefined Exam Class fields.")
"RTN","PXP211I",406,0)
 S NAME=""
"RTN","PXP211I",407,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",408,0)
 . S IEN=$O(^AUTTEXAM("B",NAME,""))
"RTN","PXP211I",409,0)
 . D MES^XPDUTL(" Setting the Class of EXAM: "_NAME_" to LOCAL.")
"RTN","PXP211I",410,0)
 . K FDA,MSG
"RTN","PXP211I",411,0)
 . S IENS=IEN_","
"RTN","PXP211I",412,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",413,0)
 . I $E(NAME,1,3)="VA-" S FDA(9999999.15,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",414,0)
 . S FDA(9999999.15,IENS,100)="L"
"RTN","PXP211I",415,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",416,0)
 K ^TMP($J,"EXB")
"RTN","PXP211I",417,0)
 ;
"RTN","PXP211I",418,0)
 S IND=0
"RTN","PXP211I",419,0)
 F  S IND=+$O(@XPDGREF@("HF",IND)) Q:IND=0  D
"RTN","PXP211I",420,0)
 . S NAME=@XPDGREF@("HF",IND)
"RTN","PXP211I",421,0)
 . S ^TMP($J,"HFB",NAME)=""
"RTN","PXP211I",422,0)
 ;
"RTN","PXP211I",423,0)
 D BMES^XPDUTL("Setting undefined Health Factor Class fields.")
"RTN","PXP211I",424,0)
 S NAME=""
"RTN","PXP211I",425,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",426,0)
 . S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","PXP211I",427,0)
 . S CLASS=$P($G(^AUTTHF(IEN,100)),U,1)
"RTN","PXP211I",428,0)
 . I CLASS="N",$D(^TMP($J,"HFB",NAME)) Q
"RTN","PXP211I",429,0)
 . D MES^XPDUTL(" Setting the Class of HF: "_NAME_" to LOCAL.")
"RTN","PXP211I",430,0)
 . K FDA,MSG
"RTN","PXP211I",431,0)
 . S IENS=IEN_","
"RTN","PXP211I",432,0)
 .;Remove "VA-" from any non-national entries.
"RTN","PXP211I",433,0)
 . I $E(NAME,1,3)="VA-" S FDA(9999999.64,IENS,.01)=$E(NAME,4,99)
"RTN","PXP211I",434,0)
 . S FDA(9999999.64,IENS,100)="L"
"RTN","PXP211I",435,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",436,0)
 K ^TMP($J,"HFB")
"RTN","PXP211I",437,0)
 Q
"RTN","PXP211I",438,0)
 ;
"RTN","PXP211I",439,0)
 ;======================
"RTN","PXP211I",440,0)
UPCNAME ;Make sure all entries have upppercase .01s.
"RTN","PXP211I",441,0)
 N IEN,IENS,FDA,MSG,NAME,UPCNAME
"RTN","PXP211I",442,0)
 D BMES^XPDUTL("Making sure all .01s are uppercase.")
"RTN","PXP211I",443,0)
 ;
"RTN","PXP211I",444,0)
 D BMES^XPDUTL("Checking Education Topics.")
"RTN","PXP211I",445,0)
 S NAME=""
"RTN","PXP211I",446,0)
 F  S NAME=$O(^AUTTEDT("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",447,0)
 . S UPCNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211I",448,0)
 . I NAME=UPCNAME Q
"RTN","PXP211I",449,0)
 . S IEN=$O(^AUTTEDT("B",NAME,""))
"RTN","PXP211I",450,0)
 . K FDA,MSG
"RTN","PXP211I",451,0)
 . S IENS=IEN_","
"RTN","PXP211I",452,0)
 . S FDA(9999999.09,IENS,.01)=UPCNAME
"RTN","PXP211I",453,0)
 . D BMES^XPDUTL("Setting Education Topic: "_NAME)
"RTN","PXP211I",454,0)
 . D MES^XPDUTL("To: "_UPCNAME)
"RTN","PXP211I",455,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",456,0)
 ;
"RTN","PXP211I",457,0)
 D BMES^XPDUTL("Checking Exams.")
"RTN","PXP211I",458,0)
 S NAME=""
"RTN","PXP211I",459,0)
 F  S NAME=$O(^AUTTEXAM("B",NAME)) Q:NAME=""  D
"RTN","PXP211I",460,0)
 . S UPCNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211I",461,0)
 . I NAME=UPCNAME Q
"RTN","PXP211I",462,0)
 . S IEN=$O(^AUTTEXAM("B",NAME,""))
"RTN","PXP211I",463,0)
 . K FDA,MSG
"RTN","PXP211I",464,0)
 . S IENS=IEN_","
"RTN","PXP211I",465,0)
 . S FDA(9999999.15,IENS,.01)=UPCNAME
"RTN","PXP211I",466,0)
 . D BMES^XPDUTL("Setting Exam: "_NAME)
"RTN","PXP211I",467,0)
 . D MES^XPDUTL("To: "_UPCNAME)
"RTN","PXP211I",468,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",469,0)
 ;
"RTN","PXP211I",470,0)
 D BMES^XPDUTL("Checking Health Factors.")
"RTN","PXP211I",471,0)
 S NAME=""
"RTN","PXP211I",472,0)
 F  S NAME=$O(^AUTTHF("B",NAME)) Q:(NAME="")  D
"RTN","PXP211I",473,0)
 . S UPCNAME=$$UP^XLFSTR(NAME)
"RTN","PXP211I",474,0)
 . I NAME=UPCNAME Q
"RTN","PXP211I",475,0)
 . S IEN=$O(^AUTTHF("B",NAME,""))
"RTN","PXP211I",476,0)
 . S IENS=IEN_","
"RTN","PXP211I",477,0)
 . K FDA,MSG
"RTN","PXP211I",478,0)
 . S FDA(9999999.64,IENS,.01)=UPCNAME
"RTN","PXP211I",479,0)
 . D BMES^XPDUTL("Setting Health Factor: "_NAME)
"RTN","PXP211I",480,0)
 . D MES^XPDUTL("To: "_UPCNAME)
"RTN","PXP211I",481,0)
 . D FILE^DIE("ET","FDA","MSG")
"RTN","PXP211I",482,0)
 Q
"RTN","PXP211I",483,0)
 ;
"RTN","PXSMAN")
0^18^B2333991
"RTN","PXSMAN",1,0)
PXSMAN ;SLC/PKR - Utilities for working with ScreenMan ;10/24/2016
"RTN","PXSMAN",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXSMAN",3,0)
 ;=============================================
"RTN","PXSMAN",4,0)
FSOC(FILENUM,FIELD) ;Format a set of codes for display in ScreenMan.
"RTN","PXSMAN",5,0)
 N CODES,MSG,LEN,NL,TEXTOUT
"RTN","PXSMAN",6,0)
 S CODES=$$GET1^DID(FILENUM,FIELD,"","POINTER","MSG")
"RTN","PXSMAN",7,0)
 S CODES=$TR(CODES,":","=")
"RTN","PXSMAN",8,0)
 S CODES=$$STRREP^PXRMUTIL(CODES,";",", ")
"RTN","PXSMAN",9,0)
 D FORMATS^PXRMTEXT(1,IOM,CODES,.NL,.TEXTOUT)
"RTN","PXSMAN",10,0)
 S LEN=$L(TEXTOUT(NL))
"RTN","PXSMAN",11,0)
 S:$E(TEXTOUT(NL),LEN)="," TEXTOUT(NL)=$E(TEXTOUT(NL),1,(LEN-1))
"RTN","PXSMAN",12,0)
 D HLP^DDSUTL(.TEXTOUT)
"RTN","PXSMAN",13,0)
 Q
"RTN","PXSMAN",14,0)
 ;
"RTN","PXSMAN",15,0)
 ;=============================================
"RTN","PXSMAN",16,0)
WPECAP(FNUM,DA,FIELD,MAXLEN) ;Executable caption for word-processing fields.
"RTN","PXSMAN",17,0)
 ;FNUM is the file number and FIELD is the field name. MAXLEN is
"RTN","PXSMAN",18,0)
 ;74-$L(FIELD). Pass it as parameter so it does not need to be
"RTN","PXSMAN",19,0)
 ;constantly recomputed.
"RTN","PXSMAN",20,0)
 N L1,TEXT,WPTEXT
"RTN","PXSMAN",21,0)
 S WPTEXT=$$GET^DDSVAL(FNUM,.DA,FIELD)
"RTN","PXSMAN",22,0)
 S TEXT=FIELD_": "
"RTN","PXSMAN",23,0)
 I $$WPNCHAR^PXSMAN(WPTEXT)=0 Q TEXT
"RTN","PXSMAN",24,0)
 S L1=@WPTEXT@(1,0)
"RTN","PXSMAN",25,0)
 S LEN=$L(L1)
"RTN","PXSMAN",26,0)
 Q TEXT_$S(LEN>MAXLEN:$E(L1,1,MAXLEN)_" ...",1:L1)
"RTN","PXSMAN",27,0)
 ;
"RTN","PXSMAN",28,0)
 ;=============================================
"RTN","PXSMAN",29,0)
WPNCHAR(WP) ;Return 0 if a word-processing field does not contain any text.
"RTN","PXSMAN",30,0)
 I '$D(@WP@(0)) Q 0
"RTN","PXSMAN",31,0)
 N LN,NC
"RTN","PXSMAN",32,0)
 S NC=0
"RTN","PXSMAN",33,0)
 F LN=1:1:$P(@WP@(0),U,4) Q:NC>0  S NC=NC+$L(@WP@(LN,0))
"RTN","PXSMAN",34,0)
 Q NC
"RTN","PXSMAN",35,0)
 ;
"RTN","PXSMAN",36,0)
 ;=============================================
"RTN","PXSMAN",37,0)
VUPAGE(FILENUM,UPAGE,DA,DDSERROR) ;Make sure the Upper Age is not less than
"RTN","PXSMAN",38,0)
 ;the Lower Age.
"RTN","PXSMAN",39,0)
 N LWRAGE
"RTN","PXSMAN",40,0)
 S LWRAGE=$$GET^DDSVAL(FILENUM,.DA,"LOWER AGE")
"RTN","PXSMAN",41,0)
 I UPAGE'<LWRAGE Q
"RTN","PXSMAN",42,0)
 D HLP^DDSUTL("The Upper Age cannot be less than the Lower Age.")
"RTN","PXSMAN",43,0)
 S DDSERROR=1
"RTN","PXSMAN",44,0)
 Q
"RTN","PXSMAN",45,0)
 ;
"RTN","PXVSC")
0^15^B2079807
"RTN","PXVSC",1,0)
PXVSC ;SLC/PKR - APIs for Clinical Reminder indexes. ;02/04/2016
"RTN","PXVSC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXVSC",3,0)
 ;Temporary routine - this code should go to PXPXRM.
"RTN","PXVSC",4,0)
 ;
"RTN","PXVSC",5,0)
 Q
"RTN","PXVSC",6,0)
 ;=============================================
"RTN","PXVSC",7,0)
KVSC(X,DA) ;Delete indexes for the V Standard Codes file.
"RTN","PXVSC",8,0)
 ;X(1)=CODING SYSTEM, X(2)=CODE,X(3)=DFN, X(4)=VISIT.
"RTN","PXVSC",9,0)
 N DATE
"RTN","PXVSC",10,0)
 ;If it is availble, use the Event Date/Time for the date.
"RTN","PXVSC",11,0)
 S DATE=$P($G(^AUPNVSC(DA,12)),U,1)
"RTN","PXVSC",12,0)
 I DATE="" S DATE=$P($G(^AUPNVSIT(X(4),0)),U,1)
"RTN","PXVSC",13,0)
 I DATE="" Q
"RTN","PXVSC",14,0)
 K ^PXRMINDX(9000010.71,"IP",X(1),X(2),X(3),DATE,DA)
"RTN","PXVSC",15,0)
 K ^PXRMINDX(9000010.71,"PI",X(3),X(2),X(1),DATE,DA)
"RTN","PXVSC",16,0)
 Q
"RTN","PXVSC",17,0)
 ;
"RTN","PXVSC",18,0)
 ;=============================================
"RTN","PXVSC",19,0)
SVSC(X,DA) ;Set indexes for the V Standard Codes file.
"RTN","PXVSC",20,0)
 ;X(1)=CODING SYSTEM, X(2)=CODE,X(3)=DFN, X(4)=VISIT.
"RTN","PXVSC",21,0)
 N DATE
"RTN","PXVSC",22,0)
 ;If it is availble, use the Event Date/Time for the date.
"RTN","PXVSC",23,0)
 S DATE=$P($G(^AUPNVSC(DA,12)),U,1)
"RTN","PXVSC",24,0)
 I DATE="" S DATE=$P($G(^AUPNVSIT(X(4),0)),U,1)
"RTN","PXVSC",25,0)
 I DATE="" Q
"RTN","PXVSC",26,0)
 S ^PXRMINDX(9000010.71,"IP",X(1),X(2),X(3),DATE,DA)=""
"RTN","PXVSC",27,0)
 S ^PXRMINDX(9000010.71,"PI",X(3),X(2),X(1),DATE,DA)=""
"RTN","PXVSC",28,0)
 Q
"RTN","PXVSC",29,0)
 ;
"RTN","PXVSC",30,0)
 ;=============================================
"RTN","PXVSC",31,0)
VSCDATA(DA,DATA) ;Return data for a specified V Standard Codes entry.
"RTN","PXVSC",32,0)
 N TEMP
"RTN","PXVSC",33,0)
 S TEMP=^AUPNVSC(DA,0)
"RTN","PXVSC",34,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXVSC",35,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXVSC",36,0)
 S DATA("COMMENTS")=$G(^AUPNVSC(DA,811))
"RTN","PXVSC",37,0)
 S TEMP=$G(^AUPNVSC(DA,220))
"RTN","PXVSC",38,0)
 I TEMP="" Q
"RTN","PXVSC",39,0)
 S DATA("MAGNITUDE")=$P(TEMP,U,1)
"RTN","PXVSC",40,0)
 S TEMP=$P(TEMP,U,2)
"RTN","PXVSC",41,0)
 I TEMP'="" S DATA("UCUM CODE")=$$GET1^DIQ(757.5,TEMP,.01)
"RTN","PXVSC",42,0)
 Q
"RTN","PXVSC",43,0)
 ;
"RTN","PXVSCSM")
0^35^B5919193
"RTN","PXVSCSM",1,0)
PXVSCSM ;SLC/PKR - V Standard Codes ScreenMan routines ;01/20/2017
"RTN","PXVSCSM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**211**;Aug 12, 1996;Build 84
"RTN","PXVSCSM",3,0)
 ;
"RTN","PXVSCSM",4,0)
 ;===================================
"RTN","PXVSCSM",5,0)
CODEPAOC(DA) ;Code Post-Action On Change.
"RTN","PXVSCSM",6,0)
 N CODE,CODESYS,EVENTDT,NEWCODE,SAVEDDS
"RTN","PXVSCSM",7,0)
 S CODE=$$GET^DDSVAL(9000010.71,.DA,.01)
"RTN","PXVSCSM",8,0)
 S CODESYS=$$GET^DDSVAL(9000010.71,.DA,.05)
"RTN","PXVSCSM",9,0)
 S EVENTDT=$$GET^DDSVAL(9000010.71,.DA,1201)
"RTN","PXVSCSM",10,0)
 I EVENTDT="" S EVENTDT=DT
"RTN","PXVSCSM",11,0)
 ;DBIA #5746 covers kill and set of DDS.
"RTN","PXVSCSM",12,0)
 I $D(DDS) S SAVEDDS=DDS K DDS
"RTN","PXVSCSM",13,0)
 ;Call the Lexicon search.
"RTN","PXVSCSM",14,0)
 S NEWCODE=$$GETCODE^PXLEXS(CODESYS,CODE,EVENTDT,0)
"RTN","PXVSCSM",15,0)
 ;Reset the screen so ScreenMan displays properly.
"RTN","PXVSCSM",16,0)
 I $D(SAVEDDS) D
"RTN","PXVSCSM",17,0)
 . N IOAWM0,X
"RTN","PXVSCSM",18,0)
 . S DDS=SAVEDDS
"RTN","PXVSCSM",19,0)
 . S X=0 X ^%ZOSF("RM"),^%ZOSF("TYPE-AHEAD")
"RTN","PXVSCSM",20,0)
 . S X="IOAWM0" D ENDR^%ZISS W IOAWM0
"RTN","PXVSCSM",21,0)
 . D REFRESH^DDSUTL
"RTN","PXVSCSM",22,0)
 D PUT^DDSVAL(9000010.71,.DA,.01,NEWCODE)
"RTN","PXVSCSM",23,0)
 Q
"RTN","PXVSCSM",24,0)
 ;
"RTN","PXVSCSM",25,0)
 ;===================================
"RTN","PXVSCSM",26,0)
CODEPRE(DA) ;Code pre-action.
"RTN","PXVSCSM",27,0)
 N CODESYS,TEXT
"RTN","PXVSCSM",28,0)
 S CODESYS=$$GET^DDSVAL(9000010.71,.DA,.05)
"RTN","PXVSCSM",29,0)
 ;DBIA #5679
"RTN","PXVSCSM",30,0)
 S CODESYS=$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXVSCSM",31,0)
 S TEXT(1)="Input a search term or a "_CODESYS_" code."
"RTN","PXVSCSM",32,0)
 D EN^DDIOL(.TEXT)
"RTN","PXVSCSM",33,0)
 Q
"RTN","PXVSCSM",34,0)
 ;
"RTN","PXVSCSM",35,0)
 ;===================================
"RTN","PXVSCSM",36,0)
CSYSPRE() ;Coding System pre-action.
"RTN","PXVSCSM",37,0)
 N CODESYS,CODESYSL,NL,TEXT
"RTN","PXVSCSM",38,0)
 D SCCSL^PXLEX(.CODESYSL)
"RTN","PXVSCSM",39,0)
 S TEXT(1)="The available coding systems are:"
"RTN","PXVSCSM",40,0)
 S CODESYS=0,NL=1
"RTN","PXVSCSM",41,0)
 F  S CODESYS=$O(CODESYSL(CODESYS)) Q:CODESYS=""  D
"RTN","PXVSCSM",42,0)
 .;DBIA #5679
"RTN","PXVSCSM",43,0)
 . S NL=NL+1,TEXT(NL)=" "_CODESYS_" - "_$P($$CSYS^LEXU(CODESYS),U,4)
"RTN","PXVSCSM",44,0)
 D EN^DDIOL(.TEXT)
"RTN","PXVSCSM",45,0)
 Q
"RTN","PXVSCSM",46,0)
 ;
"RTN","PXVSCSM",47,0)
 ;===================================
"RTN","PXVSCSM",48,0)
VCSYS(CODESYS) ;Coding System data validation.
"RTN","PXVSCSM",49,0)
 I CODESYS="" D  Q 0
"RTN","PXVSCSM",50,0)
 . D HLP^DDSUTL("The Coding System cannot be null.")
"RTN","PXVSCSM",51,0)
 N CODESYSL,VALID
"RTN","PXVSCSM",52,0)
 D SCCSL^PXLEX(.CODESYSL)
"RTN","PXVSCSM",53,0)
 S CODESYS=$$UP^XLFSTR(CODESYS)
"RTN","PXVSCSM",54,0)
 S VALID=$S($D(CODESYSL(CODESYS)):1,1:0)
"RTN","PXVSCSM",55,0)
 I 'VALID D HLP^DDSUTL(CODESYS_" is not a valid coding system.")
"RTN","PXVSCSM",56,0)
 Q VALID
"RTN","PXVSCSM",57,0)
 ;
"RTN","PXVSCSM",58,0)
 ;===================================
"RTN","PXVSCSM",59,0)
POSTACT(D0) ;Form Post Action
"RTN","PXVSCSM",60,0)
 Q
"RTN","PXVSCSM",61,0)
 N INACTIVE,INUSE,OUTPUT
"RTN","PXVSCSM",62,0)
 ;If the change was a deletion there is nothing else to do.
"RTN","PXVSCSM",63,0)
 I '$D(^AUTTEDT(D0)) Q
"RTN","PXVSCSM",64,0)
 ;If the education topic was inactivated check to see if it is being used.
"RTN","PXVSCSM",65,0)
 ;Need a new FileMan API to do this.
"RTN","PXVSCSM",66,0)
 S INACTIVE=$$GET^DDSVAL(9000010.71,D0,"INACTIVE FLAG")
"RTN","PXVSCSM",67,0)
 Q
"RTN","PXVSCSM",68,0)
 ;
"RTN","PXVSCSM",69,0)
 ;===================================
"RTN","PXVSCSM",70,0)
POSTSAVE(IEN) ;Form Post Save.
"RTN","PXVSCSM",71,0)
 Q
"RTN","PXVSCSM",72,0)
 ;
"RTN","PXVSCSM",73,0)
 ;===================================
"RTN","PXVSCSM",74,0)
SMANEDIT(IEN) ;ScreenMan edit for entry IEN.
"RTN","PXVSCSM",75,0)
 N DA,DDSCHANG,DDSFILE,DDSPARM,DDSSAVE,DEL,DIDEL,DIMSG,DR,DTOUT
"RTN","PXVSCSM",76,0)
 S (DDSFILE,DIDEL)=9000010.71,DDSPARM="CS",DR="[PX VSC EDIT]"
"RTN","PXVSCSM",77,0)
 S DA=IEN
"RTN","PXVSCSM",78,0)
 D ^DDS
"RTN","PXVSCSM",79,0)
 Q
"RTN","PXVSCSM",80,0)
 ;
"SEC","^DIC",9000010.71,9000010.71,0,"AUDIT")
@
"SEC","^DIC",9000010.71,9000010.71,0,"DD")
@
"SEC","^DIC",9000010.71,9000010.71,0,"DEL")
@
"SEC","^DIC",9000010.71,9000010.71,0,"LAYGO")
@
"SEC","^DIC",9000010.71,9000010.71,0,"RD")
@
"SEC","^DIC",9000010.71,9000010.71,0,"WR")
@
"VER")
8.0^22.2
"^DD",815,815,0)
FIELD^^650^25
"^DD",815,815,0,"DDA")
N
"^DD",815,815,0,"DT")
3160308
"^DD",815,815,0,"IX","B",815,.01)

"^DD",815,815,0,"NM","PCE PARAMETERS")

"^DD",815,815,0,"VRPK")
PX
"^DD",815,815,.01,0)
ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",815,815,.01,1,0)
^.1
"^DD",815,815,.01,1,1,0)
815^B
"^DD",815,815,.01,1,1,1)
S ^PX(815,"B",$E(X,1,30),DA)=""
"^DD",815,815,.01,1,1,2)
K ^PX(815,"B",$E(X,1,30),DA)
"^DD",815,815,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",815,815,.01,21,0)
^^1^1^2950718^^^^
"^DD",815,815,.01,21,1,0)
There is only "1" parameter similiar to MAS Parameters File.
"^DD",815,815,.01,"DT")
2940714
"^DD",815,815,.02,0)
SD/PCE SWITCH OVER DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",815,815,.02,3)

"^DD",815,815,.02,21,0)
^^2^2^2960909^^^^
"^DD",815,815,.02,21,1,0)
This is the date that Scheduling stops asking for Providers, Diagnoses,
"^DD",815,815,.02,21,2,0)
and Procedures and PCE collects them.
"^DD",815,815,.02,"DT")
2960909
"^DD",815,815,.03,0)
HEALTH SUMMARY START DATE^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",815,815,.03,3)
Enter the start date for displaying PCE data for the following Health Summary components: PCE Immunization, PCE Skin Test, PCE Outpatient Diagnosis, and PCE Outpatient Encounter.
"^DD",815,815,.03,21,0)
^^3^3^2960729^
"^DD",815,815,.03,21,1,0)
This date will be used to restrict view of PCE data for the following
"^DD",815,815,.03,21,2,0)
Health Summar components:  PCE Immunization, PCE Skin Test, PCE Outpatient
"^DD",815,815,.03,21,3,0)
Diagnosis, and PCOutpatient Encounter.
"^DD",815,815,.03,"DT")
2960729
"^DD",815,815,201,0)
PATIENT, CLINIC OR WARD^V^^LM;1^Q
"^DD",815,815,201,3)
Enter a Patient, Clinic, or Ward name.
"^DD",815,815,201,21,0)
^^6^6^2950811^^^^
"^DD",815,815,201,21,1,0)
This field definition is used by the PCE Encounter options.
"^DD",815,815,201,21,2,0)
The option uses this field with a Fileman Reader call to determine the
"^DD",815,815,201,21,3,0)
view to be used in building the display list.  It determines if the list
"^DD",815,815,201,21,4,0)
will be of a patient and which one or of a clinic/ward and which one.
"^DD",815,815,201,21,5,0)
  
"^DD",815,815,201,21,6,0)
No data should be put in this field.
"^DD",815,815,201,"DT")
2941114
"^DD",815,815,201,"V",0)
^.12P^2^2
"^DD",815,815,201,"V",1,0)
2^Patient^1^P^n^n
"^DD",815,815,201,"V",2,0)
44^Clinic or Ward^2^C^n^n
"^DD",815,815,202,0)
STARTUP VIEW^RS^V:VISIT/ENCOUNTER;A:APPOINTMENT;^LM;2^Q
"^DD",815,815,202,3)
This is the default list that PCE Encounter Data Entry starts in for all users.
"^DD",815,815,202,21,0)
^^3^3^2950809^
"^DD",815,815,202,21,1,0)
This is the default view for all users.  It tells which List the PCE
"^DD",815,815,202,21,2,0)
Encounter Data Entry starts up in.  If it is "V" the the list is by
"^DD",815,815,202,21,3,0)
Visit/Encounter.  If it is "A" then the list is of Appointments.
"^DD",815,815,202,"DT")
2950718
"^DD",815,815,203,0)
BEGINNING PATIENT DATE OFFSET^RNJ3,0^^LM;3^K:+X'=X!(X>999)!(X<-999)!(X?.E1"."1N.N) X
"^DD",815,815,203,3)
Type a number that is the offset from Today for the starting date of the patient list.  e.g. -30 for TODAY-30 or 5 for TODAY+5
"^DD",815,815,203,21,0)
^^5^5^2950718^
"^DD",815,815,203,21,1,0)
This is the value that determines the starting date for the list by a
"^DD",815,815,203,21,2,0)
patient in PCE Encounter Data Entry.  The number is added to today to get
"^DD",815,815,203,21,3,0)
the starting day.  e.g. If the value is -30 then the starting day is T-30,
"^DD",815,815,203,21,4,0)
or 30 days before today.  If the valuse is 5 then the starting day is T+5,
"^DD",815,815,203,21,5,0)
or 5 days after today.  If it is 0 then the starting day will be today.
"^DD",815,815,203,"DT")
2950718
"^DD",815,815,204,0)
ENDING PATIENT DATE OFFSET^RNJ3,0^^LM;4^K:+X'=X!(X>999)!(X<-999)!(X?.E1"."1N.N) X
"^DD",815,815,204,3)
Type a number that is the offset from Today for the ending date of the patient list.  e.g. -30 for TODAY-30, 5 for T+5 or 0 for Today
"^DD",815,815,204,21,0)
^^5^5^2950718^
"^DD",815,815,204,21,1,0)
This is the value that determines the ending date for the list by a
"^DD",815,815,204,21,2,0)
patient in PCE Encounter Data Entry.  The number is added to today to get
"^DD",815,815,204,21,3,0)
the ending day.  e.g. If the value is -30 then the ending day is T-30,or
"^DD",815,815,204,21,4,0)
30 days before today.  If the valuse is 5 then the ending day is T+5,or 5
"^DD",815,815,204,21,5,0)
days after today.  If it is 0 then the ending day will be today.
"^DD",815,815,204,"DT")
2950718
"^DD",815,815,205,0)
BEGINNING HOS LOC DATE OFFSET^RNJ3,0^^LM;5^K:+X'=X!(X>999)!(X<-999)!(X?.E1"."1N.N) X
"^DD",815,815,205,3)
Type a number that is the offset from Today for the starting date of the Clinic/Ward list.  e.g. -30 for TODAY-30, 5 for T+5 or 0 for Today
"^DD",815,815,205,21,0)
^^6^6^2950718^
"^DD",815,815,205,21,1,0)
This is the value that determines the starting date for the list by a
"^DD",815,815,205,21,2,0)
Clinic/Ward in PCE Encounter Data Entry.  The number is added to today to
"^DD",815,815,205,21,3,0)
get the starting day.  e.g. If the value is -30 then the starting day is
"^DD",815,815,205,21,4,0)
T-30,or 30 days before today.  If the valuse is 5 then the starting day is
"^DD",815,815,205,21,5,0)
T+5,or 5 days after today.  If it is 0 then the starting day will be
"^DD",815,815,205,21,6,0)
today.
"^DD",815,815,205,"DT")
2950718
"^DD",815,815,206,0)
ENDING HOS LOC DATE OFFSET^NJ6,2^^LM;6^S:X["$" X=$P(X,"$",2) K:X'?."-".N.1".".2N!(X>999)!(X<-999) X
"^DD",815,815,206,3)
Type a number that is the offset from Today for the ending date of the Clinic/Ward list.  e.g. -30 for TODAY-30, 5 for T+5 or 0 for Today
"^DD",815,815,206,21,0)
^^5^5^2950718^
"^DD",815,815,206,21,1,0)
This is the value that determines the ending date for the list by a
"^DD",815,815,206,21,2,0)
Clinic/Ward in PCE Encounter Data Entry.  The number is added to today to
"^DD",815,815,206,21,3,0)
get the ending day.  e.g. If the value is -30 then the ending day is
"^DD",815,815,206,21,4,0)
T-30,or 30 days before today.  If the valuse is 5 then the ending day is
"^DD",815,815,206,21,5,0)
T+5,or 5 days after today.  If it is 0 then the ending day will be today.
"^DD",815,815,206,"DT")
2950718
"^DD",815,815,301,0)
RETURN WARNINGS^RS^0:NO;1:YES;^DI;1^Q
"^DD",815,815,301,3)
Enter YES if you want the Device Interface to return warnings if there are no procedures for this encounter.
"^DD",815,815,301,21,0)
^^2^2^2970520^
"^DD",815,815,301,21,1,0)
This field determines if the Device Interface will return "WARNING"s or not
"^DD",815,815,301,21,2,0)
if there are no Procedures for this encounter.
"^DD",815,815,301,"DT")
2960301
"^DD",815,815,302,0)
MULTIPLE PRIMARY DIAGNOSES^S^0:RETURN WARNING;1:RETURN ERROR;^DI;2^Q
"^DD",815,815,302,3)
If errors are returned by the Device Interface then the whole encounter is not processed.
"^DD",815,815,302,"DT")
2960728
"^DD",815,815,303,0)
NO PRIMARY DIAGNOSIS^S^0:RETURN WARNING;1:RETURN ERROR;^DI;3^Q
"^DD",815,815,303,3)
If errors are returned by the Device Interface, then the whole encounter is not processed.
"^DD",815,815,303,21,0)
^^2^2^2970520^^^
"^DD",815,815,303,21,1,0)
This field determines if a WARNING or an ERROR will be returned if 
"^DD",815,815,303,21,2,0)
no primary diagnosis exists for this encounter.
"^DD",815,815,303,"DT")
2970520
"^DD",815,815,401,0)
DISPOSITION HOSPITAL LOCATIONS^815.0401P^^DHL;0
"^DD",815,815,501,0)
PXPT LOCATION^RP9999999.06'I^AUTTLOC(^PXPT;1^Q
"^DD",815,815,501,21,0)
^^5^5^2960810^
"^DD",815,815,501,21,1,0)
This is the facility's site name.  It points to the LOCATION file
"^DD",815,815,501,21,2,0)
(#9999999.06) which is DINUMed to the INSTITUTION file (#4).
"^DD",815,815,501,21,3,0)
 
"^DD",815,815,501,21,4,0)
This is the location that patients in the PATIENT/IHS file (#9000001) are
"^DD",815,815,501,21,5,0)
associated with.
"^DD",815,815,501,"DT")
2960810
"^DD",815,815,502,0)
PXPT LAST PATIENT LOADED^F^^PXPT;2^K:$L(X)>30!($L(X)<1) X
"^DD",815,815,502,3)
Answer must be 1-30 characters in length.
"^DD",815,815,502,21,0)
^^6^6^2960810^
"^DD",815,815,502,21,1,0)
This is a field that allows a process to keep track of the last patient
"^DD",815,815,502,21,2,0)
that was processed. In case of failure that process can find out where it
"^DD",815,815,502,21,3,0)
last completed a process and where to restart at.  If process completed
"^DD",815,815,502,21,4,0)
then this field is reset to 0.
"^DD",815,815,502,21,5,0)
 
"^DD",815,815,502,21,6,0)
Enter the number of name of the last patient processed.
"^DD",815,815,502,"DT")
2960810
"^DD",815,815,601,0)
PATCH 9 LAST VISIT PROCESSED^NJ13,0^^PATCH;1^K:+X'=X!(X>1000000000000)!(X<0)!(X?.E1"."1N.N) X
"^DD",815,815,601,3)
This value is set by patch PX*1*9 and should not be changed
"^DD",815,815,601,"DT")
2961021
"^DD",815,815,602,0)
PATCH 27 LAST DATE PROCESSED^D^^PATCH;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",815,815,602,21,0)
^^5^5^2970324^
"^DD",815,815,602,21,1,0)
This is the date and time of the last visit processed by PCE patch 27.
"^DD",815,815,602,21,2,0)
This date starts at the last visit at the time the patch is installed and
"^DD",815,815,602,21,3,0)
works backward through the visit tell all visit since 10/1/96 have been
"^DD",815,815,602,21,4,0)
processed.  If the patch cleanup has finished this will contain the date
"^DD",815,815,602,21,5,0)
and time of the first visit of 10/1/96.
"^DD",815,815,602,"DT")
2970324
"^DD",815,815,650,0)
MANAGEMENT MAIL GROUP^P3.8'^XMB(3.8,^650;1^Q
"^DD",815,815,650,3)
Enter the PCE management mail group.
"^DD",815,815,650,21,0)
^^3^3^3160308^
"^DD",815,815,650,21,1,0)
Messages relating to the management and maintenance of PCE will be sent
"^DD",815,815,650,21,2,0)
to the members of this mail group.
"^DD",815,815,650,21,3,0)

"^DD",815,815,650,"DT")
3160308
"^DD",815,815,701,0)
DEFAULT REMINDER DISCLAIMER^815.0701^^HS1;0
"^DD",815,815,701,21,0)
^^6^6^2960416^
"^DD",815,815,701,21,1,0)
This reminder disclaimer is distributed nationally.  This disclaimer is
"^DD",815,815,701,21,2,0)
printed at the beginning of the Health Summaries' Clinical Maintenance and
"^DD",815,815,701,21,3,0)
Clinical Reminder components, unless your site chooses to create your own
"^DD",815,815,701,21,4,0)
reminder disclaimer. If the Site Reminder Disclaimer is defined, the Site
"^DD",815,815,701,21,5,0)
Reminder Disclaimer will be used by Health Summary, instead of this
"^DD",815,815,701,21,6,0)
Default Reminder Disclaimer.
"^DD",815,815,702,0)
SITE REMINDER DISCLAIMER^815.0702^^HS2;0
"^DD",815,815,801,0)
REPORT ER CLINIC NAMES^815.0801P^^RR1;0
"^DD",815,815,801,21,0)
^^4^4^2960215^
"^DD",815,815,801,21,1,0)
This multiple is used to define the laboratory test names from the
"^DD",815,815,801,21,2,0)
Laboratory Test file that will be used by the PCE Reporting Module to
"^DD",815,815,801,21,3,0)
evaluate patient data for critical values.  These tests are defined by
"^DD",815,815,801,21,4,0)
your IRM personnel or Clinical Coordinator.
"^DD",815,815,801,"DT")
2960215
"^DD",815,815,802,0)
REPORT GLUCOSE NAMES^815.0802P^^RR2;0
"^DD",815,815,803,0)
REPORT CHOLESTEROL NAMES^815.0803P^^RR3;0
"^DD",815,815,804,0)
REPORT LDL CHOLESTEROL NAMES^815.0804P^^RR4;0
"^DD",815,815,805,0)
REPORT HBA1C NAMES^815.0805P^^RR5;0
"^DD",815,815.0401,0)
DISPOSITION HOSPITAL LOCATIONS SUB-FIELD^^.01^1
"^DD",815,815.0401,0,"DT")
2960812
"^DD",815,815.0401,0,"IX","B",815.0401,.01)

"^DD",815,815.0401,0,"NM","DISPOSITION HOSPITAL LOCATIONS")

"^DD",815,815.0401,0,"UP")
815
"^DD",815,815.0401,.01,0)
DISPOSITION HOSPITAL LOCATIONS^M*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",815,815.0401,.01,1,0)
^.1
"^DD",815,815.0401,.01,1,1,0)
815.0401^B
"^DD",815,815.0401,.01,1,1,1)
S ^PX(815,DA(1),"DHL","B",$E(X,1,30),DA)=""
"^DD",815,815.0401,.01,1,1,2)
K ^PX(815,DA(1),"DHL","B",$E(X,1,30),DA)
"^DD",815,815.0401,.01,12)
Can only pick clinics
"^DD",815,815.0401,.01,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",815,815.0401,.01,"DT")
2960812
"^DD",815,815.0701,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",815,815.0701,0,"DT")
2960416
"^DD",815,815.0701,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",815,815.0701,0,"UP")
815
"^DD",815,815.0701,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",815,815.0701,.01,3)
This is the distributed default reminder disclaimer, and is not editable.
"^DD",815,815.0701,.01,"DT")
2960416
"^DD",815,815.0702,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",815,815.0702,0,"DT")
2960416
"^DD",815,815.0702,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",815,815.0702,0,"UP")
815
"^DD",815,815.0702,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",815,815.0702,.01,3)
Enter a disclaimer to be printed at the beginning of the HS reminder components.
"^DD",815,815.0702,.01,21,0)
^^4^4^2960416^
"^DD",815,815.0702,.01,21,1,0)
This is the site-specified reminder disclaimer to use at the beginning of
"^DD",815,815.0702,.01,21,2,0)
the Health Summary "Clinical Maintenance" and "Clinical Reminder"
"^DD",815,815.0702,.01,21,3,0)
components.  When this field is blank, the DEFAULT REMINDER DISCLAIMER
"^DD",815,815.0702,.01,21,4,0)
will be used in the Health Summary.
"^DD",815,815.0702,.01,"DT")
2960416
"^DD",815,815.0801,0)
REPORT ER CLINIC NAMES SUB-FIELD^^.01^1
"^DD",815,815.0801,0,"DT")
2960216
"^DD",815,815.0801,0,"IX","B",815.0801,.01)

"^DD",815,815.0801,0,"NM","REPORT ER CLINIC NAMES")

"^DD",815,815.0801,0,"UP")
815
"^DD",815,815.0801,.01,0)
ER CLINIC NAME^MP44'^SC(^0;1^Q
"^DD",815,815.0801,.01,1,0)
^.1
"^DD",815,815.0801,.01,1,1,0)
815.0801^B
"^DD",815,815.0801,.01,1,1,1)
S ^PX(815,DA(1),"RR1","B",$E(X,1,30),DA)=""
"^DD",815,815.0801,.01,1,1,2)
K ^PX(815,DA(1),"RR1","B",$E(X,1,30),DA)
"^DD",815,815.0801,.01,3)
Enter the name(s) of the "Emergency Room" clinics as they are defined within the Hospital Location file (#44)
"^DD",815,815.0801,.01,21,0)
^^4^4^2960606^
"^DD",815,815.0801,.01,21,1,0)
This field will contain the names of all clinics which are considered
"^DD",815,815.0801,.01,21,2,0)
"Emergency Rooms" to allow the clinic reporting module of the Patient Care
"^DD",815,815.0801,.01,21,3,0)
Encounter package to monitor caseload activity. Entries should be made
"^DD",815,815.0801,.01,21,4,0)
either by IRM personnel or the Clinic coordinator.
"^DD",815,815.0801,.01,"DT")
2960216
"^DD",815,815.0802,0)
REPORT GLUCOSE NAMES SUB-FIELD^^.01^1
"^DD",815,815.0802,0,"DT")
2960521
"^DD",815,815.0802,0,"IX","B",815.0802,.01)

"^DD",815,815.0802,0,"NM","REPORT GLUCOSE NAMES")

"^DD",815,815.0802,0,"UP")
815
"^DD",815,815.0802,.01,0)
GLUCOSE NAMES^M*P60'^LAB(60,^0;1^S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",815,815.0802,.01,1,0)
^.1
"^DD",815,815.0802,.01,1,1,0)
815.0802^B
"^DD",815,815.0802,.01,1,1,1)
S ^PX(815,DA(1),"RR2","B",$E(X,1,30),DA)=""
"^DD",815,815.0802,.01,1,1,2)
K ^PX(815,DA(1),"RR2","B",$E(X,1,30),DA)
"^DD",815,815.0802,.01,3)
Enter the name(s) of the BLOOD GLUCOSE lab assays as they appear in the Laboratory Test (60) file . DO NOT INCLUDE Glucose Tolerance or Fluid Glucose test names.
"^DD",815,815.0802,.01,12)
LAB TEST STORED ONLY AT THE "CH" NODE
"^DD",815,815.0802,.01,12.1)
S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH"""
"^DD",815,815.0802,.01,21,0)
^^5^5^2960606^
"^DD",815,815.0802,.01,21,1,0)
This field will contain the names of all BLOOD GLUCOSE assays as they
"^DD",815,815.0802,.01,21,2,0)
appear in the Laboratory Test (60) file to allow the clinic reporting
"^DD",815,815.0802,.01,21,3,0)
module of the Patient Care Encounter Package to monitor Quality of Care
"^DD",815,815.0802,.01,21,4,0)
Markers. Entries should be made either by IRM personnel or the Clinic
"^DD",815,815.0802,.01,21,5,0)
coordinator.
"^DD",815,815.0802,.01,"DT")
2960521
"^DD",815,815.0803,0)
REPORT CHOLESTEROL NAMES SUB-FIELD^^.01^1
"^DD",815,815.0803,0,"DT")
2960521
"^DD",815,815.0803,0,"IX","B",815.0803,.01)

"^DD",815,815.0803,0,"NM","REPORT CHOLESTEROL NAMES")

"^DD",815,815.0803,0,"UP")
815
"^DD",815,815.0803,.01,0)
CHOLESTEROL NAMES^M*P60'^LAB(60,^0;1^S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",815,815.0803,.01,1,0)
^.1
"^DD",815,815.0803,.01,1,1,0)
815.0803^B
"^DD",815,815.0803,.01,1,1,1)
S ^PX(815,DA(1),"RR3","B",$E(X,1,30),DA)=""
"^DD",815,815.0803,.01,1,1,2)
K ^PX(815,DA(1),"RR3","B",$E(X,1,30),DA)
"^DD",815,815.0803,.01,3)
Enter the name(s) of all total Cholesterol assays as they appear in Laboratory Test (60).
"^DD",815,815.0803,.01,12)
LABS STORED ONLY AT THE "CH" NODE
"^DD",815,815.0803,.01,12.1)
S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH"""
"^DD",815,815.0803,.01,21,0)
^^5^5^2960606^^
"^DD",815,815.0803,.01,21,1,0)
This field will contain the names of all TOTAL CHOLESTEROL assays as they
"^DD",815,815.0803,.01,21,2,0)
appear in the Laboratory Test (60) file to allow the clinic reporting
"^DD",815,815.0803,.01,21,3,0)
module of the Patient Care Encounter Package to monitor Quality of Care
"^DD",815,815.0803,.01,21,4,0)
Markers. Entries should be made either by IRM personnel or the Clinic
"^DD",815,815.0803,.01,21,5,0)
coordinator.
"^DD",815,815.0803,.01,"DT")
2960521
"^DD",815,815.0804,0)
REPORT LDL CHOLESTEROL NAMES SUB-FIELD^^.01^1
"^DD",815,815.0804,0,"DT")
2960521
"^DD",815,815.0804,0,"IX","B",815.0804,.01)

"^DD",815,815.0804,0,"NM","REPORT LDL CHOLESTEROL NAMES")

"^DD",815,815.0804,0,"UP")
815
"^DD",815,815.0804,.01,0)
LDL CHOLESTEROL NAMES^M*P60'^LAB(60,^0;1^S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",815,815.0804,.01,1,0)
^.1
"^DD",815,815.0804,.01,1,1,0)
815.0804^B
"^DD",815,815.0804,.01,1,1,1)
S ^PX(815,DA(1),"RR4","B",$E(X,1,30),DA)=""
"^DD",815,815.0804,.01,1,1,2)
K ^PX(815,DA(1),"RR4","B",$E(X,1,30),DA)
"^DD",815,815.0804,.01,3)
Enter the name(s) of the LDL fraction of Cholesterol assays as they appear in the Laboratory Test file (60).
"^DD",815,815.0804,.01,12)
LAB STORED ONLY AT "CH" NODE
"^DD",815,815.0804,.01,12.1)
S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH"""
"^DD",815,815.0804,.01,21,0)
^^5^5^2960606^
"^DD",815,815.0804,.01,21,1,0)
This field will contain the names of all LDL CHOLESTEROL assays as they
"^DD",815,815.0804,.01,21,2,0)
appear in the Laboratory Test (60) file to allow the clinic reporting
"^DD",815,815.0804,.01,21,3,0)
module of the Patient Care Encounter Package to monitor Quality of Care
"^DD",815,815.0804,.01,21,4,0)
Markers. Entries should be made either by IRM personnel or the Clinic
"^DD",815,815.0804,.01,21,5,0)
coordinator.
"^DD",815,815.0804,.01,"DT")
2960521
"^DD",815,815.0805,0)
REPORT HBA1C NAMES SUB-FIELD^^.01^1
"^DD",815,815.0805,0,"DT")
2960521
"^DD",815,815.0805,0,"IX","B",815.0805,.01)

"^DD",815,815.0805,0,"NM","REPORT HBA1C NAMES")

"^DD",815,815.0805,0,"UP")
815
"^DD",815,815.0805,.01,0)
HBA1C NAMES^M*P60'^LAB(60,^0;1^S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",815,815.0805,.01,1,0)
^.1
"^DD",815,815.0805,.01,1,1,0)
815.0805^B
"^DD",815,815.0805,.01,1,1,1)
S ^PX(815,DA(1),"RR5","B",$E(X,1,30),DA)=""
"^DD",815,815.0805,.01,1,1,2)
K ^PX(815,DA(1),"RR5","B",$E(X,1,30),DA)
"^DD",815,815.0805,.01,3)
Enter the name(s) of the Glycosolated Hemoglobin assays as they appear in the Laboratory Test (60) file.
"^DD",815,815.0805,.01,12)
LABS STORED ONLY AT THE "CH" NODE
"^DD",815,815.0805,.01,12.1)
S DIC("S")="I $P($P(^(0),U,5),"";"")=""CH"""
"^DD",815,815.0805,.01,21,0)
^^4^4^2960606^
"^DD",815,815.0805,.01,21,1,0)
This field will contain the names of all HBA1C assays as they appear in
"^DD",815,815.0805,.01,21,2,0)
the Laboratory Test (60) file to allow the clinic reporting module of the
"^DD",815,815.0805,.01,21,3,0)
Patient Care Encounter Package to monitor Quality of Care Markers. Entries
"^DD",815,815.0805,.01,21,4,0)
should be made either by IRM personnel or the Clinic coordinator.
"^DD",815,815.0805,.01,"DT")
2960521
"^DD",9000010.07,9000010.07,0)
FIELD^^300^30
"^DD",9000010.07,9000010.07,0,"DDA")
N
"^DD",9000010.07,9000010.07,0,"DT")
3160301
"^DD",9000010.07,9000010.07,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.07,9000010.07,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.07,9000010.07,0,"IX","AA",9000010.07,.03)

"^DD",9000010.07,9000010.07,0,"IX","AATOO",9000010.07,.02)

"^DD",9000010.07,9000010.07,0,"IX","AD",9000010.07,.03)

"^DD",9000010.07,9000010.07,0,"IX","AV10",9000010.07,.03)

"^DD",9000010.07,9000010.07,0,"IX","B",9000010.07,.01)

"^DD",9000010.07,9000010.07,0,"IX","C",9000010.07,.02)

"^DD",9000010.07,9000010.07,0,"NM","V POV")

"^DD",9000010.07,9000010.07,0,"PT",8925.9,.03)

"^DD",9000010.07,9000010.07,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",9000010.07,9000010.07,.01,0)
POV^R*P80'X^ICD9(^0;1^S:$D(APCDEIN) APCDTPCC="" S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.07,9000010.07,.01,1,0)
^.1^^-1
"^DD",9000010.07,9000010.07,.01,1,1,0)
9000010.07^B
"^DD",9000010.07,9000010.07,.01,1,1,1)
S ^AUPNVPOV("B",$E(X,1,30),DA)=""
"^DD",9000010.07,9000010.07,.01,1,1,2)
K ^AUPNVPOV("B",$E(X,1,30),DA)
"^DD",9000010.07,9000010.07,.01,3)
Enter the ICD Diagnosis code or text for the problem treated at the encounter.
"^DD",9000010.07,9000010.07,.01,12)
POV CANNOT BE AN INACTIVE CODE
"^DD",9000010.07,9000010.07,.01,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.07,9000010.07,.01,21,0)
^.001^16^16^3120404^^^^
"^DD",9000010.07,9000010.07,.01,21,1,0)
POV is an abbreviation for "Purpose of Visit".  Since Purpose of Visit is
"^DD",9000010.07,9000010.07,.01,21,2,0)
often confused with "Chief complaint", another abbreviation might better
"^DD",9000010.07,9000010.07,.01,21,3,0)
be  "Problem of Visit".  This is the Provider's conclusion about what was
"^DD",9000010.07,9000010.07,.01,21,4,0)
treated at the visit.  The Provider should be able to indicate a preferred
"^DD",9000010.07,9000010.07,.01,21,5,0)
narrative for what was treated and an ICD Diagnosis code.  If the problem
"^DD",9000010.07,9000010.07,.01,21,6,0)
treated is from the Problem List, then the problem list entry information
"^DD",9000010.07,9000010.07,.01,21,7,0)
can be used for the "Problem of Visit" entry.  The provider can
"^DD",9000010.07,9000010.07,.01,21,8,0)
alternatively have this information automatically captured via scanned
"^DD",9000010.07,9000010.07,.01,21,9,0)
Encounter Forms (e.g., AICS - the VA's Encounter Form Data Capture
"^DD",9000010.07,9000010.07,.01,21,10,0)
package).
"^DD",9000010.07,9000010.07,.01,21,11,0)
 
"^DD",9000010.07,9000010.07,.01,21,12,0)
At VA facilities, the ICD Diagnosis is screened by Inactive Code and it
"^DD",9000010.07,9000010.07,.01,21,13,0)
must be appropriate for the Patient's age and sex.
"^DD",9000010.07,9000010.07,.01,21,14,0)
 
"^DD",9000010.07,9000010.07,.01,21,15,0)
At IHS facilities, the ICD Diagnosis is screened by Inactive Code,
"^DD",9000010.07,9000010.07,.01,21,16,0)
appropriate for the Patient's age and sex, and Not "E" codes.
"^DD",9000010.07,9000010.07,.01,23,0)
^.001^1^1^3120404^^^^
"^DD",9000010.07,9000010.07,.01,23,1,0)
This is a pointer to the ICD Diagnosis (#80) file.
"^DD",9000010.07,9000010.07,.01,"AUDIT")
n
"^DD",9000010.07,9000010.07,.01,"DT")
3160301
"^DD",9000010.07,9000010.07,.019,0)
ICD NARRATIVE^CJ60^^ ; ^S X="" I $T(SDESC^PXDXUTL)'="" S X=$$SDESC^PXDXUTL(D0)
"^DD",9000010.07,9000010.07,.019,9)
^
"^DD",9000010.07,9000010.07,.019,9.01)

"^DD",9000010.07,9000010.07,.019,9.1)
S X="" I $T(SDESC^PXDXUTL)'="" S X=$$SDESC^PXDXUTL(D0)
"^DD",9000010.07,9000010.07,.019,21,0)
^^2^2^3120213^
"^DD",9000010.07,9000010.07,.019,21,1,0)
This is the computed diagnosis narrative that is defined in the ICD Diagnosis
"^DD",9000010.07,9000010.07,.019,21,2,0)
file for the ICD Diagnosis code identified in the POV (.01) field.
"^DD",9000010.07,9000010.07,.019,"DT")
3120213
"^DD",9000010.07,9000010.07,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.07,9000010.07,.02,1,0)
^.1
"^DD",9000010.07,9000010.07,.02,1,2,0)
9000010.07^AATOO^MUMPS
"^DD",9000010.07,9000010.07,.02,1,2,1)
I $P(^AUPNVPOV(DA,0),U,3)]"" S ^AUPNVPOV("AA",X,(9999999-$P(+^AUPNVSIT($P(^AUPNVPOV(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.07,9000010.07,.02,1,2,2)
I $P(^AUPNVPOV(DA,0),U,3)]"" K ^AUPNVPOV("AA",X,(9999999-$P(+^AUPNVSIT($P(^AUPNVPOV(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.07,9000010.07,.02,1,2,"%D",0)
^^4^4^2950831^
"^DD",9000010.07,9000010.07,.02,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, inverted
"^DD",9000010.07,9000010.07,.02,1,2,"%D",2,0)
visit date, and internal entry number.
"^DD",9000010.07,9000010.07,.02,1,2,"%D",3,0)
 
"^DD",9000010.07,9000010.07,.02,1,2,"%D",4,0)
    "AA",PATIENT,VISIT,DA
"^DD",9000010.07,9000010.07,.02,1,3,0)
9000010.07^C
"^DD",9000010.07,9000010.07,.02,1,3,1)
S ^AUPNVPOV("C",$E(X,1,30),DA)=""
"^DD",9000010.07,9000010.07,.02,1,3,2)
K ^AUPNVPOV("C",$E(X,1,30),DA)
"^DD",9000010.07,9000010.07,.02,1,3,"%D",0)
^^2^2^2950831^
"^DD",9000010.07,9000010.07,.02,1,3,"%D",1,0)
This cross reference allows Fileman to look-up entries in the file for a
"^DD",9000010.07,9000010.07,.02,1,3,"%D",2,0)
particular Patient.
"^DD",9000010.07,9000010.07,.02,1,3,"DT")
2950831
"^DD",9000010.07,9000010.07,.02,3)
Enter the name of the patient who had the POV treated.
"^DD",9000010.07,9000010.07,.02,21,0)
^^1^1^2950901^
"^DD",9000010.07,9000010.07,.02,21,1,0)
This is the patient whose problem or diagnosis was treated.
"^DD",9000010.07,9000010.07,.02,23,0)
^^3^3^2950901^^
"^DD",9000010.07,9000010.07,.02,23,1,0)
This is a pointer to the Patient/IHS file (#9000001), which is dinumed to
"^DD",9000010.07,9000010.07,.02,23,2,0)
the Patient file (#2).  This field is always stuffed by the application.
"^DD",9000010.07,9000010.07,.02,23,3,0)
No editing is allowed.
"^DD",9000010.07,9000010.07,.02,"AUDIT")
n
"^DD",9000010.07,9000010.07,.02,"DT")
3010927
"^DD",9000010.07,9000010.07,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVPOV(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.07,9000010.07,.03,1,0)
^.1
"^DD",9000010.07,9000010.07,.03,1,1,0)
9000010.07^AD
"^DD",9000010.07,9000010.07,.03,1,1,1)
S ^AUPNVPOV("AD",$E(X,1,30),DA)=""
"^DD",9000010.07,9000010.07,.03,1,1,2)
K ^AUPNVPOV("AD",$E(X,1,30),DA)
"^DD",9000010.07,9000010.07,.03,1,1,"%D",0)
^^4^4^2950831^
"^DD",9000010.07,9000010.07,.03,1,1,"%D",1,0)
This cross-reference is used for searches by the visit pointer and
"^DD",9000010.07,9000010.07,.03,1,1,"%D",2,0)
internal entry number.
"^DD",9000010.07,9000010.07,.03,1,1,"%D",3,0)
 
"^DD",9000010.07,9000010.07,.03,1,1,"%D",4,0)
  "AD",VISIT pointer value, DA
"^DD",9000010.07,9000010.07,.03,1,2,0)
9000010.07^AA^MUMPS
"^DD",9000010.07,9000010.07,.03,1,2,1)
Q:$P(^AUPNVPOV(DA,0),U,2)=""  S ^AUPNVPOV("AA",$P(^AUPNVPOV(DA,0),U,2),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.07,9000010.07,.03,1,2,2)
Q:$P(^AUPNVPOV(DA,0),U,2)=""  K ^AUPNVPOV("AA",$P(^AUPNVPOV(DA,0),U,2),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.07,9000010.07,.03,1,2,"%D",0)
^^4^4^2950831^
"^DD",9000010.07,9000010.07,.03,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, inverted
"^DD",9000010.07,9000010.07,.03,1,2,"%D",2,0)
visit date (from the Visit file) and the internal entry number.
"^DD",9000010.07,9000010.07,.03,1,2,"%D",3,0)
 
"^DD",9000010.07,9000010.07,.03,1,2,"%D",4,0)
    "AA",PATIENT,inverted VISIT, DA
"^DD",9000010.07,9000010.07,.03,1,3,0)
9000010.07^AV10^MUMPS
"^DD",9000010.07,9000010.07,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.07,9000010.07,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.07,9000010.07,.03,1,3,"%D",0)
^^2^2^2940126^
"^DD",9000010.07,9000010.07,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.07,9000010.07,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.07,9000010.07,.03,3)
Enter the visit date/time for the encounter where the problem was treated.
"^DD",9000010.07,9000010.07,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.07,9000010.07,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVPOV(DA,0),U,2)"
"^DD",9000010.07,9000010.07,.03,21,0)
^^20^20^2950901^
"^DD",9000010.07,9000010.07,.03,21,1,0)
The encounter entry in the Visit file that is associated with this
"^DD",9000010.07,9000010.07,.03,21,2,0)
problem treated.
"^DD",9000010.07,9000010.07,.03,21,3,0)
 
"^DD",9000010.07,9000010.07,.03,21,4,0)
In IHS facilities, this is the date and time the visit actually occurred.
"^DD",9000010.07,9000010.07,.03,21,5,0)
 
"^DD",9000010.07,9000010.07,.03,21,6,0)
In VA facilities, this is the data and time of the clinic appointment for
"^DD",9000010.07,9000010.07,.03,21,7,0)
the patient in the Scheduling package, or the date and time the encounter
"^DD",9000010.07,9000010.07,.03,21,8,0)
occurred if there was no appointment. By using the appointment date and
"^DD",9000010.07,9000010.07,.03,21,9,0)
time, clinic activity can be captured for clinical use as well as be
"^DD",9000010.07,9000010.07,.03,21,10,0)
used for billing and workload information by the appropriate VA packages.
"^DD",9000010.07,9000010.07,.03,21,11,0)
If the visit was for a walk-in, an appointment should be entered in
"^DD",9000010.07,9000010.07,.03,21,12,0)
Scheduling first in order to have the clinical information also be used
"^DD",9000010.07,9000010.07,.03,21,13,0)
for the administrative uses.
"^DD",9000010.07,9000010.07,.03,21,14,0)
 
"^DD",9000010.07,9000010.07,.03,21,15,0)
Non-clinic appointment encounters can be entered, but the clinical POV
"^DD",9000010.07,9000010.07,.03,21,16,0)
information is not accepted for billing.  
"^DD",9000010.07,9000010.07,.03,21,17,0)
 
"^DD",9000010.07,9000010.07,.03,21,18,0)
The patient encounter can be the result of an inpatient encounter.  In
"^DD",9000010.07,9000010.07,.03,21,19,0)
this case, the ward would be specified as the hospital location in the
"^DD",9000010.07,9000010.07,.03,21,20,0)
Visit File.
"^DD",9000010.07,9000010.07,.03,23,0)
^^2^2^2950901^^
"^DD",9000010.07,9000010.07,.03,23,1,0)
This is a pointer to the Visit file (#9000010).  This field is stuffed by
"^DD",9000010.07,9000010.07,.03,23,2,0)
the applications.  No editing is allowed.
"^DD",9000010.07,9000010.07,.03,"AUDIT")
n
"^DD",9000010.07,9000010.07,.03,"DT")
2890811
"^DD",9000010.07,9000010.07,.04,0)
PROVIDER NARRATIVE^R*P9999999.27^AUTNPOV(^0;4^S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.07,9000010.07,.04,3)
Enter the provider's preferred text identifying the diagnosis treated at the encounter.
"^DD",9000010.07,9000010.07,.04,12)
IHS OLD LOOKUP or VA Exact Match
"^DD",9000010.07,9000010.07,.04,12.1)
S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO")
"^DD",9000010.07,9000010.07,.04,21,0)
^^19^19^2950901^
"^DD",9000010.07,9000010.07,.04,21,1,0)
This is the providers text describing the diagnosis that was treated at
"^DD",9000010.07,9000010.07,.04,21,2,0)
the visit.  The text may contain additional information related
"^DD",9000010.07,9000010.07,.04,21,3,0)
specifically to the patient at the time of the visit (e.g, Hypertension,
"^DD",9000010.07,9000010.07,.04,21,4,0)
uncontrolled).  The providers' narrative may be different from the ICD
"^DD",9000010.07,9000010.07,.04,21,5,0)
Diagnosis files description for a code, but should not have a
"^DD",9000010.07,9000010.07,.04,21,6,0)
significantly different meaning.  The ICD Diagnosis code in the POV (.01)
"^DD",9000010.07,9000010.07,.04,21,7,0)
field should be the code that "most closely" represents the providers
"^DD",9000010.07,9000010.07,.04,21,8,0)
narrative.
"^DD",9000010.07,9000010.07,.04,21,9,0)
 
"^DD",9000010.07,9000010.07,.04,21,10,0)
In IHS facilities, this narrative is entered by data entry clerks.
"^DD",9000010.07,9000010.07,.04,21,11,0)
 
"^DD",9000010.07,9000010.07,.04,21,12,0)
In VA facilities, this narrative may be entered manually or derived from:
"^DD",9000010.07,9000010.07,.04,21,13,0)
1) the ICD Diagnosis text from the ICD Diagnosis file (Scheduling
"^DD",9000010.07,9000010.07,.04,21,14,0)
interface)
"^DD",9000010.07,9000010.07,.04,21,15,0)
2) the text defined on Encounter Forms when defining the most common
"^DD",9000010.07,9000010.07,.04,21,16,0)
diagnosis treated for a clinic (AICS or other automated data capture)
"^DD",9000010.07,9000010.07,.04,21,17,0)
3) the Problem list entries' "provider narrative", captured from the
"^DD",9000010.07,9000010.07,.04,21,18,0)
Active Problem list being checked off for problems treated at the
"^DD",9000010.07,9000010.07,.04,21,19,0)
encounter on an Encounter Form (AICS or other automated data capture).
"^DD",9000010.07,9000010.07,.04,23,0)
^^7^7^2950901^
"^DD",9000010.07,9000010.07,.04,23,1,0)
This is a pointer to the Provider Narrative file (#9999999.27).  Disk
"^DD",9000010.07,9000010.07,.04,23,2,0)
space is saved by storing ONE entry in the provider narrative file for
"^DD",9000010.07,9000010.07,.04,23,3,0)
each unique narrative.  The provider narrative is often repetitive,
"^DD",9000010.07,9000010.07,.04,23,4,0)
especially, if the data capture mode is automated.
"^DD",9000010.07,9000010.07,.04,23,5,0)
 
"^DD",9000010.07,9000010.07,.04,23,6,0)
The resulting entries in the Provider Narrative file builds a file of
"^DD",9000010.07,9000010.07,.04,23,7,0)
preferred provider terminology.
"^DD",9000010.07,9000010.07,.04,"AUDIT")

"^DD",9000010.07,9000010.07,.04,"DT")
2950831
"^DD",9000010.07,9000010.07,.06,0)
MODIFIER^*S^C:CONSIDER;D:DOUBTFUL;F:FOLLOW UP;M:MAYBE, POSSIBLE, PERHAPS;O:RULE OUT;P:PROBABLE;R:RESOLVED;S:SUSPECT, SUSPICIOUS;T:STATUS POST;^0;6^Q
"^DD",9000010.07,9000010.07,.06,3)
Enter the provider's modifier of the diagnosis treated.
"^DD",9000010.07,9000010.07,.06,10)
061/DISPEC
"^DD",9000010.07,9000010.07,.06,12)
VA screens for Rule Out, Follow Up, and Status Post
"^DD",9000010.07,9000010.07,.06,12.1)
S:DUZ("AG")="V" DIC("S")="I ""FOT""[Y"
"^DD",9000010.07,9000010.07,.06,21,0)
^^4^4^2950901^
"^DD",9000010.07,9000010.07,.06,21,1,0)
(Optional) This is how a provider may modify the diagnosis or problem
"^DD",9000010.07,9000010.07,.06,21,2,0)
treated to reflect the status of the diagnosis as of this
"^DD",9000010.07,9000010.07,.06,21,3,0)
visit. Common examples of modifiers are Rule Out, Follow-up, or Status
"^DD",9000010.07,9000010.07,.06,21,4,0)
Post.  
"^DD",9000010.07,9000010.07,.06,23,0)
^^3^3^2950901^^^
"^DD",9000010.07,9000010.07,.06,23,1,0)
The VA uses a smaller set of modifiers than the IHS does.  The file is
"^DD",9000010.07,9000010.07,.06,23,2,0)
distributed with the complete set of codes originally defined by the
"^DD",9000010.07,9000010.07,.06,23,3,0)
Indian Health Service.
"^DD",9000010.07,9000010.07,.06,"DT")
2950831
"^DD",9000010.07,9000010.07,.12,0)
PRIMARY/SECONDARY^S^P:PRIMARY;S:SECONDARY;^0;12^Q
"^DD",9000010.07,9000010.07,.12,3)
Enter the clinically pertinent ranking for this problem treated.
"^DD",9000010.07,9000010.07,.12,10)
061/DIPRIME
"^DD",9000010.07,9000010.07,.12,21,0)
^^3^3^2950901^
"^DD",9000010.07,9000010.07,.12,21,1,0)
This field represents the clinically pertinent ranking of problems treated.
"^DD",9000010.07,9000010.07,.12,21,2,0)
There is no limit on how many POV's may be identified as primary or
"^DD",9000010.07,9000010.07,.12,21,3,0)
secondary problems treated at the visit.
"^DD",9000010.07,9000010.07,.12,"DT")
3010927
"^DD",9000010.07,9000010.07,.13,0)
DATE OF INJURY^D^^0;13^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.07,9000010.07,.13,3)
Enter the date of the injury
"^DD",9000010.07,9000010.07,.13,21,0)
^^5^5^2960404^^^
"^DD",9000010.07,9000010.07,.13,21,1,0)
This is the date the injury occurred for the problem being treated.
"^DD",9000010.07,9000010.07,.13,21,2,0)
 
"^DD",9000010.07,9000010.07,.13,21,3,0)
At VA facilities, the date of injury is prompted for when the ICD
"^DD",9000010.07,9000010.07,.13,21,4,0)
Diagnosis in the POV field (.01) is for an injury with a code between
"^DD",9000010.07,9000010.07,.13,21,5,0)
800-999.999.
"^DD",9000010.07,9000010.07,.13,"DT")
2960404
"^DD",9000010.07,9000010.07,.15,0)
CLINICAL TERM^P757.01'^LEX(757.01,^0;15^Q
"^DD",9000010.07,9000010.07,.15,3)
Enter the provider narrative or clinical terminology for the diagnosis treated.
"^DD",9000010.07,9000010.07,.15,21,0)
^.001^7^7^3120210^^^
"^DD",9000010.07,9000010.07,.15,21,1,0)
This field is the clinical lexicon term which most closely represents
"^DD",9000010.07,9000010.07,.15,21,2,0)
the provider narrative of the problem treated.
"^DD",9000010.07,9000010.07,.15,21,3,0)
 
"^DD",9000010.07,9000010.07,.15,21,4,0)
At VA facilities: The clinical lexicon is automatically captured via
"^DD",9000010.07,9000010.07,.15,21,5,0)
encounter form data capture (AICS package) when the of problem being 
"^DD",9000010.07,9000010.07,.15,21,6,0)
treated is from the Active Problem List.  In the manual data entry
"^DD",9000010.07,9000010.07,.15,21,7,0)
process, there is currently no prompt for the clinical term.
"^DD",9000010.07,9000010.07,.15,23,0)
^.001^4^4^3120210^^^
"^DD",9000010.07,9000010.07,.15,23,1,0)
This field was created by the VA to capture the clinical lexicon term,
"^DD",9000010.07,9000010.07,.15,23,2,0)
as an alternative to, or in addition to the ICD Diagnosis code.  This
"^DD",9000010.07,9000010.07,.15,23,3,0)
field will primarily be populated when the diagnosis being treated at a
"^DD",9000010.07,9000010.07,.15,23,4,0)
visit is based on an entry in the Active Problem List.
"^DD",9000010.07,9000010.07,.15,"DT")
2940518
"^DD",9000010.07,9000010.07,.16,0)
PROBLEM LIST ENTRY^P9000011'^AUPNPROB(^0;16^Q
"^DD",9000010.07,9000010.07,.16,3)
Enter the problem entry from the patient's problem list for the problem treated.
"^DD",9000010.07,9000010.07,.16,21,0)
^^2^2^2950817^
"^DD",9000010.07,9000010.07,.16,21,1,0)
This field identifies what Problem List entry is related to the problem
"^DD",9000010.07,9000010.07,.16,21,2,0)
treated at the visit.
"^DD",9000010.07,9000010.07,.16,23,0)
^^5^5^2950817^
"^DD",9000010.07,9000010.07,.16,23,1,0)
This field was added for use by PCE in the VA.
"^DD",9000010.07,9000010.07,.16,23,2,0)
 
"^DD",9000010.07,9000010.07,.16,23,3,0)
Automated data capture methods, that allow the problems treated at a 
"^DD",9000010.07,9000010.07,.16,23,4,0)
visit to be selected from the active problem list, will be able to
"^DD",9000010.07,9000010.07,.16,23,5,0)
provide the problem list entry which is stored in this field.
"^DD",9000010.07,9000010.07,.16,"DT")
2930329
"^DD",9000010.07,9000010.07,.17,0)
ORDERING/RESULTING^S^O:ORDERING;R:RESULTING;OR:BOTH O&R;^0;17^Q
"^DD",9000010.07,9000010.07,.17,3)
Enter O if the diagnosis is an ordering diagnosis, enter R if the diagnosis is a resulting diagnosis and enter B if the diagnosis is used for both ordering and resulting.
"^DD",9000010.07,9000010.07,.17,21,0)
^.001^2^2^3040217^^^^
"^DD",9000010.07,9000010.07,.17,21,1,0)
This field identifies a diagnosis as being Ordering, Resulting, or
"^DD",9000010.07,9000010.07,.17,21,2,0)
both Ordering and Resulting.
"^DD",9000010.07,9000010.07,.17,23,0)
^.001^2^2^3040217^^^^
"^DD",9000010.07,9000010.07,.17,23,1,0)
Ordering diagnoses are used for facility charges in billing,
"^DD",9000010.07,9000010.07,.17,23,2,0)
resulting diagnoses are used in professional services billing.
"^DD",9000010.07,9000010.07,.17,"DT")
3040217
"^DD",9000010.07,9000010.07,300,0)
MAPPED SOURCE^FJ40^^300;1^K:$L(X)>40!($L(X)<3) X
"^DD",9000010.07,9000010.07,300,3)
Do not edit, this field is set automatically.
"^DD",9000010.07,9000010.07,300,21,0)
^.001^6^6^3160301^^
"^DD",9000010.07,9000010.07,300,21,1,0)
If this entry was created as a result of codes that were mapped to PCE
"^DD",9000010.07,9000010.07,300,21,2,0)
data types such as Education Topics, Exams, Health Factors, 
"^DD",9000010.07,9000010.07,300,21,3,0)
Immunizations, and Skin Tests this field will contain the file number
"^DD",9000010.07,9000010.07,300,21,4,0)
and internal entry number of the corresponding data type entry in the 
"^DD",9000010.07,9000010.07,300,21,5,0)
format: file number;IEN.
"^DD",9000010.07,9000010.07,300,21,6,0)

"^DD",9000010.07,9000010.07,300,"DT")
3160301
"^DD",9000010.07,9000010.07,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.07,9000010.07,1201,3)
Enter the date and time this problem was treated.
"^DD",9000010.07,9000010.07,1201,21,0)
^^7^7^2960403^^
"^DD",9000010.07,9000010.07,1201,21,1,0)
This is the actual date and time of the encounter.  This date and time may
"^DD",9000010.07,9000010.07,1201,21,2,0)
be different than the visit date and time specified in the Visit file.
"^DD",9000010.07,9000010.07,1201,21,3,0)
However it must be within 30 days of the Visit date and Not be a future
"^DD",9000010.07,9000010.07,1201,21,4,0)
date.  
"^DD",9000010.07,9000010.07,1201,21,5,0)
 
"^DD",9000010.07,9000010.07,1201,21,6,0)
This field is useful for capturing the actual time encounters take place,
"^DD",9000010.07,9000010.07,1201,21,7,0)
or when, during the encounter, something happened.
"^DD",9000010.07,9000010.07,1201,23,0)
^^9^9^2960403^^^^
"^DD",9000010.07,9000010.07,1201,23,1,0)
This field was added for use by PCE in the VA, to support the capture of
"^DD",9000010.07,9000010.07,1201,23,2,0)
the actual event date and time of the encounter which is not reflected in
"^DD",9000010.07,9000010.07,1201,23,3,0)
the Visit file entry.  IHS allows the Visit date and time to be the actual
"^DD",9000010.07,9000010.07,1201,23,4,0)
date and time. But, the VA uses the Visit date and time as the
"^DD",9000010.07,9000010.07,1201,23,5,0)
Appointment date and time, rather than the "Actual" encounter event date
"^DD",9000010.07,9000010.07,1201,23,6,0)
and time.  The Appointment date and time orientation of visits allows the
"^DD",9000010.07,9000010.07,1201,23,7,0)
VA Scheduling, billing and workload functionality to understand the
"^DD",9000010.07,9000010.07,1201,23,8,0)
linkage between the clinical data being captured for a visit and the
"^DD",9000010.07,9000010.07,1201,23,9,0)
existing Outpatient Scheduled events.
"^DD",9000010.07,9000010.07,1201,"DT")
2960403
"^DD",9000010.07,9000010.07,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.07,9000010.07,1202,3)
Enter the ordering provider.
"^DD",9000010.07,9000010.07,1202,21,0)
^^5^5^2960513^^
"^DD",9000010.07,9000010.07,1202,21,1,0)
For consistency, this field was added to each V-file.  However, for the 
"^DD",9000010.07,9000010.07,1202,21,2,0)
V POV, the Ordering Provider does not apply itself well, unless a provider
"^DD",9000010.07,9000010.07,1202,21,3,0)
is ordering another provider to treat a problem. Optionally, in the
"^DD",9000010.07,9000010.07,1202,21,4,0)
future, this field may be able to represent the provider responsible for
"^DD",9000010.07,9000010.07,1202,21,5,0)
the encounter providers work.
"^DD",9000010.07,9000010.07,1202,"DT")
2960513
"^DD",9000010.07,9000010.07,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.07,9000010.07,1204,3)
Enter the care giver who treated the problem.
"^DD",9000010.07,9000010.07,1204,21,0)
^^1^1^2960513^^^^
"^DD",9000010.07,9000010.07,1204,21,1,0)
This is the provider who treated the diagnosis at the encounter.
"^DD",9000010.07,9000010.07,1204,"DT")
2941219
"^DD",9000010.07,9000010.07,80001,0)
SERVICE CONNECTED^S^1:YES;0:NO;^800;1^Q
"^DD",9000010.07,9000010.07,80001,3)
If this problem treated is service connected, enter "YES" here.
"^DD",9000010.07,9000010.07,80001,21,0)
^^2^2^2950817^^
"^DD",9000010.07,9000010.07,80001,21,1,0)
This field is used in the VA to indicate that this problem treated at this
"^DD",9000010.07,9000010.07,80001,21,2,0)
visit was service connected.
"^DD",9000010.07,9000010.07,80001,23,0)
^^5^5^2950831^
"^DD",9000010.07,9000010.07,80001,23,1,0)
This field is used by the VA.  The data is only passed to PCE from the
"^DD",9000010.07,9000010.07,80001,23,2,0)
automated data capture of encounter form data when a Problem from the
"^DD",9000010.07,9000010.07,80001,23,3,0)
Active Problem list has been identified as the problem treated at the
"^DD",9000010.07,9000010.07,80001,23,4,0)
visit.  If the Problem List identified the Problem as Service Connected,
"^DD",9000010.07,9000010.07,80001,23,5,0)
then this Service Connected field would be automatically set to 1.
"^DD",9000010.07,9000010.07,80001,"DT")
2940331
"^DD",9000010.07,9000010.07,80002,0)
AGENT ORANGE EXPOSURE^S^1:YES;0:NO;^800;2^Q
"^DD",9000010.07,9000010.07,80002,3)
If the problem treated is related to agent orange exposure, enter "YES" here.
"^DD",9000010.07,9000010.07,80002,21,0)
^^2^2^2940331^
"^DD",9000010.07,9000010.07,80002,21,1,0)
This field is used in the VA to indicate that this problem treated at this
"^DD",9000010.07,9000010.07,80002,21,2,0)
visit was related to agent orange exposure.
"^DD",9000010.07,9000010.07,80002,23,0)
^^5^5^2950831^
"^DD",9000010.07,9000010.07,80002,23,1,0)
This field is used by the VA.  The data is only passed to PCE from
"^DD",9000010.07,9000010.07,80002,23,2,0)
the automated data capture of encounter form data.  If a problem from the
"^DD",9000010.07,9000010.07,80002,23,3,0)
Active Problem List is identified as the problem treated at the visit, and
"^DD",9000010.07,9000010.07,80002,23,4,0)
the problem has been associated with Agent Orange Exposure in the Problem
"^DD",9000010.07,9000010.07,80002,23,5,0)
List, then the POV's Agent Orange Exposure will be set to "1".
"^DD",9000010.07,9000010.07,80002,"DT")
2940331
"^DD",9000010.07,9000010.07,80003,0)
IONIZING RADIATION EXPOSURE^S^1:YES;0:NO;^800;3^Q
"^DD",9000010.07,9000010.07,80003,3)
If this problem treated is related to ionizing radiation exposure, enter "YES".
"^DD",9000010.07,9000010.07,80003,21,0)
^^2^2^2940331^
"^DD",9000010.07,9000010.07,80003,21,1,0)
This field is used in the VA to indicate that this problem treated at this
"^DD",9000010.07,9000010.07,80003,21,2,0)
visit was related to ionizing radiation exposure.
"^DD",9000010.07,9000010.07,80003,23,0)
^^5^5^2950831^
"^DD",9000010.07,9000010.07,80003,23,1,0)
This field is used by the VA.  The data is only passed to PCE from the
"^DD",9000010.07,9000010.07,80003,23,2,0)
automated data capture of encounter form data.  If a problem on the Active
"^DD",9000010.07,9000010.07,80003,23,3,0)
Problem List is identified as a problem treated at the visit, and the
"^DD",9000010.07,9000010.07,80003,23,4,0)
problem is defined as related to ionizing radiation exposure, then the POV
"^DD",9000010.07,9000010.07,80003,23,5,0)
Ionizing Radiation Exposure will be set to "1".
"^DD",9000010.07,9000010.07,80003,"DT")
2940331
"^DD",9000010.07,9000010.07,80004,0)
SW ASIA CONDITIONS^S^1:YES;0:NO;^800;4^Q
"^DD",9000010.07,9000010.07,80004,3)
If this problem treated is related to SW Asia Conditions exposure, enter "YES" here.
"^DD",9000010.07,9000010.07,80004,21,0)
^^2^2^3060510^
"^DD",9000010.07,9000010.07,80004,21,1,0)
This field is used in the VA to indicate that this problem treated at this
"^DD",9000010.07,9000010.07,80004,21,2,0)
visit was related to Southwest Asia Conditions exposure.
"^DD",9000010.07,9000010.07,80004,23,0)
^^6^6^3060510^
"^DD",9000010.07,9000010.07,80004,23,1,0)
This field is only passed to PCE from the automated data capture of
"^DD",9000010.07,9000010.07,80004,23,2,0)
encounter form data.  If a problem on the Active Problem List is
"^DD",9000010.07,9000010.07,80004,23,3,0)
identified as the problem treated at the visit, and the problem defined as
"^DD",9000010.07,9000010.07,80004,23,4,0)
being related to Southwest Asia Conditions Exposure in the Problem List,
"^DD",9000010.07,9000010.07,80004,23,5,0)
then the POV Southwest Asia Conditions Exposure will automatically be set
"^DD",9000010.07,9000010.07,80004,23,6,0)
to "1".
"^DD",9000010.07,9000010.07,80004,"DT")
3060627
"^DD",9000010.07,9000010.07,80005,0)
MILITARY SEXUAL TRAUMA^S^1:YES;0:NO;^800;5^Q
"^DD",9000010.07,9000010.07,80005,3)
If this Diagnosis code is related to Military Sexual Trauma, enter a "YES" here
"^DD",9000010.07,9000010.07,80005,21,0)
^.001^2^2^3030613^^^^
"^DD",9000010.07,9000010.07,80005,21,1,0)
This field will be used to indicate if this Diagnosis code was
"^DD",9000010.07,9000010.07,80005,21,2,0)
related to a Military Sexual Trauma problem.
"^DD",9000010.07,9000010.07,80005,"DT")
3030613
"^DD",9000010.07,9000010.07,80006,0)
HEAD AND/OR NECK CANCER^S^1:YES;0:NO;^800;6^Q
"^DD",9000010.07,9000010.07,80006,3)
If this Diagnosis is treating a problem related to Head/Neck Cancer.
"^DD",9000010.07,9000010.07,80006,21,0)
^.001^2^2^3120210^^^^
"^DD",9000010.07,9000010.07,80006,21,1,0)
This field will be used to indicate if this Diagnosis code was
"^DD",9000010.07,9000010.07,80006,21,2,0)
related to Head and/or Neck Cancer.
"^DD",9000010.07,9000010.07,80006,"DT")
3030613
"^DD",9000010.07,9000010.07,80007,0)
COMBAT VETERAN^S^1:YES;0:NO;^800;7^Q
"^DD",9000010.07,9000010.07,80007,3)
If this visit is treating a problem possibly related to combat.
"^DD",9000010.07,9000010.07,80007,21,0)
^^2^2^3031118^
"^DD",9000010.07,9000010.07,80007,21,1,0)
This field is used to indicate that the visit represents treatment of a
"^DD",9000010.07,9000010.07,80007,21,2,0)
VA patient for a problem that is possibly related to combat.
"^DD",9000010.07,9000010.07,80007,"DT")
3031118
"^DD",9000010.07,9000010.07,80008,0)
PROJ 112/SHAD^S^1:YES;0:NO;^800;8^Q
"^DD",9000010.07,9000010.07,80008,3)
If this Diagnosis is treating a problem related to PROJ 112/SHAD.
"^DD",9000010.07,9000010.07,80008,21,0)
^^4^4^3050602^
"^DD",9000010.07,9000010.07,80008,21,1,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",9000010.07,9000010.07,80008,21,2,0)
and land-based biological and chemical testing that was conducted by the
"^DD",9000010.07,9000010.07,80008,21,3,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",9000010.07,9000010.07,80008,21,4,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",9000010.07,9000010.07,80008,"DT")
3050602
"^DD",9000010.07,9000010.07,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.07,9000010.07,80101,21,0)
^^2^2^2950817^
"^DD",9000010.07,9000010.07,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any measurement
"^DD",9000010.07,9000010.07,80101,21,2,0)
data is being edited from the original entry of data.
"^DD",9000010.07,9000010.07,80101,23,0)
^^2^2^2950817^
"^DD",9000010.07,9000010.07,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of
"^DD",9000010.07,9000010.07,80101,23,2,0)
the record to determine if the edited flag should be set to "1".
"^DD",9000010.07,9000010.07,80101,"DT")
2940308
"^DD",9000010.07,9000010.07,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.07,9000010.07,80102,3)
Answer must be 2-85 characters in length.
"^DD",9000010.07,9000010.07,80102,"DT")
2960509
"^DD",9000010.07,9000010.07,80201,0)
PROVIDER NARRATIVE CATEGORY^*P9999999.27^AUTNPOV(^802;1^S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.07,9000010.07,80201,3)
Enter the category narrative related to this problem treated.
"^DD",9000010.07,9000010.07,80201,12)
OLD LOOKUP
"^DD",9000010.07,9000010.07,80201,12.1)
S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO")
"^DD",9000010.07,9000010.07,80201,21,0)
^^1^1^2950831^
"^DD",9000010.07,9000010.07,80201,21,1,0)
This field is the category narrative related to the problem treated.
"^DD",9000010.07,9000010.07,80201,23,0)
^^7^7^2950831^
"^DD",9000010.07,9000010.07,80201,23,1,0)
This field is used by the VA when capturing encounter form information via
"^DD",9000010.07,9000010.07,80201,23,2,0)
scanning (e.g., such as AICS scanning) or workstation data capture
"^DD",9000010.07,9000010.07,80201,23,3,0)
methods.  This field is used to document how providers group the clinical
"^DD",9000010.07,9000010.07,80201,23,4,0)
terminology being used to document encounters. Providers may group the
"^DD",9000010.07,9000010.07,80201,23,5,0)
problems which may be selected under specific headers on the encounter
"^DD",9000010.07,9000010.07,80201,23,6,0)
form definition.  This field is used to store the actual header text used
"^DD",9000010.07,9000010.07,80201,23,7,0)
by the provider.
"^DD",9000010.07,9000010.07,80201,"DT")
2940421
"^DD",9000010.07,9000010.07,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.07,9000010.07,81101,3)
Answer must be 1-245 characters in length.
"^DD",9000010.07,9000010.07,81101,"DT")
2950711
"^DD",9000010.07,9000010.07,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.07,9000010.07,81201,"DT")
2960509
"^DD",9000010.07,9000010.07,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.07,9000010.07,81202,"DT")
2960509
"^DD",9000010.07,9000010.07,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.07,9000010.07,81203,"DT")
2960509
"^DD",9000010.13,9000010.13,0)
FIELD^^221^15
"^DD",9000010.13,9000010.13,0,"DDA")
N
"^DD",9000010.13,9000010.13,0,"DT")
3150828
"^DD",9000010.13,9000010.13,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.13,9000010.13,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.13,9000010.13,0,"IX","AA",9000010.13,.03)

"^DD",9000010.13,9000010.13,0,"IX","AATOO",9000010.13,.01)

"^DD",9000010.13,9000010.13,0,"IX","AATOO2",9000010.13,.02)

"^DD",9000010.13,9000010.13,0,"IX","AD",9000010.13,.03)

"^DD",9000010.13,9000010.13,0,"IX","AV10",9000010.13,.03)

"^DD",9000010.13,9000010.13,0,"IX","B",9000010.13,.01)

"^DD",9000010.13,9000010.13,0,"IX","C",9000010.13,.02)

"^DD",9000010.13,9000010.13,0,"NM","V EXAM")

"^DD",9000010.13,9000010.13,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",9000010.13,9000010.13,.01,0)
EXAM^R*P9999999.15'^AUTTEXAM(^0;1^S DIC("S")="I $P(^(0),U,4)'=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.13,9000010.13,.01,1,0)
^.1^^-1
"^DD",9000010.13,9000010.13,.01,1,1,0)
9000010.13^B
"^DD",9000010.13,9000010.13,.01,1,1,1)
S ^AUPNVXAM("B",$E(X,1,30),DA)=""
"^DD",9000010.13,9000010.13,.01,1,1,2)
K ^AUPNVXAM("B",$E(X,1,30),DA)
"^DD",9000010.13,9000010.13,.01,1,3,0)
9000010.13^AATOO^MUMPS
"^DD",9000010.13,9000010.13,.01,1,3,1)
I $P(^AUPNVXAM(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVXAM("AA",$P(^AUPNVXAM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVXAM(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.13,9000010.13,.01,1,3,2)
I $P(^AUPNVXAM(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVXAM("AA",$P(^AUPNVXAM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVXAM(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.13,9000010.13,.01,1,3,"%D",0)
^^5^5^2950901^
"^DD",9000010.13,9000010.13,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by patient, Exam
"^DD",9000010.13,9000010.13,.01,1,3,"%D",2,0)
pointer, inverted visit date, and internal entry number.
"^DD",9000010.13,9000010.13,.01,1,3,"%D",3,0)
 
"^DD",9000010.13,9000010.13,.01,1,3,"%D",4,0)
 
"^DD",9000010.13,9000010.13,.01,1,3,"%D",5,0)
    "AA",PATIENT,EXAM,VISIT,DA
"^DD",9000010.13,9000010.13,.01,3)
Enter the exam which was done to the patient.
"^DD",9000010.13,9000010.13,.01,12)
Allow only active Exams to be selected.
"^DD",9000010.13,9000010.13,.01,12.1)
S DIC("S")="I $P(^(0),U,4)'=1"
"^DD",9000010.13,9000010.13,.01,21,0)
^^2^2^2951024^^
"^DD",9000010.13,9000010.13,.01,21,1,0)
This is the entry in the Exam file that represents what type of exam was
"^DD",9000010.13,9000010.13,.01,21,2,0)
done at the encounter.
"^DD",9000010.13,9000010.13,.01,"AUDIT")
n
"^DD",9000010.13,9000010.13,.01,"DT")
3010927
"^DD",9000010.13,9000010.13,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.13,9000010.13,.02,1,0)
^.1
"^DD",9000010.13,9000010.13,.02,1,2,0)
9000010.13^AATOO2^MUMPS
"^DD",9000010.13,9000010.13,.02,1,2,1)
I $P(^AUPNVXAM(DA,0),U,3)]"" S ^AUPNVXAM("AA",X,+^AUPNVXAM(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVXAM(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.13,9000010.13,.02,1,2,2)
I $P(^AUPNVXAM(DA,0),U,3)]"" K ^AUPNVXAM("AA",X,+^AUPNVXAM(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVXAM(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.13,9000010.13,.02,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.13,9000010.13,.02,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, Exam
"^DD",9000010.13,9000010.13,.02,1,2,"%D",2,0)
pointer, inverted visit, and internal entry number.
"^DD",9000010.13,9000010.13,.02,1,2,"%D",3,0)
 
"^DD",9000010.13,9000010.13,.02,1,2,"%D",4,0)
   "AA",PATIENT,EXAM,VISIT,DA
"^DD",9000010.13,9000010.13,.02,1,3,0)
9000010.13^C
"^DD",9000010.13,9000010.13,.02,1,3,1)
S ^AUPNVXAM("C",$E(X,1,30),DA)=""
"^DD",9000010.13,9000010.13,.02,1,3,2)
K ^AUPNVXAM("C",$E(X,1,30),DA)
"^DD",9000010.13,9000010.13,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000010.13,9000010.13,.02,1,3,"%D",1,0)
This cross reference is used for look-up of exams by patient.
"^DD",9000010.13,9000010.13,.02,1,3,"DT")
2950901
"^DD",9000010.13,9000010.13,.02,3)
Enter the patient who received the exam.
"^DD",9000010.13,9000010.13,.02,21,0)
^^1^1^2950901^
"^DD",9000010.13,9000010.13,.02,21,1,0)
This is the patient who received the exam.
"^DD",9000010.13,9000010.13,.02,"DT")
3010927
"^DD",9000010.13,9000010.13,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVXAM(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.13,9000010.13,.03,1,0)
^.1
"^DD",9000010.13,9000010.13,.03,1,1,0)
9000010.13^AD
"^DD",9000010.13,9000010.13,.03,1,1,1)
S ^AUPNVXAM("AD",$E(X,1,30),DA)=""
"^DD",9000010.13,9000010.13,.03,1,1,2)
K ^AUPNVXAM("AD",$E(X,1,30),DA)
"^DD",9000010.13,9000010.13,.03,1,1,"%D",0)
^^4^4^2950901^
"^DD",9000010.13,9000010.13,.03,1,1,"%D",1,0)
This cross reference is used for searches by the visit pointer and
"^DD",9000010.13,9000010.13,.03,1,1,"%D",2,0)
internal entry number. 
"^DD",9000010.13,9000010.13,.03,1,1,"%D",3,0)
 
"^DD",9000010.13,9000010.13,.03,1,1,"%D",4,0)
  "AD",VISIT,DA
"^DD",9000010.13,9000010.13,.03,1,2,0)
9000010.13^AA^MUMPS
"^DD",9000010.13,9000010.13,.03,1,2,1)
Q:$P(^AUPNVXAM(DA,0),U,2)=""  S ^AUPNVXAM("AA",$P(^AUPNVXAM(DA,0),U,2),+^AUPNVXAM(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.13,9000010.13,.03,1,2,2)
Q:$P(^AUPNVXAM(DA,0),U,2)=""  K ^AUPNVXAM("AA",$P(^AUPNVXAM(DA,0),U,2),+^AUPNVXAM(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.13,9000010.13,.03,1,2,"%D",0)
^^4^4^2950901^^
"^DD",9000010.13,9000010.13,.03,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, exam
"^DD",9000010.13,9000010.13,.03,1,2,"%D",2,0)
pointer, inverted visit, internal entry number.
"^DD",9000010.13,9000010.13,.03,1,2,"%D",3,0)
 
"^DD",9000010.13,9000010.13,.03,1,2,"%D",4,0)
   "AA",PATIENT,EXAM,VISIT,DA
"^DD",9000010.13,9000010.13,.03,1,3,0)
9000010.13^AV10^MUMPS
"^DD",9000010.13,9000010.13,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.13,9000010.13,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.13,9000010.13,.03,1,3,"%D",0)
^^2^2^2940131^
"^DD",9000010.13,9000010.13,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.13,9000010.13,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.13,9000010.13,.03,3)
Enter the visit date/time for the encounter where the exam was done.
"^DD",9000010.13,9000010.13,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.13,9000010.13,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVXAM(DA,0),U,2)"
"^DD",9000010.13,9000010.13,.03,21,0)
^^2^2^2950901^
"^DD",9000010.13,9000010.13,.03,21,1,0)
This is the encounter in the Visit file that represents when and where the
"^DD",9000010.13,9000010.13,.03,21,2,0)
exam was done.
"^DD",9000010.13,9000010.13,.03,"DT")
2861111
"^DD",9000010.13,9000010.13,.04,0)
RESULT^S^A:ABNORMAL;N:NORMAL;^0;4^Q
"^DD",9000010.13,9000010.13,.04,1,0)
^.1^^0
"^DD",9000010.13,9000010.13,.04,"DT")
2950901
"^DD",9000010.13,9000010.13,220,0)
MAGNITUDE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9000010.13,9000010.13,220,3)
Enter the magnitude of the measurement.
"^DD",9000010.13,9000010.13,220,21,0)
^^3^3^3150828^
"^DD",9000010.13,9000010.13,220,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.13,9000010.13,220,21,2,0)
the magnitude of the measurement.
"^DD",9000010.13,9000010.13,220,21,3,0)

"^DD",9000010.13,9000010.13,220,"DT")
3150828
"^DD",9000010.13,9000010.13,221,0)
UCUM CODE^P757.5'^LEX(757.5,^220;2^Q
"^DD",9000010.13,9000010.13,221,3)
Enter the UCUM code of the measurement.
"^DD",9000010.13,9000010.13,221,21,0)
^^3^3^3150828^
"^DD",9000010.13,9000010.13,221,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.13,9000010.13,221,21,2,0)
the unit of the measurement.
"^DD",9000010.13,9000010.13,221,21,3,0)

"^DD",9000010.13,9000010.13,221,"DT")
3150828
"^DD",9000010.13,9000010.13,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.13,9000010.13,1201,3)
Enter the date and time the exam was given.
"^DD",9000010.13,9000010.13,1201,21,0)
^^9^9^2960403^^^^
"^DD",9000010.13,9000010.13,1201,21,1,0)
This is the date and time the exam was given by the provider.  This date
"^DD",9000010.13,9000010.13,1201,21,2,0)
and time may be different from the visit date and time.  For example, for
"^DD",9000010.13,9000010.13,1201,21,3,0)
clinic appointment visits, the visit date and time is the date and time of the
"^DD",9000010.13,9000010.13,1201,21,4,0)
appointment, not the time the provider performed the clinical event.
"^DD",9000010.13,9000010.13,1201,21,5,0)
 
"^DD",9000010.13,9000010.13,1201,21,6,0)
The date may be an imprecise date.
"^DD",9000010.13,9000010.13,1201,21,7,0)
 
"^DD",9000010.13,9000010.13,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, with the
"^DD",9000010.13,9000010.13,1201,21,9,0)
restriction the date cannot be a future date.
"^DD",9000010.13,9000010.13,1201,23,0)
^^13^13^2960403^^^^
"^DD",9000010.13,9000010.13,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the
"^DD",9000010.13,9000010.13,1201,23,2,0)
primary source of the event date and time.  The event date prompt defaults
"^DD",9000010.13,9000010.13,1201,23,3,0)
to the visit date, and the time is entered to reflect the actual time the
"^DD",9000010.13,9000010.13,1201,23,4,0)
measurement was done.  The event date does not have to be the visit date,
"^DD",9000010.13,9000010.13,1201,23,5,0)
but it must be within 30 days before or after the visit, and not be a
"^DD",9000010.13,9000010.13,1201,23,6,0)
future date.
"^DD",9000010.13,9000010.13,1201,23,7,0)
 
"^DD",9000010.13,9000010.13,1201,23,8,0)
If a user wants to enter a historical measurement, the user should use the
"^DD",9000010.13,9000010.13,1201,23,9,0)
Historical Encounter entry action to document the historical measurement.
"^DD",9000010.13,9000010.13,1201,23,10,0)
Historical entries will not be eligible for credit.
"^DD",9000010.13,9000010.13,1201,23,11,0)
 
"^DD",9000010.13,9000010.13,1201,23,12,0)
PCE Data Sources for automatic (scanning) data capture will be blank
"^DD",9000010.13,9000010.13,1201,23,13,0)
unless the event date and time are passed to PCE for filing. 
"^DD",9000010.13,9000010.13,1201,"DT")
2960403
"^DD",9000010.13,9000010.13,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.13,9000010.13,1202,3)
Enter the provider who ordered this exam.
"^DD",9000010.13,9000010.13,1202,21,0)
^^1^1^2960513^
"^DD",9000010.13,9000010.13,1202,21,1,0)
This field can be used to document the provider who ordered the exam.
"^DD",9000010.13,9000010.13,1202,"DT")
2960513
"^DD",9000010.13,9000010.13,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.13,9000010.13,1204,3)
Enter the provider who gave the exam.
"^DD",9000010.13,9000010.13,1204,21,0)
^^1^1^2960513^^^^
"^DD",9000010.13,9000010.13,1204,21,1,0)
This is the provider who gave the exam.
"^DD",9000010.13,9000010.13,1204,"DT")
2941219
"^DD",9000010.13,9000010.13,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.13,9000010.13,80101,3)
Answer is automatically entered by PCE filing logic.
"^DD",9000010.13,9000010.13,80101,21,0)
^^2^2^2950901^
"^DD",9000010.13,9000010.13,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original
"^DD",9000010.13,9000010.13,80101,21,2,0)
exam data is being edited.
"^DD",9000010.13,9000010.13,80101,23,0)
^^2^2^2950901^
"^DD",9000010.13,9000010.13,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.13,9000010.13,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.13,9000010.13,80101,"DT")
2940608
"^DD",9000010.13,9000010.13,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.13,9000010.13,80102,3)
Answer is automatically entered by the PCE filing logic.
"^DD",9000010.13,9000010.13,80102,21,0)
^^3^3^2950901^
"^DD",9000010.13,9000010.13,80102,21,1,0)
This field is populated automatically by the PCE filing logic.  The format of
"^DD",9000010.13,9000010.13,80102,21,2,0)
the field is as follows:  Pointer to PCE data source file_"-"_A for Add or E
"^DD",9000010.13,9000010.13,80102,21,3,0)
for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.13,9000010.13,80102,23,0)
^^15^15^2950901^
"^DD",9000010.13,9000010.13,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE Data Source file.
"^DD",9000010.13,9000010.13,80102,23,2,0)
If this is not passed, then PCE filing logic will not process the data.
"^DD",9000010.13,9000010.13,80102,23,3,0)
  
"^DD",9000010.13,9000010.13,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source
"^DD",9000010.13,9000010.13,80102,23,5,0)
that added the data.  If the record existed previously, PCE filing logic
"^DD",9000010.13,9000010.13,80102,23,6,0)
compares the old and new records of information.  An "E" will be
"^DD",9000010.13,9000010.13,80102,23,7,0)
automatically used if the filing logic finds the data has been edited.  If
"^DD",9000010.13,9000010.13,80102,23,8,0)
"E" is used, then the Edited Flag field is automatically set to 1.
"^DD",9000010.13,9000010.13,80102,23,9,0)
  
"^DD",9000010.13,9000010.13,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who
"^DD",9000010.13,9000010.13,80102,23,11,0)
performed the addition or editing of data for this record.
"^DD",9000010.13,9000010.13,80102,23,12,0)
 
"^DD",9000010.13,9000010.13,80102,23,13,0)
Iterations of editing will be concatenated to the previous Data Source
"^DD",9000010.13,9000010.13,80102,23,14,0)
value, up to 85 characters.
"^DD",9000010.13,9000010.13,80102,23,15,0)

"^DD",9000010.13,9000010.13,80102,"DT")
2960509
"^DD",9000010.13,9000010.13,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.13,9000010.13,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.13,9000010.13,81101,21,0)
^^2^2^2950901^
"^DD",9000010.13,9000010.13,81101,21,1,0)
This is a comment related to the patient's exam.  The provider may enter this
"^DD",9000010.13,9000010.13,81101,21,2,0)
manually via the PCE User Interface.
"^DD",9000010.13,9000010.13,81101,"DT")
2950711
"^DD",9000010.13,9000010.13,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.13,9000010.13,81201,"DT")
2960509
"^DD",9000010.13,9000010.13,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.13,9000010.13,81202,"DT")
2960509
"^DD",9000010.13,9000010.13,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.13,9000010.13,81203,"DT")
2960509
"^DD",9000010.16,9000010.16,0)
FIELD^^221^15
"^DD",9000010.16,9000010.16,0,"DDA")
N
"^DD",9000010.16,9000010.16,0,"DT")
3150828
"^DD",9000010.16,9000010.16,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.16,9000010.16,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.16,9000010.16,0,"IX","AA",9000010.16,.03)

"^DD",9000010.16,9000010.16,0,"IX","AATOO",9000010.16,.02)

"^DD",9000010.16,9000010.16,0,"IX","AATOO2",9000010.16,.01)

"^DD",9000010.16,9000010.16,0,"IX","AD",9000010.16,.03)

"^DD",9000010.16,9000010.16,0,"IX","AV10",9000010.16,.03)

"^DD",9000010.16,9000010.16,0,"IX","B",9000010.16,.01)

"^DD",9000010.16,9000010.16,0,"IX","C",9000010.16,.02)

"^DD",9000010.16,9000010.16,0,"NM","V PATIENT ED")

"^DD",9000010.16,9000010.16,0,"VRPK")
PX
"^DD",9000010.16,9000010.16,.01,0)
TOPIC^R*P9999999.09'^AUTTEDT(^0;1^S DIC("S")="I $P(^(0),U,3)'=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.16,9000010.16,.01,1,0)
^.1
"^DD",9000010.16,9000010.16,.01,1,1,0)
9000010.16^B
"^DD",9000010.16,9000010.16,.01,1,1,1)
S ^AUPNVPED("B",$E(X,1,30),DA)=""
"^DD",9000010.16,9000010.16,.01,1,1,2)
K ^AUPNVPED("B",$E(X,1,30),DA)
"^DD",9000010.16,9000010.16,.01,1,2,0)
9000010.16^AATOO2^MUMPS
"^DD",9000010.16,9000010.16,.01,1,2,1)
I $P(^AUPNVPED(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVPED("AA",$P(^AUPNVPED(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVPED(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.16,9000010.16,.01,1,2,2)
I $P(^AUPNVPED(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVPED("AA",$P(^AUPNVPED(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVPED(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.16,9000010.16,.01,1,2,"%D",0)
^^2^2^2970221^^
"^DD",9000010.16,9000010.16,.01,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, education
"^DD",9000010.16,9000010.16,.01,1,2,"%D",2,0)
topic pointer, inverted visit date, and internal entry number.
"^DD",9000010.16,9000010.16,.01,1,2,"DT")
2970221
"^DD",9000010.16,9000010.16,.01,3)
Select the education that the patient received.
"^DD",9000010.16,9000010.16,.01,12)
Only active Education Topics may be selected.
"^DD",9000010.16,9000010.16,.01,12.1)
S DIC("S")="I $P(^(0),U,3)'=1"
"^DD",9000010.16,9000010.16,.01,21,0)
^^2^2^2951102^^^^
"^DD",9000010.16,9000010.16,.01,21,1,0)
This is the entry in the Education Topics file that represents the
"^DD",9000010.16,9000010.16,.01,21,2,0)
education given to the patient.
"^DD",9000010.16,9000010.16,.01,"DT")
3020625
"^DD",9000010.16,9000010.16,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.16,9000010.16,.02,1,0)
^.1
"^DD",9000010.16,9000010.16,.02,1,2,0)
9000010.16^AATOO^MUMPS
"^DD",9000010.16,9000010.16,.02,1,2,1)
I $P(^AUPNVPED(DA,0),U,3)]"" S ^AUPNVPED("AA",X,+^AUPNVPED(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVPED(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.16,9000010.16,.02,1,2,2)
I $P(^AUPNVPED(DA,0),U,3)]"" K ^AUPNVPED("AA",X,+^AUPNVPED(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVPED(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.16,9000010.16,.02,1,2,"%D",0)
^^2^2^2981028^^^
"^DD",9000010.16,9000010.16,.02,1,2,"%D",1,0)
This is a Health Summary cross-reference.
"^DD",9000010.16,9000010.16,.02,1,2,"%D",2,0)
"AA",PATIENT,EDUCATION,VISIT,DA
"^DD",9000010.16,9000010.16,.02,1,2,"DT")
2970212
"^DD",9000010.16,9000010.16,.02,1,3,0)
9000010.16^C
"^DD",9000010.16,9000010.16,.02,1,3,1)
S ^AUPNVPED("C",$E(X,1,30),DA)=""
"^DD",9000010.16,9000010.16,.02,1,3,2)
K ^AUPNVPED("C",$E(X,1,30),DA)
"^DD",9000010.16,9000010.16,.02,1,3,"%D",0)
^^2^2^2950901^
"^DD",9000010.16,9000010.16,.02,1,3,"%D",1,0)
This cross reference is used for look-up of patient education done by
"^DD",9000010.16,9000010.16,.02,1,3,"%D",2,0)
patient.
"^DD",9000010.16,9000010.16,.02,1,3,"DT")
2950901
"^DD",9000010.16,9000010.16,.02,3)
Enter the patient who received the education.
"^DD",9000010.16,9000010.16,.02,21,0)
^^1^1^2950901^
"^DD",9000010.16,9000010.16,.02,21,1,0)
This is the patient who received education.
"^DD",9000010.16,9000010.16,.02,23,0)
^^3^3^2950901^
"^DD",9000010.16,9000010.16,.02,23,1,0)
This is a pointer to the Patient/IHS file (#9000001) which is dinumed to
"^DD",9000010.16,9000010.16,.02,23,2,0)
the Patient File (#2)  This field is always stuffed by the application.
"^DD",9000010.16,9000010.16,.02,23,3,0)
No editing is allowed.
"^DD",9000010.16,9000010.16,.02,"DT")
3020625
"^DD",9000010.16,9000010.16,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVPED(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.16,9000010.16,.03,1,0)
^.1^^-1
"^DD",9000010.16,9000010.16,.03,1,1,0)
9000010.16^AD
"^DD",9000010.16,9000010.16,.03,1,1,1)
S ^AUPNVPED("AD",$E(X,1,30),DA)=""
"^DD",9000010.16,9000010.16,.03,1,1,2)
K ^AUPNVPED("AD",$E(X,1,30),DA)
"^DD",9000010.16,9000010.16,.03,1,2,0)
9000010.16^AA^MUMPS
"^DD",9000010.16,9000010.16,.03,1,2,1)
Q:$P(^AUPNVPED(DA,0),U,2)=""  S ^AUPNVPED("AA",$P(^AUPNVPED(DA,0),U,2),+$P(^(0),U,1),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.16,9000010.16,.03,1,2,2)
Q:$P(^AUPNVPED(DA,0),U,2)=""  K ^AUPNVPED("AA",$P(^AUPNVPED(DA,0),U,2),$P(^(0),U,1),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.16,9000010.16,.03,1,2,"%D",0)
^^2^2^2970221^^
"^DD",9000010.16,9000010.16,.03,1,2,"%D",1,0)
This is a Health Summary cross-reference.
"^DD",9000010.16,9000010.16,.03,1,2,"%D",2,0)
"AA",PATIENT,VISIT,DA
"^DD",9000010.16,9000010.16,.03,1,2,"DT")
2970221
"^DD",9000010.16,9000010.16,.03,1,3,0)
9000010.16^AV10^MUMPS
"^DD",9000010.16,9000010.16,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.16,9000010.16,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.16,9000010.16,.03,1,3,"%D",0)
^^2^2^2940131^
"^DD",9000010.16,9000010.16,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.16,9000010.16,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.16,9000010.16,.03,3)
Enter the visit date/time for the encounter where the education was provided.
"^DD",9000010.16,9000010.16,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.16,9000010.16,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVPED(DA,0),U,2)"
"^DD",9000010.16,9000010.16,.03,21,0)
^^2^2^2950901^
"^DD",9000010.16,9000010.16,.03,21,1,0)
This is the encounter or occasion of service defined in the Visit file
"^DD",9000010.16,9000010.16,.03,21,2,0)
that represents when and where the education was provided.
"^DD",9000010.16,9000010.16,.03,23,0)
^^2^2^2950901^
"^DD",9000010.16,9000010.16,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000010.16,9000010.16,.03,23,2,0)
the applications. No editing is allowed.
"^DD",9000010.16,9000010.16,.03,"DT")
3020625
"^DD",9000010.16,9000010.16,.06,0)
LEVEL OF UNDERSTANDING^S^1:POOR;2:FAIR;3:GOOD;4:GROUP-NO ASSESSMENT;5:REFUSED;^0;6^Q
"^DD",9000010.16,9000010.16,.06,3)
Enter the number which best rates the patient's level of understanding.
"^DD",9000010.16,9000010.16,.06,21,0)
^.001^2^2^3001212^^^^
"^DD",9000010.16,9000010.16,.06,21,1,0)
This is the provider's assessment of how well the patient understood the
"^DD",9000010.16,9000010.16,.06,21,2,0)
education received.
"^DD",9000010.16,9000010.16,.06,"DT")
3001212
"^DD",9000010.16,9000010.16,220,0)
MAGNITUDE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9000010.16,9000010.16,220,3)
Enter the magnitude of the measurement.
"^DD",9000010.16,9000010.16,220,21,0)
^^3^3^3150828^
"^DD",9000010.16,9000010.16,220,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.16,9000010.16,220,21,2,0)
the magnitude of the measurement.
"^DD",9000010.16,9000010.16,220,21,3,0)

"^DD",9000010.16,9000010.16,220,"DT")
3150828
"^DD",9000010.16,9000010.16,221,0)
UCUM CODE^P757.5'^LEX(757.5,^220;2^Q
"^DD",9000010.16,9000010.16,221,3)
Enter the UCUM code of the measurement.
"^DD",9000010.16,9000010.16,221,21,0)
^^3^3^3150828^
"^DD",9000010.16,9000010.16,221,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.16,9000010.16,221,21,2,0)
the unit of the measurement.
"^DD",9000010.16,9000010.16,221,21,3,0)

"^DD",9000010.16,9000010.16,221,"DT")
3150828
"^DD",9000010.16,9000010.16,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.16,9000010.16,1201,3)
Enter the date and time the patient education was given.
"^DD",9000010.16,9000010.16,1201,21,0)
^^9^9^2960403^^^^
"^DD",9000010.16,9000010.16,1201,21,1,0)
This is the date and time the education was given by the provider.  This
"^DD",9000010.16,9000010.16,1201,21,2,0)
date and time may be different from the visit date and time.  For example, for
"^DD",9000010.16,9000010.16,1201,21,3,0)
clinic appointment visits, the visit date and time is the date and time of the
"^DD",9000010.16,9000010.16,1201,21,4,0)
appointment, not the time the provider performed the clinical event.
"^DD",9000010.16,9000010.16,1201,21,5,0)
 
"^DD",9000010.16,9000010.16,1201,21,6,0)
The date may be an imprecise date.
"^DD",9000010.16,9000010.16,1201,21,7,0)
 
"^DD",9000010.16,9000010.16,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, with the
"^DD",9000010.16,9000010.16,1201,21,9,0)
restriction the date cannot be a future date.
"^DD",9000010.16,9000010.16,1201,23,0)
^^13^13^2960403^^^^
"^DD",9000010.16,9000010.16,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the prmary
"^DD",9000010.16,9000010.16,1201,23,2,0)
source of the event date and time.  The event date prompt defaults to the visit
"^DD",9000010.16,9000010.16,1201,23,3,0)
date and the time is entered to reflect the actual time the exam was given. 
"^DD",9000010.16,9000010.16,1201,23,4,0)
The event date does not have to be the visit date, but it must be within 30
"^DD",9000010.16,9000010.16,1201,23,5,0)
days before or after the visit, and not be a future date.
"^DD",9000010.16,9000010.16,1201,23,6,0)
 
"^DD",9000010.16,9000010.16,1201,23,7,0)
If a user wnats to enter an historical measurement, the user should use the
"^DD",9000010.16,9000010.16,1201,23,8,0)
Historical Encounter entry action to document the historical measurement. 
"^DD",9000010.16,9000010.16,1201,23,9,0)
Historical entries will not be eligible for credit.
"^DD",9000010.16,9000010.16,1201,23,10,0)
 
"^DD",9000010.16,9000010.16,1201,23,11,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000010.16,9000010.16,1201,23,12,0)
event date and time are passed to PCE for filing. 
"^DD",9000010.16,9000010.16,1201,23,13,0)

"^DD",9000010.16,9000010.16,1201,"DT")
2960403
"^DD",9000010.16,9000010.16,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.16,9000010.16,1202,3)
Enter the provider who ordered the patient education.
"^DD",9000010.16,9000010.16,1202,21,0)
^^2^2^2960513^
"^DD",9000010.16,9000010.16,1202,21,1,0)
This field can be used to document the provider who ordered the patient
"^DD",9000010.16,9000010.16,1202,21,2,0)
education.
"^DD",9000010.16,9000010.16,1202,"DT")
2960513
"^DD",9000010.16,9000010.16,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.16,9000010.16,1204,3)
Enter the provider who gave the patient education.
"^DD",9000010.16,9000010.16,1204,21,0)
^^1^1^2960513^^^^
"^DD",9000010.16,9000010.16,1204,21,1,0)
This is the provider who gave the patient education.
"^DD",9000010.16,9000010.16,1204,"DT")
2941219
"^DD",9000010.16,9000010.16,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.16,9000010.16,80101,3)
Answer is automatically generated by the PCE filing logic.
"^DD",9000010.16,9000010.16,80101,21,0)
^^2^2^2950831^
"^DD",9000010.16,9000010.16,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original exam data
"^DD",9000010.16,9000010.16,80101,21,2,0)
is being edited.
"^DD",9000010.16,9000010.16,80101,23,0)
^^2^2^2950831^
"^DD",9000010.16,9000010.16,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.16,9000010.16,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.16,9000010.16,80101,"DT")
2940401
"^DD",9000010.16,9000010.16,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.16,9000010.16,80102,3)
Answer is automatically generated by the PCE filing logic.
"^DD",9000010.16,9000010.16,80102,21,0)
^^3^3^2950831^
"^DD",9000010.16,9000010.16,80102,21,1,0)
This field is populated automatically by the PCE filing logic.  The format of
"^DD",9000010.16,9000010.16,80102,21,2,0)
the field is as follows:  Pointer to PCE data source file_"-"_A for Add or E
"^DD",9000010.16,9000010.16,80102,21,3,0)
for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.16,9000010.16,80102,23,0)
^^14^14^2950831^
"^DD",9000010.16,9000010.16,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.16,9000010.16,80102,23,2,0)
is not passed, then PCE filing logic will not process the data.
"^DD",9000010.16,9000010.16,80102,23,3,0)
 
"^DD",9000010.16,9000010.16,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.16,9000010.16,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.16,9000010.16,80102,23,6,0)
the old and new records of information.  An "E" will automatically be used if
"^DD",9000010.16,9000010.16,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.16,9000010.16,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.16,9000010.16,80102,23,9,0)
 
"^DD",9000010.16,9000010.16,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.16,9000010.16,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.16,9000010.16,80102,23,12,0)
 
"^DD",9000010.16,9000010.16,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source value,
"^DD",9000010.16,9000010.16,80102,23,14,0)
up to 85 characters.
"^DD",9000010.16,9000010.16,80102,"DT")
2960509
"^DD",9000010.16,9000010.16,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.16,9000010.16,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.16,9000010.16,81101,21,0)
^^2^2^2950901^^
"^DD",9000010.16,9000010.16,81101,21,1,0)
This is a comment related to the patient's education.  The provider may enter
"^DD",9000010.16,9000010.16,81101,21,2,0)
this manually via the PCE User Interface.
"^DD",9000010.16,9000010.16,81101,"DT")
2950711
"^DD",9000010.16,9000010.16,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.16,9000010.16,81201,"DT")
2960509
"^DD",9000010.16,9000010.16,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.16,9000010.16,81202,"DT")
2960509
"^DD",9000010.16,9000010.16,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.16,9000010.16,81203,"DT")
2960509
"^DD",9000010.18,9000010.18,0)
FIELD^^300^29
"^DD",9000010.18,9000010.18,0,"DDA")
N
"^DD",9000010.18,9000010.18,0,"DT")
3160301
"^DD",9000010.18,9000010.18,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.18,9000010.18,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.18,9000010.18,0,"IX","AA",9000010.18,.03)

"^DD",9000010.18,9000010.18,0,"IX","AATOO",9000010.18,.01)

"^DD",9000010.18,9000010.18,0,"IX","AATOO2",9000010.18,.02)

"^DD",9000010.18,9000010.18,0,"IX","AD",9000010.18,.03)

"^DD",9000010.18,9000010.18,0,"IX","AV10",9000010.18,.03)

"^DD",9000010.18,9000010.18,0,"IX","B",9000010.18,.01)

"^DD",9000010.18,9000010.18,0,"IX","C",9000010.18,.02)

"^DD",9000010.18,9000010.18,0,"NM","V CPT")

"^DD",9000010.18,9000010.18,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",9000010.18,9000010.18,.01,0)
CPT^R*P81'X^ICPT(^0;1^S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.18,.01,1,0)
^.1^^-1
"^DD",9000010.18,9000010.18,.01,1,1,0)
9000010.18^B
"^DD",9000010.18,9000010.18,.01,1,1,1)
S ^AUPNVCPT("B",$E(X,1,30),DA)=""
"^DD",9000010.18,9000010.18,.01,1,1,2)
K ^AUPNVCPT("B",$E(X,1,30),DA)
"^DD",9000010.18,9000010.18,.01,1,3,0)
9000010.18^AATOO^MUMPS
"^DD",9000010.18,9000010.18,.01,1,3,1)
I $P(^AUPNVCPT(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.18,9000010.18,.01,1,3,2)
I $P(^AUPNVCPT(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.18,9000010.18,.01,1,3,"%D",0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by Patient, CPT
"^DD",9000010.18,9000010.18,.01,1,3,"%D",2,0)
internal entry number, inverted visit date, and internal entry number.
"^DD",9000010.18,9000010.18,.01,1,3,"%D",3,0)
 
"^DD",9000010.18,9000010.18,.01,1,3,"%D",4,0)
 "AA",PATIENT,CPT,VISIT,DA
"^DD",9000010.18,9000010.18,.01,3)
Enter a CPT code or the name of the procedure done to the patient.
"^DD",9000010.18,9000010.18,.01,12)
Only active CPTs
"^DD",9000010.18,9000010.18,.01,12.1)
S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)"
"^DD",9000010.18,9000010.18,.01,21,0)
^.001^8^8^3030402^^^
"^DD",9000010.18,9000010.18,.01,21,1,0)
This is the entry in the CPT file that most closely represents the
"^DD",9000010.18,9000010.18,.01,21,2,0)
clinical procedure done to the patient during the encounter.  The
"^DD",9000010.18,9000010.18,.01,21,3,0)
preferred text for the procedure performed may be specified in the
"^DD",9000010.18,9000010.18,.01,21,4,0)
Provider Narrative field.  
"^DD",9000010.18,9000010.18,.01,21,5,0)
  
"^DD",9000010.18,9000010.18,.01,21,6,0)
This field is used for Administrative and Clinical purposes.  If a
"^DD",9000010.18,9000010.18,.01,21,7,0)
procedure performed is to be billable, the CPT code must be specified
"^DD",9000010.18,9000010.18,.01,21,8,0)
here.
"^DD",9000010.18,9000010.18,.01,"AUDIT")
n
"^DD",9000010.18,9000010.18,.01,"DT")
3160301
"^DD",9000010.18,9000010.18,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.18,9000010.18,.02,1,0)
^.1
"^DD",9000010.18,9000010.18,.02,1,2,0)
9000010.18^AATOO2^MUMPS
"^DD",9000010.18,9000010.18,.02,1,2,1)
I $P(^AUPNVCPT(DA,0),U,3)]"" S ^AUPNVCPT("AA",X,+^AUPNVCPT(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.18,9000010.18,.02,1,2,2)
I $P(^AUPNVCPT(DA,0),U,3)]"" K ^AUPNVCPT("AA",X,+^AUPNVCPT(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.18,9000010.18,.02,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.02,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, CPT
"^DD",9000010.18,9000010.18,.02,1,2,"%D",2,0)
internal entry number, inverted visit date, and internal entry number.
"^DD",9000010.18,9000010.18,.02,1,2,"%D",3,0)
 
"^DD",9000010.18,9000010.18,.02,1,2,"%D",4,0)
  "AA",PATIENT,CPT,VISIT,DA
"^DD",9000010.18,9000010.18,.02,1,3,0)
9000010.18^C
"^DD",9000010.18,9000010.18,.02,1,3,1)
S ^AUPNVCPT("C",$E(X,1,30),DA)=""
"^DD",9000010.18,9000010.18,.02,1,3,2)
K ^AUPNVCPT("C",$E(X,1,30),DA)
"^DD",9000010.18,9000010.18,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000010.18,9000010.18,.02,1,3,"%D",1,0)
This field allows look-up on the file by the patient's name.
"^DD",9000010.18,9000010.18,.02,1,3,"DT")
2950901
"^DD",9000010.18,9000010.18,.02,3)
Enter the Patient to whom the procedure was done.
"^DD",9000010.18,9000010.18,.02,21,0)
^^1^1^2950901^^^^
"^DD",9000010.18,9000010.18,.02,21,1,0)
This is the patient to whom the procedure was done during the encounter.
"^DD",9000010.18,9000010.18,.02,23,0)
^^3^3^2950901^
"^DD",9000010.18,9000010.18,.02,23,1,0)
This is a pointer to the Patient/IHS file (#9000001) which is dinumed to
"^DD",9000010.18,9000010.18,.02,23,2,0)
the Patient File (#2).  This field is always stuffed by the application.
"^DD",9000010.18,9000010.18,.02,23,3,0)
No editing is allowed.
"^DD",9000010.18,9000010.18,.02,"DT")
3020702
"^DD",9000010.18,9000010.18,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVCPT(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.18,.03,1,0)
^.1
"^DD",9000010.18,9000010.18,.03,1,1,0)
9000010.18^AD
"^DD",9000010.18,9000010.18,.03,1,1,1)
S ^AUPNVCPT("AD",$E(X,1,30),DA)=""
"^DD",9000010.18,9000010.18,.03,1,1,2)
K ^AUPNVCPT("AD",$E(X,1,30),DA)
"^DD",9000010.18,9000010.18,.03,1,1,"%D",0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.03,1,1,"%D",1,0)
This cross reference is used for searches by the visit pointer and
"^DD",9000010.18,9000010.18,.03,1,1,"%D",2,0)
internal entry number.  
"^DD",9000010.18,9000010.18,.03,1,1,"%D",3,0)
 
"^DD",9000010.18,9000010.18,.03,1,1,"%D",4,0)
    "AD",VISIT,DA
"^DD",9000010.18,9000010.18,.03,1,2,0)
9000010.18^AA^MUMPS
"^DD",9000010.18,9000010.18,.03,1,2,1)
Q:$P(^AUPNVCPT(DA,0),U,2)=""  S ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),+^AUPNVCPT(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.18,9000010.18,.03,1,2,2)
Q:$P(^AUPNVCPT(DA,0),U,2)=""  K ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),+^AUPNVCPT(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.18,9000010.18,.03,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.03,1,2,"%D",1,0)
This cross reference is used for searches in sequence by paitent, CPT
"^DD",9000010.18,9000010.18,.03,1,2,"%D",2,0)
internal entry number, inverted visit date, and internal entry number.
"^DD",9000010.18,9000010.18,.03,1,2,"%D",3,0)
 
"^DD",9000010.18,9000010.18,.03,1,2,"%D",4,0)
  "AA",PATIENT,CPT,VISIT,DA
"^DD",9000010.18,9000010.18,.03,1,3,0)
9000010.18^AV10^MUMPS
"^DD",9000010.18,9000010.18,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.18,9000010.18,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.18,9000010.18,.03,1,3,"%D",0)
^^2^2^2940131^
"^DD",9000010.18,9000010.18,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.18,9000010.18,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.18,9000010.18,.03,3)
Enter the visit date/time for the encounter where the procedure was done.
"^DD",9000010.18,9000010.18,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.18,9000010.18,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVCPT(DA,0),U,2)"
"^DD",9000010.18,9000010.18,.03,21,0)
^^2^2^2950901^
"^DD",9000010.18,9000010.18,.03,21,1,0)
This is the encounter or occasion of service defined in the Visit file
"^DD",9000010.18,9000010.18,.03,21,2,0)
that represents when and where the procedure was done.
"^DD",9000010.18,9000010.18,.03,23,0)
^^2^2^2950901^
"^DD",9000010.18,9000010.18,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000010.18,9000010.18,.03,23,2,0)
the applications.  No editing is allowed.
"^DD",9000010.18,9000010.18,.03,"DT")
3020702
"^DD",9000010.18,9000010.18,.04,0)
PROVIDER NARRATIVE^R*P9999999.27^AUTNPOV(^0;4^S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.18,.04,3)
Enter the providers preferred text identifying the procedure done.
"^DD",9000010.18,9000010.18,.04,12)
IHS OLD LOOKUP or VA Exact Match
"^DD",9000010.18,9000010.18,.04,12.1)
S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO")
"^DD",9000010.18,9000010.18,.04,21,0)
^^5^5^2950901^
"^DD",9000010.18,9000010.18,.04,21,1,0)
This is the narrative the provider uses to represent the procedure that
"^DD",9000010.18,9000010.18,.04,21,2,0)
was done.  The text may be different from the CPT file's procedure name
"^DD",9000010.18,9000010.18,.04,21,3,0)
text, but should not have a significantly different meaning. The CPT code
"^DD",9000010.18,9000010.18,.04,21,4,0)
in the CPT (.01) field should be the CPT code that "most closely"
"^DD",9000010.18,9000010.18,.04,21,5,0)
represents the provider narrative for the procedure done.
"^DD",9000010.18,9000010.18,.04,23,0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.04,23,1,0)
This is a pointer to the Provider Narrative file (#9999999.27). Disk space
"^DD",9000010.18,9000010.18,.04,23,2,0)
is saved by storing ONE entry in the Provider Narrative file for each
"^DD",9000010.18,9000010.18,.04,23,3,0)
unique narrative. The provider narrative is often repetitive, especially
"^DD",9000010.18,9000010.18,.04,23,4,0)
if the data capture mode is automated (e.g., AICS Encounter Forms).
"^DD",9000010.18,9000010.18,.04,"AUDIT")
n
"^DD",9000010.18,9000010.18,.04,"DT")
2940427
"^DD",9000010.18,9000010.18,.05,0)
DIAGNOSIS^*P80'X^ICD9(^0;5^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.05,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.05,12)
Dx cannot be an inactive code, and it must be appropriate
"^DD",9000010.18,9000010.18,.05,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.05,21,0)
^.001^2^2^3120514^^^^
"^DD",9000010.18,9000010.18,.05,21,1,0)
This is the diagnosis, from the ICD Diagnosis file, associated
"^DD",9000010.18,9000010.18,.05,21,2,0)
with the procedure performed.
"^DD",9000010.18,9000010.18,.05,"DT")
3050907
"^DD",9000010.18,9000010.18,.07,0)
PRINCIPAL PROCEDURE^S^Y:YES;N:NO;^0;7^Q
"^DD",9000010.18,9000010.18,.07,3)
Enter 'Y' if this is the principal procedure done at the encounter.
"^DD",9000010.18,9000010.18,.07,21,0)
^^2^2^2950901^
"^DD",9000010.18,9000010.18,.07,21,1,0)
This field identifies this procedure as the prinicipal procedure done to
"^DD",9000010.18,9000010.18,.07,21,2,0)
the patient at the encounter.
"^DD",9000010.18,9000010.18,.07,"DT")
3020702
"^DD",9000010.18,9000010.18,.09,0)
DIAGNOSIS 2^*P80'X^ICD9(^0;9^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.09,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.09,12)
Dx cannot be an inactive code, and it must be appropriat
"^DD",9000010.18,9000010.18,.09,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.09,21,0)
^.001^2^2^3030908^^^^
"^DD",9000010.18,9000010.18,.09,21,1,0)
This is the diagnosis, from the ICD Diagnosis file, associated
"^DD",9000010.18,9000010.18,.09,21,2,0)
with the procedure performed.
"^DD",9000010.18,9000010.18,.09,"AUDIT")

"^DD",9000010.18,9000010.18,.09,"DT")
3050907
"^DD",9000010.18,9000010.18,.1,0)
DIAGNOSIS 3^*P80'X^ICD9(^0;10^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.1,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.1,12)
Dx cannot be an inactive code, and it must be appropria
"^DD",9000010.18,9000010.18,.1,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.1,21,0)
^^2^2^3021227^
"^DD",9000010.18,9000010.18,.1,21,1,0)
This is the diagnosis, from the ICD Diagnosis file, associated
"^DD",9000010.18,9000010.18,.1,21,2,0)
with the procedure performed.
"^DD",9000010.18,9000010.18,.1,"DT")
3050907
"^DD",9000010.18,9000010.18,.11,0)
DIAGNOSIS 4^*P80'X^ICD9(^0;11^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.11,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.11,12)
Dx cannot be an inactive code, and it must be appropriat
"^DD",9000010.18,9000010.18,.11,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.11,"DT")
3050907
"^DD",9000010.18,9000010.18,.12,0)
DIAGNOSIS 5^*P80'X^ICD9(^0;12^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.12,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.12,12)
Dx cannot be an inactive code, and it must be appropriate
"^DD",9000010.18,9000010.18,.12,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.12,"DT")
3050907
"^DD",9000010.18,9000010.18,.13,0)
DIAGNOSIS 6^*P80'X^ICD9(^0;13^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.13,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.13,12)
Dx cannot be an inactive code, and it must be appropriate
"^DD",9000010.18,9000010.18,.13,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.13,"DT")
3050907
"^DD",9000010.18,9000010.18,.14,0)
DIAGNOSIS 7^*P80'X^ICD9(^0;14^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.14,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.14,12)
Dx cannot be an inactive code, and it must be appropriate
"^DD",9000010.18,9000010.18,.14,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.14,"DT")
3050907
"^DD",9000010.18,9000010.18,.15,0)
DIAGNOSIS 8^*P80'X^ICD9(^0;15^D ICDEN^PXCECPT1 K:Y<0 X
"^DD",9000010.18,9000010.18,.15,3)
Enter the ICD Diagnosis related to the procedure done.
"^DD",9000010.18,9000010.18,.15,12)
Dx cannot be an inactive code, and it must be appropriate
"^DD",9000010.18,9000010.18,.15,12.1)
S DIC("S")="D ^AUPNSICD" S DIC(0)=$P(DIC(0),"E")_$P(DIC(0),"E",2)
"^DD",9000010.18,9000010.18,.15,"DT")
3050907
"^DD",9000010.18,9000010.18,.16,0)
QUANTITY^NJ2,0X^^0;16^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9000010.18,9000010.18,.16,3)
Enter a number between 1 and 999 indicating how many times this procedure was done.
"^DD",9000010.18,9000010.18,.16,21,0)
^^2^2^2950901^^^
"^DD",9000010.18,9000010.18,.16,21,1,0)
This is the number of times this procedure was done to the patient during
"^DD",9000010.18,9000010.18,.16,21,2,0)
the encounter.
"^DD",9000010.18,9000010.18,.16,"DT")
3050902
"^DD",9000010.18,9000010.18,.17,0)
ORDER REFERENCE^P100'^OR(100,^0;17^Q
"^DD",9000010.18,9000010.18,.17,21,0)
^.001^2^2^3040312^^^
"^DD",9000010.18,9000010.18,.17,21,1,0)
Pointer to the order in the Order file (#100) that ordered the
"^DD",9000010.18,9000010.18,.17,21,2,0)
procedure.
"^DD",9000010.18,9000010.18,.17,23,0)
^^3^3^3040312^
"^DD",9000010.18,9000010.18,.17,23,1,0)
This field is created to provide a place for the surgery
"^DD",9000010.18,9000010.18,.17,23,2,0)
package to place the pointer to the entry in the order file
"^DD",9000010.18,9000010.18,.17,23,3,0)
(#100) that is associated with this procedure.
"^DD",9000010.18,9000010.18,.17,"DT")
3040312
"^DD",9000010.18,9000010.18,.19,0)
DEPARTMENT CODE^F^^0;19^K:$L(X)>3!($L(X)<3) X
"^DD",9000010.18,9000010.18,.19,3)
Answer must be 3 characters in length.
"^DD",9000010.18,9000010.18,.19,21,0)
^.001^2^2^3050620^^^^
"^DD",9000010.18,9000010.18,.19,21,1,0)
The 3-digit code that defines the service area associated with the
"^DD",9000010.18,9000010.18,.19,21,2,0)
charge by the sending application.
"^DD",9000010.18,9000010.18,.19,23,0)
^.001^7^7^3050620^^^
"^DD",9000010.18,9000010.18,.19,23,1,0)
All CPT-based charges coming through PCE, which
"^DD",9000010.18,9000010.18,.19,23,2,0)
are not already associated with one of the
"^DD",9000010.18,9000010.18,.19,23,3,0)
Department Codes, are assigned a Department Code.
"^DD",9000010.18,9000010.18,.19,23,4,0)
The Department Code assigned is the Stop Code
"^DD",9000010.18,9000010.18,.19,23,5,0)
associated (in the HOSPITAL LOCATION file, #44)
"^DD",9000010.18,9000010.18,.19,23,6,0)
with the Hospital Location of the patient
"^DD",9000010.18,9000010.18,.19,23,7,0)
visit/encounter.
"^DD",9000010.18,9000010.18,.19,"DT")
3050425
"^DD",9000010.18,9000010.18,.2,0)
PFSS CHARGE ID^NJ8,0^^0;20^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9000010.18,9000010.18,.2,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",9000010.18,9000010.18,.2,21,0)
^.001^4^4^3050610^^^^
"^DD",9000010.18,9000010.18,.2,21,1,0)
A numeric identifier of not more than 8 digits that uniquely
"^DD",9000010.18,9000010.18,.2,21,2,0)
identifies the charge item in the external medical billing
"^DD",9000010.18,9000010.18,.2,21,3,0)
system.  This data item is referred to as the "PFSS Charge
"^DD",9000010.18,9000010.18,.2,21,4,0)
Identifier" within the PFSS project documentation.
"^DD",9000010.18,9000010.18,.2,23,0)
^.001^3^3^3050610^^^
"^DD",9000010.18,9000010.18,.2,23,1,0)
The application providing the data to the PFSS CHARGE CACHE file
"^DD",9000010.18,9000010.18,.2,23,2,0)
uses $$GETCHGID^IBBAPI to obtain a unique identifying number for
"^DD",9000010.18,9000010.18,.2,23,3,0)
the original charge.
"^DD",9000010.18,9000010.18,.2,"DT")
3050606
"^DD",9000010.18,9000010.18,1,0)
CPT MODIFIER^9000010.181PA^^1;0
"^DD",9000010.18,9000010.18,1,12)
The selected modifier must go with the CPT code.
"^DD",9000010.18,9000010.18,1,12.1)
S DIC("S")="N PXC,PXM,PXV,PXD S PXC=$P(^AUPNVCPT(D0,0),U),PXV=$P(^AUPNVCPT(D0,0),U,3),PXD=$P($G(^AUPNVSIT(PXV,0)),U) I $$MODP^ICPTMOD(PXC,Y,""I"",PXD)"
"^DD",9000010.18,9000010.18,300,0)
MAPPED SOURCE^FJ40^^300;1^K:$L(X)>40!($L(X)<3) X
"^DD",9000010.18,9000010.18,300,3)
Do not edit, this field is set automatically.
"^DD",9000010.18,9000010.18,300,21,0)
^.001^6^6^3160301^^
"^DD",9000010.18,9000010.18,300,21,1,0)
If this entry was created as a result of codes that were mapped to PCE
"^DD",9000010.18,9000010.18,300,21,2,0)
data types such as Education Topics, Exams, Health Factors, 
"^DD",9000010.18,9000010.18,300,21,3,0)
Immunizations, and Skin Tests this field will contain the file number
"^DD",9000010.18,9000010.18,300,21,4,0)
and internal entry number of the corresponding data type entry in the 
"^DD",9000010.18,9000010.18,300,21,5,0)
format: file number;IEN.
"^DD",9000010.18,9000010.18,300,21,6,0)

"^DD",9000010.18,9000010.18,300,"DT")
3160301
"^DD",9000010.18,9000010.18,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.18,9000010.18,1201,3)
Enter the date and time the procedure was done.
"^DD",9000010.18,9000010.18,1201,21,0)
^^9^9^2960403^^^^
"^DD",9000010.18,9000010.18,1201,21,1,0)
This is the date and time the procedure was performed.  This date and time
"^DD",9000010.18,9000010.18,1201,21,2,0)
may be different from the visit data and time.  For example, for clinic
"^DD",9000010.18,9000010.18,1201,21,3,0)
appointment visits, the visit date and time is the date and time of the
"^DD",9000010.18,9000010.18,1201,21,4,0)
appointment, not the time the provder performed the clinical event.
"^DD",9000010.18,9000010.18,1201,21,5,0)
 
"^DD",9000010.18,9000010.18,1201,21,6,0)
The date may be an imprecise date.
"^DD",9000010.18,9000010.18,1201,21,7,0)
 
"^DD",9000010.18,9000010.18,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, with the
"^DD",9000010.18,9000010.18,1201,21,9,0)
restriction the date cannot be a future date.
"^DD",9000010.18,9000010.18,1201,23,0)
^^12^12^2960403^^^
"^DD",9000010.18,9000010.18,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the primary
"^DD",9000010.18,9000010.18,1201,23,2,0)
source of the event date and time.  The event date prompt defaults to the visit
"^DD",9000010.18,9000010.18,1201,23,3,0)
date and the time is entered to reflect the actual time the service was
"^DD",9000010.18,9000010.18,1201,23,4,0)
provided.  The event date does not have to be the visit date, but it must be
"^DD",9000010.18,9000010.18,1201,23,5,0)
within 30 days before or after the visit, and not be a future date.
"^DD",9000010.18,9000010.18,1201,23,6,0)
 
"^DD",9000010.18,9000010.18,1201,23,7,0)
If a user wants to enter a historical procedure, the user should use the
"^DD",9000010.18,9000010.18,1201,23,8,0)
Historical Encounter entry action to document the historical measurement. 
"^DD",9000010.18,9000010.18,1201,23,9,0)
Historical entries will not be eligible for credit.
"^DD",9000010.18,9000010.18,1201,23,10,0)
 
"^DD",9000010.18,9000010.18,1201,23,11,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000010.18,9000010.18,1201,23,12,0)
event date and time are passed to PCE for filing.
"^DD",9000010.18,9000010.18,1201,"DT")
2940216
"^DD",9000010.18,9000010.18,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.18,9000010.18,1202,3)
Enter the provider who ordered this procedure.
"^DD",9000010.18,9000010.18,1202,21,0)
^^1^1^2960513^^
"^DD",9000010.18,9000010.18,1202,21,1,0)
This field can be used to document the provider who ordered the procedure.
"^DD",9000010.18,9000010.18,1202,"DT")
2960513
"^DD",9000010.18,9000010.18,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.18,9000010.18,1204,3)
Enter the provider who performed the procedure.
"^DD",9000010.18,9000010.18,1204,21,0)
^^1^1^2960513^^^^
"^DD",9000010.18,9000010.18,1204,21,1,0)
This is the provider who performed the procedure.
"^DD",9000010.18,9000010.18,1204,"DT")
2941219
"^DD",9000010.18,9000010.18,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.18,9000010.18,80101,3)
Answer is automatically entered by PCE filing logic.
"^DD",9000010.18,9000010.18,80101,21,0)
^^2^2^2950831^
"^DD",9000010.18,9000010.18,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original procedure
"^DD",9000010.18,9000010.18,80101,21,2,0)
data is being edited.
"^DD",9000010.18,9000010.18,80101,23,0)
^^2^2^2950831^
"^DD",9000010.18,9000010.18,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.18,9000010.18,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.18,9000010.18,80101,"DT")
2940314
"^DD",9000010.18,9000010.18,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.18,9000010.18,80102,3)
Answer is automatically entered by the PCE filing logic.
"^DD",9000010.18,9000010.18,80102,21,0)
^^3^3^2950901^^
"^DD",9000010.18,9000010.18,80102,21,1,0)
This field is populated automatically by the PCE filing logic.. The format of
"^DD",9000010.18,9000010.18,80102,21,2,0)
the field is as follows:  Pointer to PCE data source file_"-"_A for Add or E
"^DD",9000010.18,9000010.18,80102,21,3,0)
for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.18,9000010.18,80102,23,0)
^^14^14^2950901^^
"^DD",9000010.18,9000010.18,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.18,9000010.18,80102,23,2,0)
is not passed, the PCE filing logic will not process the data.
"^DD",9000010.18,9000010.18,80102,23,3,0)
 
"^DD",9000010.18,9000010.18,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.18,9000010.18,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.18,9000010.18,80102,23,6,0)
the old and new records of information.  An "E" will be automatically used if
"^DD",9000010.18,9000010.18,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.18,9000010.18,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.18,9000010.18,80102,23,9,0)
 
"^DD",9000010.18,9000010.18,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.18,9000010.18,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.18,9000010.18,80102,23,12,0)
 
"^DD",9000010.18,9000010.18,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source value,
"^DD",9000010.18,9000010.18,80102,23,14,0)
up to 85 characters.
"^DD",9000010.18,9000010.18,80102,"DT")
2960509
"^DD",9000010.18,9000010.18,80201,0)
PROVIDER NARRATIVE CATEGORY^*P9999999.27^AUTNPOV(^802;1^S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.18,80201,12)
OLD LOOKUP
"^DD",9000010.18,9000010.18,80201,12.1)
S DIC(0)=$S($D(PXKLAYGO):"LOX",$D(APCDALVR):"LO",$D(ZTQUEUED):"LO",1:"EMQLO")
"^DD",9000010.18,9000010.18,80201,21,0)
^^4^4^2950901^^
"^DD",9000010.18,9000010.18,80201,21,1,0)
This field is the heading or category used to represent the provider 
"^DD",9000010.18,9000010.18,80201,21,2,0)
narrative on the scanner form.  It may be useful for understanding how
"^DD",9000010.18,9000010.18,80201,21,3,0)
providers are grouping data for use on the encounter form, and may
"^DD",9000010.18,9000010.18,80201,21,4,0)
help determine clinical data base definitions in the future.
"^DD",9000010.18,9000010.18,80201,23,0)
^^3^3^2950901^
"^DD",9000010.18,9000010.18,80201,23,1,0)
This field was added for use in the VA.  It is used to identify the common
"^DD",9000010.18,9000010.18,80201,23,2,0)
groupings of clinical terminology used by providers.  This field is only
"^DD",9000010.18,9000010.18,80201,23,3,0)
captured from automated data capture sources, such as AICS.
"^DD",9000010.18,9000010.18,80201,"DT")
2940421
"^DD",9000010.18,9000010.18,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.18,9000010.18,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.18,9000010.18,81101,21,0)
^^2^2^2950901^^
"^DD",9000010.18,9000010.18,81101,21,1,0)
This is a commented related to the procedure performed.  The provider may enter
"^DD",9000010.18,9000010.18,81101,21,2,0)
this manually via the PCE User Interface.
"^DD",9000010.18,9000010.18,81101,"DT")
2950711
"^DD",9000010.18,9000010.18,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.18,9000010.18,81201,"DT")
2960509
"^DD",9000010.18,9000010.18,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.18,9000010.18,81202,"DT")
2960509
"^DD",9000010.18,9000010.18,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.18,9000010.18,81203,"DT")
2960509
"^DD",9000010.18,9000010.181,0)
CPT MODIFIER SUB-FIELD^^.01^1
"^DD",9000010.18,9000010.181,0,"DT")
2991101
"^DD",9000010.18,9000010.181,0,"IX","B",9000010.181,.01)

"^DD",9000010.18,9000010.181,0,"NM","CPT MODIFIER")

"^DD",9000010.18,9000010.181,0,"UP")
9000010.18
"^DD",9000010.18,9000010.181,.01,0)
CPT MODIFIER^M*P81.3'^DIC(81.3,^0;1^S DIC("S")="I $$CPTMOD^PXCPTAPI(D0,Y,0)>0" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.181,.01,1,0)
^.1
"^DD",9000010.18,9000010.181,.01,1,1,0)
9000010.181^B
"^DD",9000010.18,9000010.181,.01,1,1,1)
S ^AUPNVCPT(DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",9000010.18,9000010.181,.01,1,1,2)
K ^AUPNVCPT(DA(1),1,"B",$E(X,1,30),DA)
"^DD",9000010.18,9000010.181,.01,3)
Select a modifier that is valid for this CPT code.
"^DD",9000010.18,9000010.181,.01,4)

"^DD",9000010.18,9000010.181,.01,12)
The modifier(s) you select must be valid for the CPT.
"^DD",9000010.18,9000010.181,.01,12.1)
S DIC("S")="I $$CPTMOD^PXCPTAPI(D0,Y,0)>0"
"^DD",9000010.18,9000010.181,.01,21,0)
^^2^2^2991201^^^^
"^DD",9000010.18,9000010.181,.01,21,1,0)
This multiple field points to the CPT MODIFIER file (#81.3).
"^DD",9000010.18,9000010.181,.01,21,2,0)
The modifier(s) you select must be valid for the CPT field (#.01).
"^DD",9000010.18,9000010.181,.01,"DT")
2991101
"^DD",9000010.23,9000010.23,0)
FIELD^^221^15
"^DD",9000010.23,9000010.23,0,"DDA")
N
"^DD",9000010.23,9000010.23,0,"DT")
3150828
"^DD",9000010.23,9000010.23,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.23,9000010.23,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.23,9000010.23,0,"IX","AA",9000010.23,.03)

"^DD",9000010.23,9000010.23,0,"IX","AATOO",9000010.23,.02)

"^DD",9000010.23,9000010.23,0,"IX","AATOO1",9000010.23,.01)

"^DD",9000010.23,9000010.23,0,"IX","AD",9000010.23,.03)

"^DD",9000010.23,9000010.23,0,"IX","AV10",9000010.23,.03)

"^DD",9000010.23,9000010.23,0,"IX","B",9000010.23,.01)

"^DD",9000010.23,9000010.23,0,"IX","C",9000010.23,.02)

"^DD",9000010.23,9000010.23,0,"NM","V HEALTH FACTORS")

"^DD",9000010.23,9000010.23,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",9000010.23,9000010.23,.01,0)
HEALTH FACTOR^R*P9999999.64'^AUTTHF(^0;1^S DIC("S")="I $P(^(0),U,10)=""F"",$P(^(0),U,11)'=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.23,9000010.23,.01,1,0)
^.1^^-1
"^DD",9000010.23,9000010.23,.01,1,1,0)
9000010.23^B
"^DD",9000010.23,9000010.23,.01,1,1,1)
S ^AUPNVHF("B",$E(X,1,30),DA)=""
"^DD",9000010.23,9000010.23,.01,1,1,2)
K ^AUPNVHF("B",$E(X,1,30),DA)
"^DD",9000010.23,9000010.23,.01,1,3,0)
9000010.23^AATOO1^MUMPS
"^DD",9000010.23,9000010.23,.01,1,3,1)
I $P(^AUPNVHF(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVHF("AA",$P(^AUPNVHF(DA,0),U,2),X,(9999999-$P(^AUPNVSIT($P(^AUPNVHF(DA,0),U,3),0),".")),DA)=""
"^DD",9000010.23,9000010.23,.01,1,3,2)
I $P(^AUPNVHF(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVHF("AA",$P(^AUPNVHF(DA,0),U,2),X,(9999999-$P(^AUPNVSIT($P(^AUPNVHF(DA,0),U,3),0),".")),DA)
"^DD",9000010.23,9000010.23,.01,1,3,"%D",0)
^^5^5^2950901^^
"^DD",9000010.23,9000010.23,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by patient, health
"^DD",9000010.23,9000010.23,.01,1,3,"%D",2,0)
factor internal entry number, inverted visit date, and internal entry
"^DD",9000010.23,9000010.23,.01,1,3,"%D",3,0)
number.
"^DD",9000010.23,9000010.23,.01,1,3,"%D",4,0)
 
"^DD",9000010.23,9000010.23,.01,1,3,"%D",5,0)
   "AA",PATIENT,HEALTH FACTORS,VISIT,DA
"^DD",9000010.23,9000010.23,.01,1,3,"DT")
2930128
"^DD",9000010.23,9000010.23,.01,3)
Select the health factor identified at the visit.
"^DD",9000010.23,9000010.23,.01,12)
Prevents selection of inactive and/or category health factor entries.
"^DD",9000010.23,9000010.23,.01,12.1)
S DIC("S")="I $P(^(0),U,10)=""F"",$P(^(0),U,11)'=1"
"^DD",9000010.23,9000010.23,.01,21,0)
^^3^3^2950901^
"^DD",9000010.23,9000010.23,.01,21,1,0)
This is the entry in the Health Factor file that most closely represents
"^DD",9000010.23,9000010.23,.01,21,2,0)
the patient's health factor status at the encounter for a given health
"^DD",9000010.23,9000010.23,.01,21,3,0)
factor category.
"^DD",9000010.23,9000010.23,.01,22)
&
"^DD",9000010.23,9000010.23,.01,"AUDIT")

"^DD",9000010.23,9000010.23,.01,"DT")
3010927
"^DD",9000010.23,9000010.23,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.23,9000010.23,.02,1,0)
^.1
"^DD",9000010.23,9000010.23,.02,1,2,0)
9000010.23^AATOO^MUMPS
"^DD",9000010.23,9000010.23,.02,1,2,1)
I $P(^AUPNVHF(DA,0),U,3)]"" S ^AUPNVHF("AA",X,$P(^AUPNVHF(DA,0),U,1),(9999999-$P(+^AUPNVSIT($P(^AUPNVHF(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.23,9000010.23,.02,1,2,2)
I $P(^AUPNVHF(DA,0),U,3)]"" K ^AUPNVHF("AA",X,$P(^AUPNVHF(DA,0),U,1),(9999999-$P(+^AUPNVSIT($P(^AUPNVHF(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.23,9000010.23,.02,1,2,"%D",0)
^^5^5^2950901^^
"^DD",9000010.23,9000010.23,.02,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, health
"^DD",9000010.23,9000010.23,.02,1,2,"%D",2,0)
factor internal entry number, inverted visit date, and internal entry
"^DD",9000010.23,9000010.23,.02,1,2,"%D",3,0)
number.
"^DD",9000010.23,9000010.23,.02,1,2,"%D",4,0)
 
"^DD",9000010.23,9000010.23,.02,1,2,"%D",5,0)
   "AA",PATIENT,HEALTH FACTOR,VISIT,DA
"^DD",9000010.23,9000010.23,.02,1,2,"DT")
2930217
"^DD",9000010.23,9000010.23,.02,1,3,0)
9000010.23^C
"^DD",9000010.23,9000010.23,.02,1,3,1)
S ^AUPNVHF("C",$E(X,1,30),DA)=""
"^DD",9000010.23,9000010.23,.02,1,3,2)
K ^AUPNVHF("C",$E(X,1,30),DA)
"^DD",9000010.23,9000010.23,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000010.23,9000010.23,.02,1,3,"%D",1,0)
This cross reference allows look-up of health factors by patient.
"^DD",9000010.23,9000010.23,.02,1,3,"DT")
2950901
"^DD",9000010.23,9000010.23,.02,"DT")
3030623
"^DD",9000010.23,9000010.23,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVHF(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.23,9000010.23,.03,1,0)
^.1
"^DD",9000010.23,9000010.23,.03,1,1,0)
9000010.23^AD
"^DD",9000010.23,9000010.23,.03,1,1,1)
S ^AUPNVHF("AD",$E(X,1,30),DA)=""
"^DD",9000010.23,9000010.23,.03,1,1,2)
K ^AUPNVHF("AD",$E(X,1,30),DA)
"^DD",9000010.23,9000010.23,.03,1,1,"%D",0)
^^4^4^2950901^
"^DD",9000010.23,9000010.23,.03,1,1,"%D",1,0)
This cross reference is used for searches by the visit pointer and
"^DD",9000010.23,9000010.23,.03,1,1,"%D",2,0)
internal entry number.
"^DD",9000010.23,9000010.23,.03,1,1,"%D",3,0)
 
"^DD",9000010.23,9000010.23,.03,1,1,"%D",4,0)
   "AD",VISIT,DA
"^DD",9000010.23,9000010.23,.03,1,2,0)
9000010.23^AA^MUMPS
"^DD",9000010.23,9000010.23,.03,1,2,1)
Q:$P(^AUPNVHF(DA,0),U,2)=""  S ^AUPNVHF("AA",$P(^AUPNVHF(DA,0),U,2),$P(^(0),U,1),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.23,9000010.23,.03,1,2,2)
Q:$P(^AUPNVHF(DA,0),U,2)=""  K ^AUPNVHF("AA",$P(^AUPNVHF(DA,0),U,2),$P(^(0),U,1),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.23,9000010.23,.03,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.23,9000010.23,.03,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, health
"^DD",9000010.23,9000010.23,.03,1,2,"%D",2,0)
factory pointer, inverted visit date, internal entry number.
"^DD",9000010.23,9000010.23,.03,1,2,"%D",3,0)
 
"^DD",9000010.23,9000010.23,.03,1,2,"%D",4,0)
   "AA",PATIENT,HEALTH FACTOR,VISIT,DA
"^DD",9000010.23,9000010.23,.03,1,2,"DT")
2930128
"^DD",9000010.23,9000010.23,.03,1,3,0)
9000010.23^AV10^MUMPS
"^DD",9000010.23,9000010.23,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.23,9000010.23,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.23,9000010.23,.03,1,3,"%D",0)
^^2^2^2940131^
"^DD",9000010.23,9000010.23,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.23,9000010.23,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.23,9000010.23,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.23,9000010.23,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVHF(DA,0),U,2)"
"^DD",9000010.23,9000010.23,.04,0)
LEVEL/SEVERITY^S^M:MINIMAL;MO:MODERATE;H:HEAVY/SEVERE;^0;4^Q
"^DD",9000010.23,9000010.23,.04,"DT")
2930128
"^DD",9000010.23,9000010.23,220,0)
MAGNITUDE^NJ23,9^^220;1^K:+X'=X!(X>9999999999999)!(X<-9999999999999)!(X?.E1"."10N.N) X
"^DD",9000010.23,9000010.23,220,3)
Enter the magnitude of the measurement.
"^DD",9000010.23,9000010.23,220,21,0)
^^3^3^3150828^
"^DD",9000010.23,9000010.23,220,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.23,9000010.23,220,21,2,0)
the magnitude of the measurement.
"^DD",9000010.23,9000010.23,220,21,3,0)

"^DD",9000010.23,9000010.23,220,"DT")
3150828
"^DD",9000010.23,9000010.23,221,0)
UCUM CODE^P757.5'^LEX(757.5,^220;2^Q
"^DD",9000010.23,9000010.23,221,3)
Enter the UCUM code of the measurement.
"^DD",9000010.23,9000010.23,221,21,0)
^^3^3^3150828^
"^DD",9000010.23,9000010.23,221,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.23,9000010.23,221,21,2,0)
the unit of the measurement.
"^DD",9000010.23,9000010.23,221,21,3,0)

"^DD",9000010.23,9000010.23,221,"DT")
3150828
"^DD",9000010.23,9000010.23,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.23,9000010.23,1201,3)
Enter the date and time the health factor was recorded.
"^DD",9000010.23,9000010.23,1201,21,0)
^^9^9^2960403^^^^
"^DD",9000010.23,9000010.23,1201,21,1,0)
This is the date and time the health factor was recorded by the provider. 
"^DD",9000010.23,9000010.23,1201,21,2,0)
This date and time may be different from the visit date and time.  For example,
"^DD",9000010.23,9000010.23,1201,21,3,0)
for clinic appointment visits, the visit date and time is the date and time of
"^DD",9000010.23,9000010.23,1201,21,4,0)
the appointment, not the time the provider performed the clinical event.
"^DD",9000010.23,9000010.23,1201,21,5,0)
 
"^DD",9000010.23,9000010.23,1201,21,6,0)
The date may be an imprecise date.
"^DD",9000010.23,9000010.23,1201,21,7,0)
 
"^DD",9000010.23,9000010.23,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, with the
"^DD",9000010.23,9000010.23,1201,21,9,0)
restriction the date cannot be a future date.
"^DD",9000010.23,9000010.23,1201,23,0)
^^13^13^2960403^^^^
"^DD",9000010.23,9000010.23,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the prmary
"^DD",9000010.23,9000010.23,1201,23,2,0)
source of the event date and time.  The event date prompt defaults to the visit
"^DD",9000010.23,9000010.23,1201,23,3,0)
date and the time is entered to reflect the actual time the exam was given. 
"^DD",9000010.23,9000010.23,1201,23,4,0)
The event date does not have to be the visit date, but it must be within 30
"^DD",9000010.23,9000010.23,1201,23,5,0)
days before or after the visit, and not be a future date.
"^DD",9000010.23,9000010.23,1201,23,6,0)
 
"^DD",9000010.23,9000010.23,1201,23,7,0)
If a user wants to enter an historical measurement, the user should use the
"^DD",9000010.23,9000010.23,1201,23,8,0)
Historical Encounter entry action to document the historical measurement. 
"^DD",9000010.23,9000010.23,1201,23,9,0)
Historical entries will not be eligible for credit.
"^DD",9000010.23,9000010.23,1201,23,10,0)

"^DD",9000010.23,9000010.23,1201,23,11,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000010.23,9000010.23,1201,23,12,0)
event date and time are passed to PCE for filing. 
"^DD",9000010.23,9000010.23,1201,23,13,0)

"^DD",9000010.23,9000010.23,1201,"DT")
3030623
"^DD",9000010.23,9000010.23,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.23,9000010.23,1202,3)
Enter the provider who ordered this health factor recorded.
"^DD",9000010.23,9000010.23,1202,21,0)
^^2^2^2960513^
"^DD",9000010.23,9000010.23,1202,21,1,0)
This field can be used to document the provider who ordered the health
"^DD",9000010.23,9000010.23,1202,21,2,0)
factor recorded.
"^DD",9000010.23,9000010.23,1202,"DT")
2960513
"^DD",9000010.23,9000010.23,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.23,9000010.23,1204,3)
Enter the provider who recorded the health factor.
"^DD",9000010.23,9000010.23,1204,21,0)
^^1^1^2960513^^^^
"^DD",9000010.23,9000010.23,1204,21,1,0)
This is the provider who recorded the health factor.
"^DD",9000010.23,9000010.23,1204,"DT")
2941219
"^DD",9000010.23,9000010.23,80101,0)
EDITED^S^1:EDITED;^801;1^Q
"^DD",9000010.23,9000010.23,80101,3)
Answer is automatically entered by PCE filing logic.
"^DD",9000010.23,9000010.23,80101,21,0)
^^2^2^2950831^
"^DD",9000010.23,9000010.23,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original health
"^DD",9000010.23,9000010.23,80101,21,2,0)
factor data is being edited.
"^DD",9000010.23,9000010.23,80101,23,0)
^^2^2^2950831^
"^DD",9000010.23,9000010.23,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.23,9000010.23,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.23,9000010.23,80101,"DT")
2940401
"^DD",9000010.23,9000010.23,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.23,9000010.23,80102,3)
Answer is automatically entered by the PCE filing logic.
"^DD",9000010.23,9000010.23,80102,21,0)
^^3^3^2950901^^
"^DD",9000010.23,9000010.23,80102,21,1,0)
This field is populated automatically by the PCE filing logic.  The format of
"^DD",9000010.23,9000010.23,80102,21,2,0)
the field is as follows:  Pointer to PCE data source file_"-"_A for Add or E
"^DD",9000010.23,9000010.23,80102,21,3,0)
for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.23,9000010.23,80102,23,0)
^^14^14^2950901^^
"^DD",9000010.23,9000010.23,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.23,9000010.23,80102,23,2,0)
is not passed, then PCE filing logic will not process the data.
"^DD",9000010.23,9000010.23,80102,23,3,0)
 
"^DD",9000010.23,9000010.23,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.23,9000010.23,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.23,9000010.23,80102,23,6,0)
the old and new records of information.  An "E" will automatically be used if
"^DD",9000010.23,9000010.23,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.23,9000010.23,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.23,9000010.23,80102,23,9,0)
 
"^DD",9000010.23,9000010.23,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.23,9000010.23,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.23,9000010.23,80102,23,12,0)
 
"^DD",9000010.23,9000010.23,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source value,
"^DD",9000010.23,9000010.23,80102,23,14,0)
up to 85 characters.
"^DD",9000010.23,9000010.23,80102,"DT")
2960509
"^DD",9000010.23,9000010.23,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.23,9000010.23,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.23,9000010.23,81101,21,0)
^^2^2^2950901^^
"^DD",9000010.23,9000010.23,81101,21,1,0)
This is a comment related to the patient's health factor.  The provider may
"^DD",9000010.23,9000010.23,81101,21,2,0)
enter this manually via the PCE User Interface.
"^DD",9000010.23,9000010.23,81101,"DT")
2950711
"^DD",9000010.23,9000010.23,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.23,9000010.23,81201,"DT")
2960509
"^DD",9000010.23,9000010.23,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.23,9000010.23,81202,"DT")
2960509
"^DD",9000010.23,9000010.23,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.23,9000010.23,81203,"DT")
3030623
"^DD",9000010.71,9000010.71,0)
FIELD^^.06^17
"^DD",9000010.71,9000010.71,0,"DDA")
N
"^DD",9000010.71,9000010.71,0,"DT")
3161110
"^DD",9000010.71,9000010.71,0,"IX","AV10",9000010.71,.03)

"^DD",9000010.71,9000010.71,0,"IX","B",9000010.71,.01)

"^DD",9000010.71,9000010.71,0,"NM","V STANDARD CODES")

"^DD",9000010.71,9000010.71,0,"PT",9000010.71,.06)

"^DD",9000010.71,9000010.71,.01,0)
CODE^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",9000010.71,9000010.71,.01,1,0)
^.1
"^DD",9000010.71,9000010.71,.01,1,1,0)
9000010.71^B
"^DD",9000010.71,9000010.71,.01,1,1,1)
S ^AUPNVSC("B",$E(X,1,30),DA)=""
"^DD",9000010.71,9000010.71,.01,1,1,2)
K ^AUPNVSC("B",$E(X,1,30),DA)
"^DD",9000010.71,9000010.71,.01,3)
Enter a code.
"^DD",9000010.71,9000010.71,.01,21,0)
^^2^2^3150901^
"^DD",9000010.71,9000010.71,.01,21,1,0)
This is a code such as SNOMED CT.
"^DD",9000010.71,9000010.71,.01,21,2,0)

"^DD",9000010.71,9000010.71,.01,"DT")
3160301
"^DD",9000010.71,9000010.71,.02,0)
PATIENT NAME^RP9000001'^AUPNPAT(^0;2^Q
"^DD",9000010.71,9000010.71,.02,3)
Enter the patient.
"^DD",9000010.71,9000010.71,.02,21,0)
^^2^2^3150901^
"^DD",9000010.71,9000010.71,.02,21,1,0)
This is the patient for whom the code is being recorded.
"^DD",9000010.71,9000010.71,.02,21,2,0)

"^DD",9000010.71,9000010.71,.02,"DT")
3160204
"^DD",9000010.71,9000010.71,.03,0)
VISIT^RP9000010'^AUPNVSIT(^0;3^Q
"^DD",9000010.71,9000010.71,.03,1,0)
^.1
"^DD",9000010.71,9000010.71,.03,1,1,0)
9000010.71^AV10^MUMPS
"^DD",9000010.71,9000010.71,.03,1,1,1)
D ADD^AUPNVSIT
"^DD",9000010.71,9000010.71,.03,1,1,2)
D SUB^AUPNVSIT
"^DD",9000010.71,9000010.71,.03,1,1,"%D",0)
^^3^3^3161110^
"^DD",9000010.71,9000010.71,.03,1,1,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count
"^DD",9000010.71,9000010.71,.03,1,1,"%D",2,0)
in the VISIT file.
"^DD",9000010.71,9000010.71,.03,1,1,"%D",3,0)

"^DD",9000010.71,9000010.71,.03,1,1,"DT")
3161110
"^DD",9000010.71,9000010.71,.03,3)
Enter the visit date/time for the encounter/visit.
"^DD",9000010.71,9000010.71,.03,21,0)
^.001^4^4^3160204^^
"^DD",9000010.71,9000010.71,.03,21,1,0)
This is the encounter or occasion of service defined in the Visit file
"^DD",9000010.71,9000010.71,.03,21,2,0)
that represents when and where the standardized code was recorded for
"^DD",9000010.71,9000010.71,.03,21,3,0)
the patient.
"^DD",9000010.71,9000010.71,.03,21,4,0)

"^DD",9000010.71,9000010.71,.03,"DT")
3161110
"^DD",9000010.71,9000010.71,.05,0)
CODING SYSTEM^RFX^^0;5^K:($L(X)>7!($L(X)<3))!('$$VCODESYS^PXLEX(.X)) X
"^DD",9000010.71,9000010.71,.05,3)
Enter the coding system.
"^DD",9000010.71,9000010.71,.05,21,0)
^^4^4^3150901^
"^DD",9000010.71,9000010.71,.05,21,1,0)
A coding system is stored as one of the standard three-character
"^DD",9000010.71,9000010.71,.05,21,2,0)
abbreviations as defined in the Lexicon Coding Systems file #757.03.
"^DD",9000010.71,9000010.71,.05,21,3,0)

"^DD",9000010.71,9000010.71,.05,21,4,0)

"^DD",9000010.71,9000010.71,.05,"DT")
3160922
"^DD",9000010.71,9000010.71,.06,0)
PROBLEM LIST ENTRY^P9000010.71^AUPNVSC(^0;6^Q
"^DD",9000010.71,9000010.71,.06,3)
Enter the problem entry from the patient's problem list for the problem treated. 
"^DD",9000010.71,9000010.71,.06,21,0)
^.001^3^3^3160817^^
"^DD",9000010.71,9000010.71,.06,21,1,0)
This field identifies what Problem List entry is related to the problem
"^DD",9000010.71,9000010.71,.06,21,2,0)
treated at the visit.
"^DD",9000010.71,9000010.71,.06,21,3,0)

"^DD",9000010.71,9000010.71,.06,"DT")
3160817
"^DD",9000010.71,9000010.71,220,0)
MAGNITUDE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9000010.71,9000010.71,220,3)
Enter the magnitude of the measurement.
"^DD",9000010.71,9000010.71,220,21,0)
^^3^3^3150909^
"^DD",9000010.71,9000010.71,220,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.71,9000010.71,220,21,2,0)
the magnitude of the measurement.
"^DD",9000010.71,9000010.71,220,21,3,0)

"^DD",9000010.71,9000010.71,220,"DT")
3150909
"^DD",9000010.71,9000010.71,221,0)
UCUM CODE^P757.5'^LEX(757.5,^220;2^Q
"^DD",9000010.71,9000010.71,221,3)
Enter the UCUM code of the measurement.
"^DD",9000010.71,9000010.71,221,21,0)
^^3^3^3150909^
"^DD",9000010.71,9000010.71,221,21,1,0)
If a measurement has been recorded for an entry in this file, this is
"^DD",9000010.71,9000010.71,221,21,2,0)
the unit of the measurement.
"^DD",9000010.71,9000010.71,221,21,3,0)

"^DD",9000010.71,9000010.71,221,"DT")
3150909
"^DD",9000010.71,9000010.71,300,0)
MAPPED SOURCE^FJ40^^300;1^K:$L(X)>40!($L(X)<3) X
"^DD",9000010.71,9000010.71,300,3)
Answer must be 3-40 characters in length.
"^DD",9000010.71,9000010.71,300,21,0)
^.001^6^6^3160301^^
"^DD",9000010.71,9000010.71,300,21,1,0)
If this entry was created as a result of codes that were mapped to PCE
"^DD",9000010.71,9000010.71,300,21,2,0)
data types such as Education Topics, Exams, Health Factors,
"^DD",9000010.71,9000010.71,300,21,3,0)
Immunizations, and Skin Tests this field will contain the file number
"^DD",9000010.71,9000010.71,300,21,4,0)
and internal entry number of the corresponding data type entry in the
"^DD",9000010.71,9000010.71,300,21,5,0)
format: file number;IEN.
"^DD",9000010.71,9000010.71,300,21,6,0)

"^DD",9000010.71,9000010.71,300,"DT")
3160301
"^DD",9000010.71,9000010.71,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.71,9000010.71,1201,3)
Enter the date and time the code was given. 
"^DD",9000010.71,9000010.71,1201,21,0)
^.001^11^11^3150909^^
"^DD",9000010.71,9000010.71,1201,21,1,0)
This is the date and time the code was recorded by the provider. This
"^DD",9000010.71,9000010.71,1201,21,2,0)
date and time may be different from the visit date and time. For
"^DD",9000010.71,9000010.71,1201,21,3,0)
example, for clinic appointment visits, the visit date and time is the
"^DD",9000010.71,9000010.71,1201,21,4,0)
date and time of the appointment, not the time the provider performed
"^DD",9000010.71,9000010.71,1201,21,5,0)
the clinical event.
"^DD",9000010.71,9000010.71,1201,21,6,0)
                                 
"^DD",9000010.71,9000010.71,1201,21,7,0)
The date may be an imprecise date.  
"^DD",9000010.71,9000010.71,1201,21,8,0)
                                 
"^DD",9000010.71,9000010.71,1201,21,9,0)
Date and time may be before or after the visit date, with the restriction
"^DD",9000010.71,9000010.71,1201,21,10,0)
the date cannot be a future date.
"^DD",9000010.71,9000010.71,1201,21,11,0)

"^DD",9000010.71,9000010.71,1201,23,0)
^^14^14^3150909^
"^DD",9000010.71,9000010.71,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the
"^DD",9000010.71,9000010.71,1201,23,2,0)
primary source of the event date and time. The event date prompt
"^DD",9000010.71,9000010.71,1201,23,3,0)
defaults to the visit date and the time is entered to reflect the actual
"^DD",9000010.71,9000010.71,1201,23,4,0)
time the code was given. The event date does not have to be the visit
"^DD",9000010.71,9000010.71,1201,23,5,0)
date, but it must be within 30 days before or after the visit, and not
"^DD",9000010.71,9000010.71,1201,23,6,0)
be a future date.  
"^DD",9000010.71,9000010.71,1201,23,7,0)
                                 
"^DD",9000010.71,9000010.71,1201,23,8,0)
If a user wants to enter an historical measurement, the user should use
"^DD",9000010.71,9000010.71,1201,23,9,0)
the Historical Encounter entry action to document the historical
"^DD",9000010.71,9000010.71,1201,23,10,0)
measurement. Historical entries will not be eligible for credit.  
"^DD",9000010.71,9000010.71,1201,23,11,0)
                                 
"^DD",9000010.71,9000010.71,1201,23,12,0)
PCE data sources for automatic (scanning) data capture will be blank
"^DD",9000010.71,9000010.71,1201,23,13,0)
unless the event date and time are passed to PCE for filing.
"^DD",9000010.71,9000010.71,1201,23,14,0)

"^DD",9000010.71,9000010.71,1201,"DT")
3150909
"^DD",9000010.71,9000010.71,1202,0)
ORDERING PROVIDER^P200'^VA(200,^12;2^Q
"^DD",9000010.71,9000010.71,1202,3)
Enter the provider who ordered this code recorded.
"^DD",9000010.71,9000010.71,1202,21,0)
^^3^3^3150909^
"^DD",9000010.71,9000010.71,1202,21,1,0)
This field can be used to document the provider who ordered the code
"^DD",9000010.71,9000010.71,1202,21,2,0)
factor recorded.
"^DD",9000010.71,9000010.71,1202,21,3,0)

"^DD",9000010.71,9000010.71,1202,"DT")
3150909
"^DD",9000010.71,9000010.71,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.71,9000010.71,1204,3)
Enter the provider who recorded the code.
"^DD",9000010.71,9000010.71,1204,21,0)
^^2^2^3150909^
"^DD",9000010.71,9000010.71,1204,21,1,0)
This is the provider who recorded the code.
"^DD",9000010.71,9000010.71,1204,21,2,0)

"^DD",9000010.71,9000010.71,1204,"DT")
3150909
"^DD",9000010.71,9000010.71,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.71,9000010.71,80101,21,0)
^.001^3^3^3150901^^
"^DD",9000010.71,9000010.71,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any measurement
"^DD",9000010.71,9000010.71,80101,21,2,0)
data is being edited from the original entry of data.
"^DD",9000010.71,9000010.71,80101,21,3,0)

"^DD",9000010.71,9000010.71,80101,23,0)
^^3^3^3150901^
"^DD",9000010.71,9000010.71,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of
"^DD",9000010.71,9000010.71,80101,23,2,0)
the record to determine if the edited flag should be set to "1".
"^DD",9000010.71,9000010.71,80101,23,3,0)

"^DD",9000010.71,9000010.71,80101,"DT")
3150901
"^DD",9000010.71,9000010.71,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.71,9000010.71,80102,3)
Answer must be 2-85 characters in length.
"^DD",9000010.71,9000010.71,80102,"DT")
3150901
"^DD",9000010.71,9000010.71,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.71,9000010.71,81101,3)
Answer must be 1-245 characters in length.
"^DD",9000010.71,9000010.71,81101,"DT")
3150901
"^DD",9000010.71,9000010.71,81201,0)
VERIFIED^S^1:FOR ELECTRONICALLY SIGNED;2:FOR VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.71,9000010.71,81201,"DT")
3150901
"^DD",9000010.71,9000010.71,81202,0)
PACKAGE^P9.4'^DIC(9.4,^812;2^Q
"^DD",9000010.71,9000010.71,81202,"DT")
3150901
"^DD",9000010.71,9000010.71,81203,0)
DATA SOURCE^P839.7'^PX(839.7,^812;3^Q
"^DD",9000010.71,9000010.71,81203,"DT")
3150901
"^DD",9999999.09,9999999.09,0)
FIELD^^223^15
"^DD",9999999.09,9999999.09,0,"DDA")
N
"^DD",9999999.09,9999999.09,0,"DT")
3161221
"^DD",9999999.09,9999999.09,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(9999999.09,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",9999999.09,9999999.09,0,"IX","B",9999999.09,.01)

"^DD",9999999.09,9999999.09,0,"IX","D",9999999.09,.01)

"^DD",9999999.09,9999999.09,0,"NM","EDUCATION TOPICS")

"^DD",9999999.09,9999999.09,0,"PT",801.41,15)

"^DD",9999999.09,9999999.09,0,"PT",801.41,18)

"^DD",9999999.09,9999999.09,0,"PT",801.4118,.01)

"^DD",9999999.09,9999999.09,0,"PT",801.43,.02)

"^DD",9999999.09,9999999.09,0,"PT",810.31,.04)

"^DD",9999999.09,9999999.09,0,"PT",810.32,.01)

"^DD",9999999.09,9999999.09,0,"PT",811.52,.01)

"^DD",9999999.09,9999999.09,0,"PT",811.902,.01)

"^DD",9999999.09,9999999.09,0,"PT",1927.32,4)

"^DD",9999999.09,9999999.09,0,"PT",1927.32,7)

"^DD",9999999.09,9999999.09,0,"PT",1927.32,12)

"^DD",9999999.09,9999999.09,0,"PT",1927.32,15)

"^DD",9999999.09,9999999.09,0,"PT",9000010.16,.01)

"^DD",9999999.09,9999999.09,0,"PT",9999999.091001,.01)

"^DD",9999999.09,9999999.09,0,"VRPK")
PXRM
"^DD",9999999.09,9999999.09,.01,0)
NAME^RFXJ70^^0;1^K:$L(X)>70!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXINPTR(.X)) X
"^DD",9999999.09,9999999.09,.01,1,0)
^.1^^-1
"^DD",9999999.09,9999999.09,.01,1,1,0)
9999999.09^B
"^DD",9999999.09,9999999.09,.01,1,1,1)
S ^AUTTEDT("B",$E(X,1,70),DA)=""
"^DD",9999999.09,9999999.09,.01,1,1,2)
K ^AUTTEDT("B",$E(X,1,70),DA)
"^DD",9999999.09,9999999.09,.01,1,3,0)
9999999.09^D^KWIC
"^DD",9999999.09,9999999.09,.01,1,3,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^AUTTEDT("D",I,DA)=""
"^DD",9999999.09,9999999.09,.01,1,3,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^AUTTEDT("D",I,DA)
"^DD",9999999.09,9999999.09,.01,1,3,"%D",0)
^^1^1^2951108^
"^DD",9999999.09,9999999.09,.01,1,3,"%D",1,0)
Kwick crossreference on all of the words in this file
"^DD",9999999.09,9999999.09,.01,1,3,"DT")
2951108
"^DD",9999999.09,9999999.09,.01,3)
Answer with Education Topic Name using 3-70 characters.
"^DD",9999999.09,9999999.09,.01,21,0)
^^7^7^2951102^^^^
"^DD",9999999.09,9999999.09,.01,21,1,0)
This is the name of the Patient Education Topic. Patient Education Topics
"^DD",9999999.09,9999999.09,.01,21,2,0)
are the subject on which a patient needs some more information in order
"^DD",9999999.09,9999999.09,.01,21,3,0)
to continue on his road to better health. For example, a patient may have 
"^DD",9999999.09,9999999.09,.01,21,4,0)
had some podiatry work done and received foot care education. 'foot care'
"^DD",9999999.09,9999999.09,.01,21,5,0)
would be the name of the education topic.
"^DD",9999999.09,9999999.09,.01,21,6,0)
 
"^DD",9999999.09,9999999.09,.01,21,7,0)
Enter a Topic that is 3-30 characters in length.
"^DD",9999999.09,9999999.09,.01,"DEL",.01,0)
I 0
"^DD",9999999.09,9999999.09,.01,"DT")
3160321
"^DD",9999999.09,9999999.09,.03,0)
INACTIVE FLAG^S^1:INACTIVE;^0;3^Q
"^DD",9999999.09,9999999.09,.03,3)
Enter 1 to make the education topic inactive or an '@' to make it active.
"^DD",9999999.09,9999999.09,.03,21,0)
^^8^8^2951102^^
"^DD",9999999.09,9999999.09,.03,21,1,0)
This field is used to inactivate an education topic.  If this field
"^DD",9999999.09,9999999.09,.03,21,2,0)
contains a "1" then the education topic is inactive.  Inactive education
"^DD",9999999.09,9999999.09,.03,21,3,0)
topics cannot be selected in the manual data entry process.  Education
"^DD",9999999.09,9999999.09,.03,21,4,0)
topic entries should be made inactive when they are no longer used.  Do
"^DD",9999999.09,9999999.09,.03,21,5,0)
not delete the entry or change the meaning of the education topic entry.
"^DD",9999999.09,9999999.09,.03,21,6,0)
 
"^DD",9999999.09,9999999.09,.03,21,7,0)
To make an inactive education topic active, enter the symbol "@" to delete
"^DD",9999999.09,9999999.09,.03,21,8,0)
the "1" from the field.
"^DD",9999999.09,9999999.09,.03,23,0)
^^6^6^2951102^^
"^DD",9999999.09,9999999.09,.03,23,1,0)
This field was added for use by PCE in the VA.
"^DD",9999999.09,9999999.09,.03,23,2,0)
 
"^DD",9999999.09,9999999.09,.03,23,3,0)
The Inactive flag should be used to manage manual access to education
"^DD",9999999.09,9999999.09,.03,23,4,0)
topics, rather than physically deleting obsolete or inactive entries from
"^DD",9999999.09,9999999.09,.03,23,5,0)
the Education Topic file.  This allows files to still point to the
"^DD",9999999.09,9999999.09,.03,23,6,0)
obsolete or inactive education topic for historical purposes.
"^DD",9999999.09,9999999.09,.03,"DT")
2950825
"^DD",9999999.09,9999999.09,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>64!($L(X)<3) X
"^DD",9999999.09,9999999.09,.04,3)
Enter the Print Name.
"^DD",9999999.09,9999999.09,.04,21,0)
^^2^2^2951120^^
"^DD",9999999.09,9999999.09,.04,21,1,0)
This is the name of the education that will be displayed in menu selection,
"^DD",9999999.09,9999999.09,.04,21,2,0)
and on Health Summaries.
"^DD",9999999.09,9999999.09,.04,"DT")
3150915
"^DD",9999999.09,9999999.09,10,0)
SUBTOPIC^9999999.091001P^^10;0
"^DD",9999999.09,9999999.09,10,"DT")
2950718
"^DD",9999999.09,9999999.09,11,0)
EDUCATIONAL OUTCOME^9999999.0911^^11;0
"^DD",9999999.09,9999999.09,11,21,0)
^^2^2^2951121^^^^
"^DD",9999999.09,9999999.09,11,21,1,0)
This is a statement about what outcome is expected when providing this
"^DD",9999999.09,9999999.09,11,21,2,0)
patient education.  It may reflect education plan and goals.
"^DD",9999999.09,9999999.09,11,22)
. ...
"^DD",9999999.09,9999999.09,11,"DT")
2950510
"^DD",9999999.09,9999999.09,12,0)
EDUCATIONAL STANDARDS^9999999.0912^^12;0
"^DD",9999999.09,9999999.09,12,21,0)
^^2^2^2950718^
"^DD",9999999.09,9999999.09,12,21,1,0)
This is the standards that and educator should use to teach the patient
"^DD",9999999.09,9999999.09,12,21,2,0)
or family or significant other.
"^DD",9999999.09,9999999.09,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXINPTR(X) X
"^DD",9999999.09,9999999.09,100,3)
Enter the class.
"^DD",9999999.09,9999999.09,100,21,0)
^^4^4^3150709^^
"^DD",9999999.09,9999999.09,100,21,1,0)
This is the class of the education topic. Possible classes are "N" for
"^DD",9999999.09,9999999.09,100,21,2,0)
national, "V" for VISN, and "L" for local. National education topics
"^DD",9999999.09,9999999.09,100,21,3,0)
cannot be edited by sites.
"^DD",9999999.09,9999999.09,100,21,4,0)

"^DD",9999999.09,9999999.09,100,"DT")
3161013
"^DD",9999999.09,9999999.09,101,0)
SPONSOR^P811.6'X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXINPTR(9999999.09,X) X
"^DD",9999999.09,9999999.09,101,3)
Enter the sponsor.
"^DD",9999999.09,9999999.09,101,21,0)
^^2^2^3150709^^
"^DD",9999999.09,9999999.09,101,21,1,0)
This is the organization or group that sponsors this education topic.
"^DD",9999999.09,9999999.09,101,21,2,0)

"^DD",9999999.09,9999999.09,101,"DT")
3151125
"^DD",9999999.09,9999999.09,110,0)
CHANGE LOG^9999999.1DA^^110;0
"^DD",9999999.09,9999999.09,110,21,0)
^^3^3^3150709^
"^DD",9999999.09,9999999.09,110,21,1,0)
This multiple is used to record a log of changes made to the education
"^DD",9999999.09,9999999.09,110,21,2,0)
topic.
"^DD",9999999.09,9999999.09,110,21,3,0)

"^DD",9999999.09,9999999.09,201,0)
DESCRIPTION^9999999.9201^^201;0
"^DD",9999999.09,9999999.09,201,21,0)
^^3^3^3150709^
"^DD",9999999.09,9999999.09,201,21,1,0)
This field contains a description of the education topic. It is used to
"^DD",9999999.09,9999999.09,201,21,2,0)
document its purpose and intended usage.
"^DD",9999999.09,9999999.09,201,21,3,0)

"^DD",9999999.09,9999999.09,210,0)
CODE MAPPINGS^9999999.11A^^210;0
"^DD",9999999.09,9999999.09,210,21,0)
^.001^3^3^3160218^^^^
"^DD",9999999.09,9999999.09,210,21,1,0)
This multiple contains a list of standard codes the education topic is
"^DD",9999999.09,9999999.09,210,21,2,0)
mapped to. Each mapping entry is defined by a coding system code pair.
"^DD",9999999.09,9999999.09,210,21,3,0)

"^DD",9999999.09,9999999.09,220,0)
MINIMUM VALUE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.09,9999999.09,220,3)
Enter the minimum allowable value for the measurement.
"^DD",9999999.09,9999999.09,220,21,0)
^^6^6^3150915^^
"^DD",9999999.09,9999999.09,220,21,1,0)
If a measurement is to be associated with an Education Topic, the
"^DD",9999999.09,9999999.09,220,21,2,0)
Minimum Value and Maximum Value sets the allowable range for the
"^DD",9999999.09,9999999.09,220,21,3,0)
magnitude and the unit is selected from the Universal Code for Units of
"^DD",9999999.09,9999999.09,220,21,4,0)
Measurement (UCUM) file.
"^DD",9999999.09,9999999.09,220,21,5,0)

"^DD",9999999.09,9999999.09,220,21,6,0)

"^DD",9999999.09,9999999.09,220,"DT")
3150915
"^DD",9999999.09,9999999.09,221,0)
MAXIMUM VALUE^NJ24,9^^220;2^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.09,9999999.09,221,3)
Enter the maximum allowable value for the measurement.
"^DD",9999999.09,9999999.09,221,21,0)
^^5^5^3150915^^
"^DD",9999999.09,9999999.09,221,21,1,0)
If a measurement is to be associated with an Education Topic, the
"^DD",9999999.09,9999999.09,221,21,2,0)
Minimum Value and Maximum Value sets the allowable range for the
"^DD",9999999.09,9999999.09,221,21,3,0)
magnitude and the unit is selected from the Universal Code for Units of
"^DD",9999999.09,9999999.09,221,21,4,0)
Measurement (UCUM) file.
"^DD",9999999.09,9999999.09,221,21,5,0)

"^DD",9999999.09,9999999.09,221,"DT")
3150915
"^DD",9999999.09,9999999.09,222,0)
MAXIMUM DECIMALS^NJ2,0^^220;3^K:+X'=X!(X>15)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.09,9999999.09,222,3)
Enter an integer from 0 to 15.
"^DD",9999999.09,9999999.09,222,21,0)
^.001^3^3^3161221^^^^
"^DD",9999999.09,9999999.09,222,21,1,0)
This is the maximum number of decimal digits that can be entered for the
"^DD",9999999.09,9999999.09,222,21,2,0)
measurement.
"^DD",9999999.09,9999999.09,222,21,3,0)

"^DD",9999999.09,9999999.09,222,"DT")
3161221
"^DD",9999999.09,9999999.09,223,0)
UCUM CODE^P757.5'^LEX(757.5,^220;4^Q
"^DD",9999999.09,9999999.09,223,3)
Select the UCUM code for the measurement.
"^DD",9999999.09,9999999.09,223,21,0)
^^6^6^3161221^
"^DD",9999999.09,9999999.09,223,21,1,0)
If a measurement is to be associated with an Education Topic, the
"^DD",9999999.09,9999999.09,223,21,2,0)
Minimum Value and Maximum Value sets the allowable range for the 
"^DD",9999999.09,9999999.09,223,21,3,0)
magnitude and the unit is selected from the Universal Code for Units of
"^DD",9999999.09,9999999.09,223,21,4,0)
Measurement (UCUM) file.
"^DD",9999999.09,9999999.09,223,21,5,0)

"^DD",9999999.09,9999999.09,223,21,6,0)

"^DD",9999999.09,9999999.09,223,"DT")
3161221
"^DD",9999999.09,9999999.091001,0)
SUBTOPIC SUB-FIELD^^3^2
"^DD",9999999.09,9999999.091001,0,"DT")
2950510
"^DD",9999999.09,9999999.091001,0,"IX","B",9999999.091001,.01)

"^DD",9999999.09,9999999.091001,0,"NM","SUBTOPIC")

"^DD",9999999.09,9999999.091001,0,"UP")
9999999.09
"^DD",9999999.09,9999999.091001,.01,0)
SUBTOPIC^MP9999999.09^AUTTEDT(^0;1^Q
"^DD",9999999.09,9999999.091001,.01,1,0)
^.1
"^DD",9999999.09,9999999.091001,.01,1,1,0)
9999999.091001^B
"^DD",9999999.09,9999999.091001,.01,1,1,1)
S ^AUTTEDT(DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",9999999.09,9999999.091001,.01,1,1,2)
K ^AUTTEDT(DA(1),10,"B",$E(X,1,30),DA)
"^DD",9999999.09,9999999.091001,.01,3)
Select an item which represents a topic or subtopic of the education topic.
"^DD",9999999.09,9999999.091001,.01,"DT")
2950718
"^DD",9999999.09,9999999.091001,3,0)
SEQUENCE^NJ7,3^^0;3^K:+X'=X!(X>999)!(X<.001)!(X?.E1"."4N.N) X
"^DD",9999999.09,9999999.091001,3,3)
Type a Number between .001 and 999, 3 Decimal Digits
"^DD",9999999.09,9999999.091001,3,21,0)
^^2^2^2950509^
"^DD",9999999.09,9999999.091001,3,21,1,0)
This field defines the sequence the item should be presented in, as it
"^DD",9999999.09,9999999.091001,3,21,2,0)
relates to other items making up the education topic.
"^DD",9999999.09,9999999.091001,3,"DT")
2950509
"^DD",9999999.09,9999999.0911,0)
EDUCATIONAL OUTCOME SUB-FIELD^^.01^1
"^DD",9999999.09,9999999.0911,0,"DT")
2950509
"^DD",9999999.09,9999999.0911,0,"NM","EDUCATIONAL OUTCOME")

"^DD",9999999.09,9999999.0911,0,"UP")
9999999.09
"^DD",9999999.09,9999999.0911,.01,0)
EDUCATIONAL OUTCOME^W^^0;1^Q
"^DD",9999999.09,9999999.0911,.01,3)
Enter the text that defines the goals or outcomes of this education.
"^DD",9999999.09,9999999.0911,.01,21,0)
^^2^2^2951121^^^
"^DD",9999999.09,9999999.0911,.01,21,1,0)
This is a statement about what outcome is expected when providing this
"^DD",9999999.09,9999999.0911,.01,21,2,0)
patient education topic.  It may reflect education plan and goals. 
"^DD",9999999.09,9999999.0911,.01,"DT")
2951121
"^DD",9999999.09,9999999.0912,0)
EDUCATIONAL STANDARDS SUB-FIELD^^.01^1
"^DD",9999999.09,9999999.0912,0,"DT")
2950510
"^DD",9999999.09,9999999.0912,0,"NM","EDUCATIONAL STANDARDS")

"^DD",9999999.09,9999999.0912,0,"UP")
9999999.09
"^DD",9999999.09,9999999.0912,.01,0)
EDUCATIONAL STANDARDS^W^^0;1^Q
"^DD",9999999.09,9999999.0912,.01,3)
Enter the standards as text.
"^DD",9999999.09,9999999.0912,.01,"DT")
2950510
"^DD",9999999.09,9999999.1,0)
CHANGE LOG SUB-FIELD^^2^3
"^DD",9999999.09,9999999.1,0,"DT")
3150709
"^DD",9999999.09,9999999.1,0,"NM","CHANGE LOG")

"^DD",9999999.09,9999999.1,0,"UP")
9999999.09
"^DD",9999999.09,9999999.1,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.09,9999999.1,.01,1,0)
^.1^^0
"^DD",9999999.09,9999999.1,.01,3)
Do not edit this field.
"^DD",9999999.09,9999999.1,.01,21,0)
^.001^3^3^3150709^^
"^DD",9999999.09,9999999.1,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",9999999.09,9999999.1,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",9999999.09,9999999.1,.01,21,3,0)

"^DD",9999999.09,9999999.1,.01,"DT")
3150709
"^DD",9999999.09,9999999.1,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",9999999.09,9999999.1,1,3)
Do not edit this field.
"^DD",9999999.09,9999999.1,1,21,0)
^^3^3^3150709^
"^DD",9999999.09,9999999.1,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",9999999.09,9999999.1,1,21,2,0)
and should not be changed by the user.
"^DD",9999999.09,9999999.1,1,21,3,0)

"^DD",9999999.09,9999999.1,1,"DT")
3150709
"^DD",9999999.09,9999999.1,2,0)
EDIT COMMENTS^9999999.12^^1;0
"^DD",9999999.09,9999999.1,2,21,0)
^.001^3^3^3150709^^
"^DD",9999999.09,9999999.1,2,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",9999999.09,9999999.1,2,21,2,0)
the editing session.
"^DD",9999999.09,9999999.1,2,21,3,0)

"^DD",9999999.09,9999999.11,0)
CODE MAPPINGS SUB-FIELD^^3^4
"^DD",9999999.09,9999999.11,0,"DT")
3161013
"^DD",9999999.09,9999999.11,0,"NM","CODE MAPPINGS")

"^DD",9999999.09,9999999.11,0,"UP")
9999999.09
"^DD",9999999.09,9999999.11,.01,0)
CODING SYSTEM^FX^^0;1^K:(($L(X)>7!($L(X)<3))!('$$VCODESYS^PXLEX(X))) X
"^DD",9999999.09,9999999.11,.01,1,0)
^.1^^0
"^DD",9999999.09,9999999.11,.01,3)
Enter the three-character abbreviation for the coding system.
"^DD",9999999.09,9999999.11,.01,21,0)
^.001^4^4^3150916^^^
"^DD",9999999.09,9999999.11,.01,21,1,0)
This is the coding system, it is stored as one of the standard
"^DD",9999999.09,9999999.11,.01,21,2,0)
three-character abbreviations as defined in the Lexicon Coding Systems
"^DD",9999999.09,9999999.11,.01,21,3,0)
file #757.03.
"^DD",9999999.09,9999999.11,.01,21,4,0)

"^DD",9999999.09,9999999.11,.01,23,0)
^.001^1^1^3150916^^
"^DD",9999999.09,9999999.11,.01,23,1,0)

"^DD",9999999.09,9999999.11,.01,"DT")
3150916
"^DD",9999999.09,9999999.11,1,0)
CODE^FXJ40^^0;2^K:($L(X)>40)!($L(X)<1) X
"^DD",9999999.09,9999999.11,1,3)
Enter a code from the selected coding system.
"^DD",9999999.09,9999999.11,1,21,0)
^.001^2^2^3150709^^^
"^DD",9999999.09,9999999.11,1,21,1,0)
This is a code such as ICD-9, CPT, SNOMED CT, etc.
"^DD",9999999.09,9999999.11,1,21,2,0)

"^DD",9999999.09,9999999.11,1,"DT")
3161013
"^DD",9999999.09,9999999.11,2,0)
DATE MAPPED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.09,9999999.11,2,3)
Do not edit this field, it is set automatically.
"^DD",9999999.09,9999999.11,2,21,0)
^.001^2^2^3160218^^^
"^DD",9999999.09,9999999.11,2,21,1,0)
This is the date and time the mapping was done.
"^DD",9999999.09,9999999.11,2,21,2,0)

"^DD",9999999.09,9999999.11,2,"DT")
3151125
"^DD",9999999.09,9999999.11,3,0)
DATE LINKED^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.09,9999999.11,3,3)
Do not edit this field, it is set automatically.
"^DD",9999999.09,9999999.11,3,21,0)
^.001^4^4^3160218^^^^
"^DD",9999999.09,9999999.11,3,21,1,0)
This is the date and time the mapped code was linked to existing patient
"^DD",9999999.09,9999999.11,3,21,2,0)
data.
"^DD",9999999.09,9999999.11,3,21,3,0)

"^DD",9999999.09,9999999.11,3,21,4,0)

"^DD",9999999.09,9999999.11,3,"DT")
3151224
"^DD",9999999.09,9999999.12,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",9999999.09,9999999.12,0,"DT")
3150709
"^DD",9999999.09,9999999.12,0,"NM","EDIT COMMENTS")

"^DD",9999999.09,9999999.12,0,"UP")
9999999.1
"^DD",9999999.09,9999999.12,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",9999999.09,9999999.12,.01,"DT")
3150709
"^DD",9999999.09,9999999.9201,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",9999999.09,9999999.9201,0,"DT")
3150709
"^DD",9999999.09,9999999.9201,0,"NM","DESCRIPTION")

"^DD",9999999.09,9999999.9201,0,"UP")
9999999.09
"^DD",9999999.09,9999999.9201,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",9999999.09,9999999.9201,.01,3)
Enter the DESCRIPTION.
"^DD",9999999.09,9999999.9201,.01,21,0)
^.001^1^1^3150709^^^^
"^DD",9999999.09,9999999.9201,.01,21,1,0)

"^DD",9999999.09,9999999.9201,.01,"DT")
3150709
"^DD",9999999.15,9999999.15,0)
FIELD^^223^13
"^DD",9999999.15,9999999.15,0,"DDA")
N
"^DD",9999999.15,9999999.15,0,"DT")
3170106
"^DD",9999999.15,9999999.15,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(9999999.15,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",9999999.15,9999999.15,0,"NM","EXAM")

"^DD",9999999.15,9999999.15,0,"PT",801.41,15)

"^DD",9999999.15,9999999.15,0,"PT",801.41,18)

"^DD",9999999.15,9999999.15,0,"PT",801.4118,.01)

"^DD",9999999.15,9999999.15,0,"PT",801.43,.02)

"^DD",9999999.15,9999999.15,0,"PT",810.31,.04)

"^DD",9999999.15,9999999.15,0,"PT",810.32,.01)

"^DD",9999999.15,9999999.15,0,"PT",811.52,.01)

"^DD",9999999.15,9999999.15,0,"PT",811.902,.01)

"^DD",9999999.15,9999999.15,0,"PT",9000010.13,.01)

"^DD",9999999.15,9999999.15,0,"VRPK")
PX
"^DD",9999999.15,9999999.15,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXINPTR(.X)) X
"^DD",9999999.15,9999999.15,.01,1,0)
^.1^^0
"^DD",9999999.15,9999999.15,.01,3)
Enter the name of the exam, 3-64 characters.
"^DD",9999999.15,9999999.15,.01,21,0)
^.001^2^2^3150709^^^^
"^DD",9999999.15,9999999.15,.01,21,1,0)
This is the name of the examination.
"^DD",9999999.15,9999999.15,.01,21,2,0)

"^DD",9999999.15,9999999.15,.01,"DEL",.01,0)
I 0
"^DD",9999999.15,9999999.15,.01,"DT")
3160321
"^DD",9999999.15,9999999.15,.03,0)
SEX SPECIFIC^S^M:MALE;F:FEMALE;^0;3^Q
"^DD",9999999.15,9999999.15,.03,3)
ENTER M OR F IF THIS EXAM IS SEX SPECIFIC
"^DD",9999999.15,9999999.15,.03,21,0)
^^4^4^2950816^
"^DD",9999999.15,9999999.15,.03,21,1,0)
(Optional)
"^DD",9999999.15,9999999.15,.03,21,2,0)
This is the indicator for specifying the sex for which the exam is given.
"^DD",9999999.15,9999999.15,.03,21,3,0)
 
"^DD",9999999.15,9999999.15,.03,21,4,0)
Enter an "M" for male or an "F" for Female.
"^DD",9999999.15,9999999.15,.03,"DT")
2890209
"^DD",9999999.15,9999999.15,.04,0)
INACTIVE FLAG^S^1:INACTIVE;^0;4^Q
"^DD",9999999.15,9999999.15,.04,3)
Enter a "1" to make the exam type inactive.
"^DD",9999999.15,9999999.15,.04,21,0)
^^8^8^2950825^
"^DD",9999999.15,9999999.15,.04,21,1,0)
This field is used to inactivate an exam type.  If this field contains a
"^DD",9999999.15,9999999.15,.04,21,2,0)
"1" then the exam type is inactive.  Inactive exam types cannot be
"^DD",9999999.15,9999999.15,.04,21,3,0)
selected in the manual data entry process. Exam entries should be made
"^DD",9999999.15,9999999.15,.04,21,4,0)
inactive when they are no longer used.  Do not delete the entry or change
"^DD",9999999.15,9999999.15,.04,21,5,0)
the meaning of the exam entry. 
"^DD",9999999.15,9999999.15,.04,21,6,0)
  
"^DD",9999999.15,9999999.15,.04,21,7,0)
To make an inactive exam type active, enter the "@" symbol to remove the
"^DD",9999999.15,9999999.15,.04,21,8,0)
"1" from the field.
"^DD",9999999.15,9999999.15,.04,23,0)
^^6^6^2950825^
"^DD",9999999.15,9999999.15,.04,23,1,0)
The field was added for use by PCE in the VA.
"^DD",9999999.15,9999999.15,.04,23,2,0)
 
"^DD",9999999.15,9999999.15,.04,23,3,0)
The Inactive flag should be used to manage manual access to exams,
"^DD",9999999.15,9999999.15,.04,23,4,0)
rather than physically deleting obsolete or inactive entries from the Exam
"^DD",9999999.15,9999999.15,.04,23,5,0)
file.  This allows files to still point to the obsolete or inactive exam
"^DD",9999999.15,9999999.15,.04,23,6,0)
for historical purposes.
"^DD",9999999.15,9999999.15,.04,"DT")
2950825
"^DD",9999999.15,9999999.15,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXINPTR(X) X
"^DD",9999999.15,9999999.15,100,3)
Enter the class.
"^DD",9999999.15,9999999.15,100,21,0)
^^5^5^3150709^^
"^DD",9999999.15,9999999.15,100,21,1,0)
This is the class of the exam. Possible classes are "N" for national,
"^DD",9999999.15,9999999.15,100,21,2,0)
"V" for VISN, and "L" for local. National exams cannot be edited by
"^DD",9999999.15,9999999.15,100,21,3,0)
sites.
"^DD",9999999.15,9999999.15,100,21,4,0)

"^DD",9999999.15,9999999.15,100,21,5,0)

"^DD",9999999.15,9999999.15,100,"DT")
3151113
"^DD",9999999.15,9999999.15,101,0)
SPONSOR^P811.6'X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXINPTR(9999999.15,X) X
"^DD",9999999.15,9999999.15,101,3)
Enter the sponsor.
"^DD",9999999.15,9999999.15,101,21,0)
^^2^2^3150709^^
"^DD",9999999.15,9999999.15,101,21,1,0)
This is the organization or group that sponsors this exam.
"^DD",9999999.15,9999999.15,101,21,2,0)

"^DD",9999999.15,9999999.15,101,"DT")
3151125
"^DD",9999999.15,9999999.15,110,0)
CHANGE LOG^9999999.16DA^^110;0
"^DD",9999999.15,9999999.15,110,21,0)
^.001^2^2^3150709^^
"^DD",9999999.15,9999999.15,110,21,1,0)
This multiple is used to record a log of changes made to the exam.
"^DD",9999999.15,9999999.15,110,21,2,0)

"^DD",9999999.15,9999999.15,200,0)
PRINT NAME^F^^200;1^K:$L(X)>64!($L(X)<3) X
"^DD",9999999.15,9999999.15,200,3)
Enter the print name, 3-64 characters.
"^DD",9999999.15,9999999.15,200,21,0)
^^2^2^3150709^^
"^DD",9999999.15,9999999.15,200,21,1,0)
This is the name of the exam that will be used for display purposes.
"^DD",9999999.15,9999999.15,200,21,2,0)

"^DD",9999999.15,9999999.15,200,"DT")
3150709
"^DD",9999999.15,9999999.15,201,0)
DESCRIPTION^9999999.15201^^201;0
"^DD",9999999.15,9999999.15,201,21,0)
^^3^3^3150709^
"^DD",9999999.15,9999999.15,201,21,1,0)
This field contains a description of the exam. It is used to document
"^DD",9999999.15,9999999.15,201,21,2,0)
its purpose and intended usage.
"^DD",9999999.15,9999999.15,201,21,3,0)

"^DD",9999999.15,9999999.15,210,0)
CODE MAPPINGS^9999999.18A^^210;0
"^DD",9999999.15,9999999.15,210,21,0)
^.001^3^3^3151224^^^^
"^DD",9999999.15,9999999.15,210,21,1,0)
This multiple contains a list of standard codes the exam is mapped to.
"^DD",9999999.15,9999999.15,210,21,2,0)
Each mapping entry is defined by a coding system code pair.
"^DD",9999999.15,9999999.15,210,21,3,0)

"^DD",9999999.15,9999999.15,220,0)
MINIMUM VALUE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.15,9999999.15,220,3)
Enter the minimum allowable value for the measurement.
"^DD",9999999.15,9999999.15,220,21,0)
^.001^5^5^3151116^^^^
"^DD",9999999.15,9999999.15,220,21,1,0)
If a measurement is to be associated with an Exam, the Minimum Value and
"^DD",9999999.15,9999999.15,220,21,2,0)
Maximum Value sets the allowable range for the magnitude and the unit
"^DD",9999999.15,9999999.15,220,21,3,0)
is selected from the Universal Code for Units of Measurement (UCUM)
"^DD",9999999.15,9999999.15,220,21,4,0)
file.
"^DD",9999999.15,9999999.15,220,21,5,0)

"^DD",9999999.15,9999999.15,220,"DT")
3151116
"^DD",9999999.15,9999999.15,221,0)
MAXIMUM VALUE^NJ24,9^^220;2^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.15,9999999.15,221,3)
Enter the maximum allowable value for the measurement.
"^DD",9999999.15,9999999.15,221,21,0)
^^5^5^3150915^^
"^DD",9999999.15,9999999.15,221,21,1,0)
If a measurement is to be associated with an Exam, the Minimum Value and
"^DD",9999999.15,9999999.15,221,21,2,0)
Maximum Value sets the allowable range for the magnitude and the unit
"^DD",9999999.15,9999999.15,221,21,3,0)
is selected from the Universal Code for Units of Measurement (UCUM)
"^DD",9999999.15,9999999.15,221,21,4,0)
file.
"^DD",9999999.15,9999999.15,221,21,5,0)

"^DD",9999999.15,9999999.15,221,"DT")
3150915
"^DD",9999999.15,9999999.15,222,0)
MAXIMUM DECIMALS^NJ2,0^^220;3^K:+X'=X!(X>15)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.15,9999999.15,222,3)
Enter an integer from 0 to 15.
"^DD",9999999.15,9999999.15,222,21,0)
^^3^3^3170106^
"^DD",9999999.15,9999999.15,222,21,1,0)
This is the maximum number of decimal digits that can be entered for the
"^DD",9999999.15,9999999.15,222,21,2,0)
measurement.
"^DD",9999999.15,9999999.15,222,21,3,0)

"^DD",9999999.15,9999999.15,222,"DT")
3170106
"^DD",9999999.15,9999999.15,223,0)
UCUM CODE^P757.5'^LEX(757.5,^220;4^Q
"^DD",9999999.15,9999999.15,223,3)
Select the UCUM code for the measurement.
"^DD",9999999.15,9999999.15,223,21,0)
^.001^5^5^3170106^^
"^DD",9999999.15,9999999.15,223,21,1,0)
If a measurement is to be associated with an Exam, the Minimum Value and
"^DD",9999999.15,9999999.15,223,21,2,0)
Maximum Value sets the allowable range for the magnitude and the unit
"^DD",9999999.15,9999999.15,223,21,3,0)
is selected from the Universal Code for Units of Measurement (UCUM)
"^DD",9999999.15,9999999.15,223,21,4,0)
file.
"^DD",9999999.15,9999999.15,223,21,5,0)

"^DD",9999999.15,9999999.15,223,"DT")
3170106
"^DD",9999999.15,9999999.15201,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",9999999.15,9999999.15201,0,"DT")
3150709
"^DD",9999999.15,9999999.15201,0,"NM","DESCRIPTION")

"^DD",9999999.15,9999999.15201,0,"UP")
9999999.15
"^DD",9999999.15,9999999.15201,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",9999999.15,9999999.15201,.01,3)
Enter the DESCRIPTION.
"^DD",9999999.15,9999999.15201,.01,"DT")
3150709
"^DD",9999999.15,9999999.16,0)
CHANGE LOG SUB-FIELD^^2^3
"^DD",9999999.15,9999999.16,0,"DT")
3150709
"^DD",9999999.15,9999999.16,0,"NM","CHANGE LOG")

"^DD",9999999.15,9999999.16,0,"UP")
9999999.15
"^DD",9999999.15,9999999.16,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.15,9999999.16,.01,1,0)
^.1^^0
"^DD",9999999.15,9999999.16,.01,3)
Do not edit this field.
"^DD",9999999.15,9999999.16,.01,21,0)
^^3^3^3150709^
"^DD",9999999.15,9999999.16,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",9999999.15,9999999.16,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",9999999.15,9999999.16,.01,21,3,0)

"^DD",9999999.15,9999999.16,.01,"DT")
3150709
"^DD",9999999.15,9999999.16,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",9999999.15,9999999.16,1,3)
Do not edit this field.
"^DD",9999999.15,9999999.16,1,21,0)
^^3^3^3150709^
"^DD",9999999.15,9999999.16,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",9999999.15,9999999.16,1,21,2,0)
and should not be changed by the user.
"^DD",9999999.15,9999999.16,1,21,3,0)

"^DD",9999999.15,9999999.16,1,"DT")
3150709
"^DD",9999999.15,9999999.16,2,0)
EDIT COMMENTS^9999999.162^^1;0
"^DD",9999999.15,9999999.16,2,21,0)
^^3^3^3150709^
"^DD",9999999.15,9999999.16,2,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",9999999.15,9999999.16,2,21,2,0)
the editing session.
"^DD",9999999.15,9999999.16,2,21,3,0)

"^DD",9999999.15,9999999.162,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",9999999.15,9999999.162,0,"DT")
3150709
"^DD",9999999.15,9999999.162,0,"NM","EDIT COMMENTS")

"^DD",9999999.15,9999999.162,0,"UP")
9999999.16
"^DD",9999999.15,9999999.162,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",9999999.15,9999999.162,.01,21,0)
^.001^3^3^3150709^^
"^DD",9999999.15,9999999.162,.01,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",9999999.15,9999999.162,.01,21,2,0)
the editing session.
"^DD",9999999.15,9999999.162,.01,21,3,0)

"^DD",9999999.15,9999999.162,.01,"DT")
3150709
"^DD",9999999.15,9999999.18,0)
CODE MAPPINGS SUB-FIELD^^3^4
"^DD",9999999.15,9999999.18,0,"DT")
3161013
"^DD",9999999.15,9999999.18,0,"NM","CODE MAPPINGS")

"^DD",9999999.15,9999999.18,0,"UP")
9999999.15
"^DD",9999999.15,9999999.18,.01,0)
CODING SYSTEM^FX^^0;1^K:$L(X)>7!($L(X)<3)!('$$VCODESYS^PXINPTR(.X)) X
"^DD",9999999.15,9999999.18,.01,1,0)
^.1^^0
"^DD",9999999.15,9999999.18,.01,3)
Enter the coding system.
"^DD",9999999.15,9999999.18,.01,4)
D CSHELP^PXLEX
"^DD",9999999.15,9999999.18,.01,21,0)
^.001^4^4^3151117^^
"^DD",9999999.15,9999999.18,.01,21,1,0)
This is the coding system, it is stored as one of the standard
"^DD",9999999.15,9999999.18,.01,21,2,0)
three-character abbreviations as defined in the Lexicon Coding Systems
"^DD",9999999.15,9999999.18,.01,21,3,0)
file #757.03.
"^DD",9999999.15,9999999.18,.01,21,4,0)

"^DD",9999999.15,9999999.18,.01,"DT")
3151117
"^DD",9999999.15,9999999.18,1,0)
CODE^FXJ40^^0;2^K:($L(X)>40)!($L(X)<1) X
"^DD",9999999.15,9999999.18,1,3)
Enter a code from the selected coding system.
"^DD",9999999.15,9999999.18,1,21,0)
^^2^2^3150709^
"^DD",9999999.15,9999999.18,1,21,1,0)
This is a code such as ICD-9, CPT, SNOMED CT, etc.
"^DD",9999999.15,9999999.18,1,21,2,0)

"^DD",9999999.15,9999999.18,1,"DT")
3161013
"^DD",9999999.15,9999999.18,2,0)
DATE MAPPED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.15,9999999.18,2,3)
Do not edit this field, it is set automatically.
"^DD",9999999.15,9999999.18,2,21,0)
^^2^2^3150828^
"^DD",9999999.15,9999999.18,2,21,1,0)
This is the date and time the mapping was done.
"^DD",9999999.15,9999999.18,2,21,2,0)

"^DD",9999999.15,9999999.18,2,"DT")
3151125
"^DD",9999999.15,9999999.18,3,0)
DATE LINKED^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.15,9999999.18,3,3)
Do not edit this field, it is set automatically.
"^DD",9999999.15,9999999.18,3,21,0)
^.001^3^3^3151224^^
"^DD",9999999.15,9999999.18,3,21,1,0)
This is the date and time the mapped code was linked to existing patient
"^DD",9999999.15,9999999.18,3,21,2,0)
data.
"^DD",9999999.15,9999999.18,3,21,3,0)

"^DD",9999999.15,9999999.18,3,"DT")
3151224
"^DD",9999999.64,9999999.64,0)
FIELD^^223^21
"^DD",9999999.64,9999999.64,0,"DDA")
N
"^DD",9999999.64,9999999.64,0,"DT")
3170106
"^DD",9999999.64,9999999.64,0,"ID",.1)
W ""
"^DD",9999999.64,9999999.64,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(9999999.64,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",9999999.64,9999999.64,0,"IX","AC",9999999.64,.03)

"^DD",9999999.64,9999999.64,0,"IX","AD",9999999.64,.1)

"^DD",9999999.64,9999999.64,0,"IX","D",9999999.64,.09)

"^DD",9999999.64,9999999.64,0,"NM","HEALTH FACTORS")

"^DD",9999999.64,9999999.64,0,"PT",142.14,.01)

"^DD",9999999.64,9999999.64,0,"PT",801.41,15)

"^DD",9999999.64,9999999.64,0,"PT",801.41,18)

"^DD",9999999.64,9999999.64,0,"PT",801.4118,.01)

"^DD",9999999.64,9999999.64,0,"PT",801.43,.02)

"^DD",9999999.64,9999999.64,0,"PT",801.95,.01)

"^DD",9999999.64,9999999.64,0,"PT",810.31,.04)

"^DD",9999999.64,9999999.64,0,"PT",810.32,.01)

"^DD",9999999.64,9999999.64,0,"PT",811.52,.01)

"^DD",9999999.64,9999999.64,0,"PT",811.902,.01)

"^DD",9999999.64,9999999.64,0,"PT",1927.32,3)

"^DD",9999999.64,9999999.64,0,"PT",1927.32,6)

"^DD",9999999.64,9999999.64,0,"PT",1927.32,11)

"^DD",9999999.64,9999999.64,0,"PT",1927.32,14)

"^DD",9999999.64,9999999.64,0,"PT",9000010.23,.01)

"^DD",9999999.64,9999999.64,0,"PT",9999999.64,.03)

"^DD",9999999.64,9999999.64,0,"PT",9999999.641101,.01)

"^DD",9999999.64,9999999.64,0,"VRPK")
PX
"^DD",9999999.64,9999999.64,.01,0)
FACTOR^RFXJ64^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXINPTR(.X)) X
"^DD",9999999.64,9999999.64,.01,1,0)
^.1^^0
"^DD",9999999.64,9999999.64,.01,3)
Enter the name of the health factor, 3-64 characters.
"^DD",9999999.64,9999999.64,.01,11,0)
^.2LAP
"^DD",9999999.64,9999999.64,.01,21,0)
^.001^2^2^3150709^^^^
"^DD",9999999.64,9999999.64,.01,21,1,0)
This is the name of the health factor (e.g., Current Smoker, Non-Tobacco User)
"^DD",9999999.64,9999999.64,.01,21,2,0)

"^DD",9999999.64,9999999.64,.01,"DEL",.01,0)
I 0
"^DD",9999999.64,9999999.64,.01,"DT")
3160321
"^DD",9999999.64,9999999.64,.03,0)
CATEGORY^R*P9999999.64'^AUTTHF(^0;3^S DIC("S")="I $P(^(0),U,10)'=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9999999.64,9999999.64,.03,1,0)
^.1
"^DD",9999999.64,9999999.64,.03,1,1,0)
9999999.64^AC
"^DD",9999999.64,9999999.64,.03,1,1,1)
S ^AUTTHF("AC",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.03,1,1,2)
K ^AUTTHF("AC",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.03,1,1,"DT")
2911011
"^DD",9999999.64,9999999.64,.03,3)
Select the category to which this factor belongs.
"^DD",9999999.64,9999999.64,.03,12)
Screening to prevent pointing to a non category type factor.
"^DD",9999999.64,9999999.64,.03,12.1)
S DIC("S")="I $P(^(0),U,10)'=""F"""
"^DD",9999999.64,9999999.64,.03,21,0)
^^5^5^2950809^^^^
"^DD",9999999.64,9999999.64,.03,21,1,0)
 This is the Health Factor that categorizes several factors into one group.
"^DD",9999999.64,9999999.64,.03,21,2,0)
For instance, Non smoker and Frequent Smoker would have the category of
"^DD",9999999.64,9999999.64,.03,21,3,0)
Tobacco.
"^DD",9999999.64,9999999.64,.03,21,4,0)
 
"^DD",9999999.64,9999999.64,.03,21,5,0)
Enter the name of the Health Factor Category.
"^DD",9999999.64,9999999.64,.03,"DT")
2911015
"^DD",9999999.64,9999999.64,.04,0)
SHORT NAME^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",9999999.64,9999999.64,.04,3)
Answer must be 2-10 characters in length.
"^DD",9999999.64,9999999.64,.04,21,0)
^.001^5^5^3010205^^
"^DD",9999999.64,9999999.64,.04,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.04,21,2,0)
This is a 'short name' for this health factor. If defined, it will be
"^DD",9999999.64,9999999.64,.04,21,3,0)
used on the Health Factors Component of the Health Summary
"^DD",9999999.64,9999999.64,.04,21,4,0)
 
"^DD",9999999.64,9999999.64,.04,21,5,0)
Enter a 2-10 character short name for this health factor.
"^DD",9999999.64,9999999.64,.04,"DT")
2910701
"^DD",9999999.64,9999999.64,.05,0)
USE ONLY WITH SEX^S^F:FEMALE;M:MALE;^0;5^Q
"^DD",9999999.64,9999999.64,.05,21,0)
^^4^4^2940125^^^^
"^DD",9999999.64,9999999.64,.05,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.05,21,2,0)
This is the sex that this health factor is used for.
"^DD",9999999.64,9999999.64,.05,21,3,0)
 
"^DD",9999999.64,9999999.64,.05,21,4,0)
Enter an "F" for female or an "M" for male.
"^DD",9999999.64,9999999.64,.05,"DT")
2910701
"^DD",9999999.64,9999999.64,.06,0)
LOWER AGE^NJ3,0^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.64,9999999.64,.06,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",9999999.64,9999999.64,.06,21,0)
^.001^5^5^3151130^^^^
"^DD",9999999.64,9999999.64,.06,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.06,21,2,0)
This is the lower age limit that might apply to this health factor.
"^DD",9999999.64,9999999.64,.06,21,3,0)
 
"^DD",9999999.64,9999999.64,.06,21,4,0)
Enter an age between 0 and 999.
"^DD",9999999.64,9999999.64,.06,21,5,0)

"^DD",9999999.64,9999999.64,.06,"DT")
3151130
"^DD",9999999.64,9999999.64,.07,0)
UPPER AGE^NJ3,0^^0;7^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.64,9999999.64,.07,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",9999999.64,9999999.64,.07,21,0)
^.001^5^5^3151130^^^^
"^DD",9999999.64,9999999.64,.07,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.07,21,2,0)
This is the upper age limit that applies to this health factor. 
"^DD",9999999.64,9999999.64,.07,21,3,0)
 
"^DD",9999999.64,9999999.64,.07,21,4,0)
Enter a number between 0 and 999.
"^DD",9999999.64,9999999.64,.07,21,5,0)

"^DD",9999999.64,9999999.64,.07,"DT")
3151130
"^DD",9999999.64,9999999.64,.08,0)
DISPLAY ON HEALTH SUMMARY^RS^Y:YES;N:NO;^0;8^Q
"^DD",9999999.64,9999999.64,.08,21,0)
^^4^4^2950718^^^
"^DD",9999999.64,9999999.64,.08,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.08,21,2,0)
This allows the health factor to be displayed on Health Summaries.
"^DD",9999999.64,9999999.64,.08,21,3,0)
 
"^DD",9999999.64,9999999.64,.08,21,4,0)
Enter a yes to display or a no to not display.
"^DD",9999999.64,9999999.64,.08,"DT")
3070226
"^DD",9999999.64,9999999.64,.09,0)
SYNONYM^F^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",9999999.64,9999999.64,.09,1,0)
^.1
"^DD",9999999.64,9999999.64,.09,1,1,0)
9999999.64^D
"^DD",9999999.64,9999999.64,.09,1,1,1)
S ^AUTTHF("D",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.09,1,1,2)
K ^AUTTHF("D",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.09,1,1,"DT")
2910701
"^DD",9999999.64,9999999.64,.09,3)
Answer must be 2-30 characters in length.
"^DD",9999999.64,9999999.64,.09,21,0)
^^4^4^2940125^^
"^DD",9999999.64,9999999.64,.09,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.09,21,2,0)
This this the synonym for this health factor.
"^DD",9999999.64,9999999.64,.09,21,3,0)
 
"^DD",9999999.64,9999999.64,.09,21,4,0)
Enter a 3 to 30 character synonym for this health factor.
"^DD",9999999.64,9999999.64,.09,"DT")
2910701
"^DD",9999999.64,9999999.64,.1,0)
ENTRY TYPE^RS^C:CATEGORY;F:FACTOR;^0;10^Q
"^DD",9999999.64,9999999.64,.1,1,0)
^.1
"^DD",9999999.64,9999999.64,.1,1,1,0)
9999999.64^AD
"^DD",9999999.64,9999999.64,.1,1,1,1)
S ^AUTTHF("AD",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.1,1,1,2)
K ^AUTTHF("AD",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.1,1,1,"DT")
2911015
"^DD",9999999.64,9999999.64,.1,3)
SMOKER or NON-SMOKER would be FACTORS. TOBACCO would be the Category that SMOKER and NON-SMOKER would belong to. Are you entering a FACTOR or a CATEGORY ?
"^DD",9999999.64,9999999.64,.1,21,0)
^^3^3^2950809^^^^
"^DD",9999999.64,9999999.64,.1,21,1,0)
This is the type of health factor, (e.g.,"F" for factor or "C" for category).
"^DD",9999999.64,9999999.64,.1,21,2,0)
 
"^DD",9999999.64,9999999.64,.1,21,3,0)
Enter an "F" for factor or a "C" for category.
"^DD",9999999.64,9999999.64,.1,"DT")
2911015
"^DD",9999999.64,9999999.64,.11,0)
INACTIVE FLAG^S^1:INACTIVE;^0;11^Q
"^DD",9999999.64,9999999.64,.11,3)
Enter a 1 to make the health factor inactive.
"^DD",9999999.64,9999999.64,.11,21,0)
^^8^8^2950825^
"^DD",9999999.64,9999999.64,.11,21,1,0)
This field is used to inactivate a health factor type. If this field
"^DD",9999999.64,9999999.64,.11,21,2,0)
contains a "1" then the health factor is inactive.  Inactive health
"^DD",9999999.64,9999999.64,.11,21,3,0)
factors cannot be selected in the manual data entry process.  Health
"^DD",9999999.64,9999999.64,.11,21,4,0)
factor entries should be made inactive when they are no longer used.  Do
"^DD",9999999.64,9999999.64,.11,21,5,0)
not delete the entry or change the meaning of the health factor entry.
"^DD",9999999.64,9999999.64,.11,21,6,0)
 
"^DD",9999999.64,9999999.64,.11,21,7,0)
To make an inactive health factor active, enter the "@" symbol to delete
"^DD",9999999.64,9999999.64,.11,21,8,0)
the "1" from the field.
"^DD",9999999.64,9999999.64,.11,23,0)
^^5^5^2950825^
"^DD",9999999.64,9999999.64,.11,23,1,0)
This field was added for use by PCE in the VA.
"^DD",9999999.64,9999999.64,.11,23,2,0)
 
"^DD",9999999.64,9999999.64,.11,23,3,0)
This inactive flag should be used, rather than deleting entries in
"^DD",9999999.64,9999999.64,.11,23,4,0)
the health factor file, since there may be other files pointing at the
"^DD",9999999.64,9999999.64,.11,23,5,0)
health factor entry.
"^DD",9999999.64,9999999.64,.11,"DT")
2950825
"^DD",9999999.64,9999999.64,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXINPTR(X) X
"^DD",9999999.64,9999999.64,100,3)
Enter the class.
"^DD",9999999.64,9999999.64,100,21,0)
^.001^4^4^3151027^^^^
"^DD",9999999.64,9999999.64,100,21,1,0)
This is the class of the health factor. Possible classes are "N" for
"^DD",9999999.64,9999999.64,100,21,2,0)
national, "V" for VISN, and "L" for local. National health factors
"^DD",9999999.64,9999999.64,100,21,3,0)
cannot be edited by sites.
"^DD",9999999.64,9999999.64,100,21,4,0)

"^DD",9999999.64,9999999.64,100,"DT")
3151113
"^DD",9999999.64,9999999.64,101,0)
SPONSOR^P811.6'X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXINPTR(9999999.64,X) X
"^DD",9999999.64,9999999.64,101,3)
Enter the sponsor.
"^DD",9999999.64,9999999.64,101,21,0)
^^2^2^3150424^
"^DD",9999999.64,9999999.64,101,21,1,0)
This is the organization or group that sponsors this health factor.
"^DD",9999999.64,9999999.64,101,21,2,0)

"^DD",9999999.64,9999999.64,101,"DT")
3151125
"^DD",9999999.64,9999999.64,110,0)
CHANGE LOG^9999999.65DA^^110;0
"^DD",9999999.64,9999999.64,110,21,0)
^^3^3^3150709^
"^DD",9999999.64,9999999.64,110,21,1,0)
This multiple is used to record a log of changes made to the health
"^DD",9999999.64,9999999.64,110,21,2,0)
factor.
"^DD",9999999.64,9999999.64,110,21,3,0)

"^DD",9999999.64,9999999.64,200,0)
PRINT NAME^F^^200;1^K:$L(X)>64!($L(X)<3) X
"^DD",9999999.64,9999999.64,200,3)
Enter the print name, 3-64 characters.
"^DD",9999999.64,9999999.64,200,21,0)
^^2^2^3150709^
"^DD",9999999.64,9999999.64,200,21,1,0)
This is the name of the health factor that will be used for display purposes.
"^DD",9999999.64,9999999.64,200,21,2,0)

"^DD",9999999.64,9999999.64,200,"DT")
3150709
"^DD",9999999.64,9999999.64,201,0)
DESCRIPTION^9999999.64201^^201;0
"^DD",9999999.64,9999999.64,201,21,0)
^^3^3^3150709^
"^DD",9999999.64,9999999.64,201,21,1,0)
This field contains a description of the health factor. It is used to
"^DD",9999999.64,9999999.64,201,21,2,0)
document its purpose and intended usage.
"^DD",9999999.64,9999999.64,201,21,3,0)

"^DD",9999999.64,9999999.64,210,0)
CODE MAPPINGS^9999999.66A^^210;0
"^DD",9999999.64,9999999.64,210,21,0)
^.001^3^3^3160218^^^^
"^DD",9999999.64,9999999.64,210,21,1,0)
This multiple contains a list of standard codes the health factor is mapped
"^DD",9999999.64,9999999.64,210,21,2,0)
to. Each mapping entry is defined by a coding system code pair.
"^DD",9999999.64,9999999.64,210,21,3,0)

"^DD",9999999.64,9999999.64,220,0)
MINIMUM VALUE^NJ24,9^^220;1^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.64,9999999.64,220,3)
Enter the minimum allowable value for the measurement.
"^DD",9999999.64,9999999.64,220,21,0)
^^5^5^3150915^^^
"^DD",9999999.64,9999999.64,220,21,1,0)
If a measurement is to be associated with a Health Factor, the Minimum
"^DD",9999999.64,9999999.64,220,21,2,0)
Value and Maximum Value sets the allowable range for the magnitude and
"^DD",9999999.64,9999999.64,220,21,3,0)
the unit is selected from the Universal Code for Units of Measurement
"^DD",9999999.64,9999999.64,220,21,4,0)
(UCUM) file.
"^DD",9999999.64,9999999.64,220,21,5,0)

"^DD",9999999.64,9999999.64,220,"DT")
3150915
"^DD",9999999.64,9999999.64,221,0)
MAXIMUM VALUE^NJ24,9^^220;2^K:+X'=X!(X>99999999999999)!(X<-99999999999999)!(X?.E1"."10N.N) X
"^DD",9999999.64,9999999.64,221,3)
Enter the maximum allowable value for the measurement.
"^DD",9999999.64,9999999.64,221,21,0)
^^5^5^3150915^^
"^DD",9999999.64,9999999.64,221,21,1,0)
If a measurement is to be associated with a Health Factor, the Minimum
"^DD",9999999.64,9999999.64,221,21,2,0)
Value and Maximum Value sets the allowable range for the magnitude and
"^DD",9999999.64,9999999.64,221,21,3,0)
the unit is selected from the Universal Code for Units of Measurement
"^DD",9999999.64,9999999.64,221,21,4,0)
(UCUM) file.
"^DD",9999999.64,9999999.64,221,21,5,0)

"^DD",9999999.64,9999999.64,221,"DT")
3150915
"^DD",9999999.64,9999999.64,222,0)
MAXIMUM DECIMALS^NJ2,0^^220;3^K:+X'=X!(X>15)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.64,9999999.64,222,3)
Enter an integer from 0 to 15.
"^DD",9999999.64,9999999.64,222,21,0)
^^3^3^3170106^
"^DD",9999999.64,9999999.64,222,21,1,0)
This is the maximum number of decimal digits that can be entered for the
"^DD",9999999.64,9999999.64,222,21,2,0)
measurement.
"^DD",9999999.64,9999999.64,222,21,3,0)

"^DD",9999999.64,9999999.64,222,"DT")
3170106
"^DD",9999999.64,9999999.64,223,0)
UCUM CODE^P757.5'^LEX(757.5,^220;4^Q
"^DD",9999999.64,9999999.64,223,3)
Select the UCUM code for the measurement.
"^DD",9999999.64,9999999.64,223,21,0)
^^5^5^3170106^
"^DD",9999999.64,9999999.64,223,21,1,0)
If a measurement is to be associated with a Health Factor, the Minimum
"^DD",9999999.64,9999999.64,223,21,2,0)
Value and Maximum Value sets the allowable range for the magnitude and
"^DD",9999999.64,9999999.64,223,21,3,0)
the unit is selected from the Universal Code for Units of Measurement
"^DD",9999999.64,9999999.64,223,21,4,0)
(UCUM) file.
"^DD",9999999.64,9999999.64,223,21,5,0)

"^DD",9999999.64,9999999.64,223,"DT")
3170106
"^DD",9999999.64,9999999.64,1101,0)
NOT USED WITH^9999999.641101P^^11;0
"^DD",9999999.64,9999999.64,1101,21,0)
^^2^2^2940125^^
"^DD",9999999.64,9999999.64,1101,21,1,0)
Some health factors are not used with others. This is the group of health
"^DD",9999999.64,9999999.64,1101,21,2,0)
factors that this factor is not used with.
"^DD",9999999.64,9999999.641101,0)
NOT USED WITH SUB-FIELD^^.01^1
"^DD",9999999.64,9999999.641101,0,"DT")
2910701
"^DD",9999999.64,9999999.641101,0,"IX","B",9999999.641101,.01)

"^DD",9999999.64,9999999.641101,0,"NM","NOT USED WITH")

"^DD",9999999.64,9999999.641101,0,"UP")
9999999.64
"^DD",9999999.64,9999999.641101,.01,0)
NOT USED WITH^MP9999999.64'^AUTTHF(^0;1^Q
"^DD",9999999.64,9999999.641101,.01,1,0)
^.1
"^DD",9999999.64,9999999.641101,.01,1,1,0)
9999999.641101^B
"^DD",9999999.64,9999999.641101,.01,1,1,1)
S ^AUTTHF(DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.641101,.01,1,1,2)
K ^AUTTHF(DA(1),11,"B",$E(X,1,30),DA)
"^DD",9999999.64,9999999.641101,.01,21,0)
^^3^3^2940120^
"^DD",9999999.64,9999999.641101,.01,21,1,0)
This is the health factor that the health factor is not used with.
"^DD",9999999.64,9999999.641101,.01,21,2,0)
 
"^DD",9999999.64,9999999.641101,.01,21,3,0)
Enter the name of a health factor that is laready in this file.
"^DD",9999999.64,9999999.641101,.01,"DT")
2910701
"^DD",9999999.64,9999999.64201,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",9999999.64,9999999.64201,0,"DT")
3150709
"^DD",9999999.64,9999999.64201,0,"NM","DESCRIPTION")

"^DD",9999999.64,9999999.64201,0,"UP")
9999999.64
"^DD",9999999.64,9999999.64201,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",9999999.64,9999999.64201,.01,3)
Enter the DESCRIPTION
"^DD",9999999.64,9999999.64201,.01,"DT")
3150709
"^DD",9999999.64,9999999.65,0)
CHANGE LOG SUB-FIELD^^2^3
"^DD",9999999.64,9999999.65,0,"DT")
3150709
"^DD",9999999.64,9999999.65,0,"NM","CHANGE LOG")

"^DD",9999999.64,9999999.65,0,"UP")
9999999.64
"^DD",9999999.64,9999999.65,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.64,9999999.65,.01,1,0)
^.1^^0
"^DD",9999999.64,9999999.65,.01,3)
Do not edit this field.
"^DD",9999999.64,9999999.65,.01,21,0)
^.001^3^3^3150709^^
"^DD",9999999.64,9999999.65,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",9999999.64,9999999.65,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",9999999.64,9999999.65,.01,21,3,0)

"^DD",9999999.64,9999999.65,.01,"DT")
3150709
"^DD",9999999.64,9999999.65,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",9999999.64,9999999.65,1,3)
Do not edit this field.
"^DD",9999999.64,9999999.65,1,21,0)
^^3^3^3150709^
"^DD",9999999.64,9999999.65,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",9999999.64,9999999.65,1,21,2,0)
and should not be changed by the user.
"^DD",9999999.64,9999999.65,1,21,3,0)

"^DD",9999999.64,9999999.65,1,"DT")
3150709
"^DD",9999999.64,9999999.65,2,0)
EDIT COMMENTS^9999999.652^^1;0
"^DD",9999999.64,9999999.652,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",9999999.64,9999999.652,0,"DT")
3150709
"^DD",9999999.64,9999999.652,0,"NM","EDIT COMMENTS")

"^DD",9999999.64,9999999.652,0,"UP")
9999999.65
"^DD",9999999.64,9999999.652,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",9999999.64,9999999.652,.01,21,0)
^^3^3^3150709^
"^DD",9999999.64,9999999.652,.01,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",9999999.64,9999999.652,.01,21,2,0)
the editing session.
"^DD",9999999.64,9999999.652,.01,21,3,0)

"^DD",9999999.64,9999999.652,.01,"DT")
3150709
"^DD",9999999.64,9999999.66,0)
CODE MAPPINGS SUB-FIELD^^3^4
"^DD",9999999.64,9999999.66,0,"DT")
3161013
"^DD",9999999.64,9999999.66,0,"NM","CODE MAPPINGS")

"^DD",9999999.64,9999999.66,0,"UP")
9999999.64
"^DD",9999999.64,9999999.66,.01,0)
CODING SYSTEM^FX^^0;1^K:$L(X)>7!($L(X)<3)!('$$VCODESYS^PXINPTR(.X)) X
"^DD",9999999.64,9999999.66,.01,1,0)
^.1^^0
"^DD",9999999.64,9999999.66,.01,3)
Enter the coding system.
"^DD",9999999.64,9999999.66,.01,4)
D CSHELP^PXLEX
"^DD",9999999.64,9999999.66,.01,21,0)
^^4^4^3150709^
"^DD",9999999.64,9999999.66,.01,21,1,0)
This is the coding system, it is stored as one of the standard
"^DD",9999999.64,9999999.66,.01,21,2,0)
three-character abbreviations as defined in the Lexicon Coding Systems
"^DD",9999999.64,9999999.66,.01,21,3,0)
file #757.03.
"^DD",9999999.64,9999999.66,.01,21,4,0)

"^DD",9999999.64,9999999.66,.01,"DT")
3151209
"^DD",9999999.64,9999999.66,1,0)
CODE^FXJ40^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",9999999.64,9999999.66,1,3)
Enter a code from the selected coding system.
"^DD",9999999.64,9999999.66,1,21,0)
^^2^2^3150709^
"^DD",9999999.64,9999999.66,1,21,1,0)
This is a code such as ICD-9, CPT, SNOMED CT, etc.
"^DD",9999999.64,9999999.66,1,21,2,0)

"^DD",9999999.64,9999999.66,1,"DT")
3161013
"^DD",9999999.64,9999999.66,2,0)
DATE MAPPED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.64,9999999.66,2,3)
Do not edit this field, it is set automatically.
"^DD",9999999.64,9999999.66,2,21,0)
^.001^2^2^3160218^^
"^DD",9999999.64,9999999.66,2,21,1,0)
This is the date and time the mapping was done.
"^DD",9999999.64,9999999.66,2,21,2,0)

"^DD",9999999.64,9999999.66,2,"DT")
3151125
"^DD",9999999.64,9999999.66,3,0)
DATE LINKED^D^^0;4^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",9999999.64,9999999.66,3,3)
Do not edit this field, it is set automatically.
"^DD",9999999.64,9999999.66,3,21,0)
^.001^4^4^3151224^^
"^DD",9999999.64,9999999.66,3,21,1,0)
This is the date and time the mapped code was linked to existing patient
"^DD",9999999.64,9999999.66,3,21,2,0)
data.
"^DD",9999999.64,9999999.66,3,21,3,0)

"^DD",9999999.64,9999999.66,3,21,4,0)

"^DD",9999999.64,9999999.66,3,"DT")
3151224
"^DIC",815,815,0)
PCE PARAMETERS^815
"^DIC",815,815,0,"GL")
^PX(815,
"^DIC",815,815,"%D",0)
^^2^2^2960909^^^^
"^DIC",815,815,"%D",1,0)
This file has one entry (1) that contains parameters used by Patient Care
"^DIC",815,815,"%D",2,0)
Encounter (PCE).  The "LM" node is used by the User Inteface (PXCE).
"^DIC",815,"B","PCE PARAMETERS",815)

"^DIC",9000010.07,9000010.07,0)
V POV^9000010.07IP
"^DIC",9000010.07,9000010.07,0,"GL")
^AUPNVPOV(
"^DIC",9000010.07,9000010.07,"%D",0)
^^47^47^2960809^^^^
"^DIC",9000010.07,9000010.07,"%D",1,0)
This file has been designed for joint use by the Indian Health Service and
"^DIC",9000010.07,9000010.07,"%D",2,0)
the Department of Veteran Affairs.  POV is an abbreviation for "Purpose of
"^DIC",9000010.07,9000010.07,"%D",3,0)
Visit" (descriptive name used by IHS) or "Problem of Visit" (descriptive
"^DIC",9000010.07,9000010.07,"%D",4,0)
name used by VA).
"^DIC",9000010.07,9000010.07,"%D",5,0)
 
"^DIC",9000010.07,9000010.07,"%D",6,0)
The V POV file is used to store clinical data related to the "purpose of
"^DIC",9000010.07,9000010.07,"%D",7,0)
visit" or "problem of visit", (POV). This is the provider's definition of
"^DIC",9000010.07,9000010.07,"%D",8,0)
what diagnosis to use to represent the patient care given at the visit.
"^DIC",9000010.07,9000010.07,"%D",9,0)
The POV entry is not the patient's "Chief Complaint" text.  It is the
"^DIC",9000010.07,9000010.07,"%D",10,0)
diagnosis as defined by the provider which will have an ICD Diagnosis
"^DIC",9000010.07,9000010.07,"%D",11,0)
code related to it to support Clinical needs and additionally support
"^DIC",9000010.07,9000010.07,"%D",12,0)
Administrative functions too such as Billing, Workload, and DSS.  
"^DIC",9000010.07,9000010.07,"%D",13,0)
 
"^DIC",9000010.07,9000010.07,"%D",14,0)
There should be at least one "purpose of visit" (descriptive name used by
"^DIC",9000010.07,9000010.07,"%D",15,0)
IHS) or one "problem of visit" (descriptive name used by the VA) in the V
"^DIC",9000010.07,9000010.07,"%D",16,0)
POV file for each patient visit whether it is an inpatient, outpatient or
"^DIC",9000010.07,9000010.07,"%D",17,0)
field visit, and regardless of the discipline of the provider (i.e.
"^DIC",9000010.07,9000010.07,"%D",18,0)
dental, CHN, mental health, etc.). There is no limit to the number of
"^DIC",9000010.07,9000010.07,"%D",19,0)
POV's that can be entered for a patient for a given encounter.
"^DIC",9000010.07,9000010.07,"%D",20,0)
  
"^DIC",9000010.07,9000010.07,"%D",21,0)
At IHS facilities, POV's are generated automatically for this file at
"^DIC",9000010.07,9000010.07,"%D",22,0)
time of discharge from the Admission, Discharge and Transfer (ADT) system.
"^DIC",9000010.07,9000010.07,"%D",23,0)
POV's are entered in narrative form, and coded automatically to the 
"^DIC",9000010.07,9000010.07,"%D",24,0)
appropriate ICD diagnosis code. Physician entered narrative which modifies
"^DIC",9000010.07,9000010.07,"%D",25,0)
diagnosis, such as "doubtful, suspect, resolved" are entered by the data
"^DIC",9000010.07,9000010.07,"%D",26,0)
entry person in the MODIFIER field.  Narrative qualifiers, such as "not
"^DIC",9000010.07,9000010.07,"%D",27,0)
healing well", "date of onset", "severe" etc.. are stored in the NARRATIVE
"^DIC",9000010.07,9000010.07,"%D",28,0)
QUALIFIER field.  STAGE is used only as a local option.  The file contains
"^DIC",9000010.07,9000010.07,"%D",29,0)
pointers to the IHS Patient file, and visit file, and data must exist in
"^DIC",9000010.07,9000010.07,"%D",30,0)
both of these files for this visit before a POV can be entered here.
"^DIC",9000010.07,9000010.07,"%D",31,0)
 
"^DIC",9000010.07,9000010.07,"%D",32,0)
At VA facilities, POV is used as an abbreviation for "Problem of Visit",
"^DIC",9000010.07,9000010.07,"%D",33,0)
or the problem treated at the visit.  POV's are primarily created
"^DIC",9000010.07,9000010.07,"%D",34,0)
for clinic visits from 3 sources:
"^DIC",9000010.07,9000010.07,"%D",35,0)
  1) The scheduling checkout process, in which case the information
"^DIC",9000010.07,9000010.07,"%D",36,0)
collected about the POV is limited to the ICD Diagnosis code.  The
"^DIC",9000010.07,9000010.07,"%D",37,0)
provider narrative becomes the ICD narrative from the ICD Diagnosis file.
"^DIC",9000010.07,9000010.07,"%D",38,0)
  2) The Encounter Form automated data scanning (AICS package).  In this
"^DIC",9000010.07,9000010.07,"%D",39,0)
case the provider narrative is the terminology defined by the clinician to
"^DIC",9000010.07,9000010.07,"%D",40,0)
represent the diagnosis on the encounter form. The AICS package, or other
"^DIC",9000010.07,9000010.07,"%D",41,0)
automated data capture tool, is able to pass the narrative and the ICD
"^DIC",9000010.07,9000010.07,"%D",42,0)
Diagnosis.  If the problem treated at the visit was a pre-existing problem
"^DIC",9000010.07,9000010.07,"%D",43,0)
from the patient's "Problem List", the related problem entry is also
"^DIC",9000010.07,9000010.07,"%D",44,0)
stored in the POV record. (The Problem List orientation is not utilized by
"^DIC",9000010.07,9000010.07,"%D",45,0)
IHS.)
"^DIC",9000010.07,9000010.07,"%D",46,0)
  3) The manual data entry process for encounter form data not collected
"^DIC",9000010.07,9000010.07,"%D",47,0)
via automated data capture.  This process is the most like the process IHS
"^DIC",9000010.07,"B","V POV",9000010.07)

"^DIC",9000010.13,9000010.13,0)
V EXAM^9000010.13IP
"^DIC",9000010.13,9000010.13,0,"GL")
^AUPNVXAM(
"^DIC",9000010.13,9000010.13,"%D",0)
^^3^3^2960809^^^^
"^DIC",9000010.13,9000010.13,"%D",1,0)
This file contains exam information specific to a particular visit for a
"^DIC",9000010.13,9000010.13,"%D",2,0)
particular patient. This file contains one record for each exam for each
"^DIC",9000010.13,9000010.13,"%D",3,0)
visit.
"^DIC",9000010.13,"B","V EXAM",9000010.13)

"^DIC",9000010.16,9000010.16,0)
V PATIENT ED^9000010.16IP
"^DIC",9000010.16,9000010.16,0,"GL")
^AUPNVPED(
"^DIC",9000010.16,9000010.16,"%D",0)
7^^7^7^2960809^^^
"^DIC",9000010.16,9000010.16,"%D",1,0)
This file has been designed for joint use by the Indian Health Service and
"^DIC",9000010.16,9000010.16,"%D",2,0)
the Department of Veteran Affairs.
"^DIC",9000010.16,9000010.16,"%D",3,0)
 
"^DIC",9000010.16,9000010.16,"%D",4,0)
This is the file which stores the patient education given to a patient 
"^DIC",9000010.16,9000010.16,"%D",5,0)
or his responsible care giver. Data must exist in the Patient/IHS file and
"^DIC",9000010.16,9000010.16,"%D",6,0)
Visit file for a patient visit before data can be entered in the V Patient
"^DIC",9000010.16,9000010.16,"%D",7,0)
Ed File.
"^DIC",9000010.16,"B","V PATIENT ED",9000010.16)

"^DIC",9000010.18,9000010.18,0)
V CPT^9000010.18IP
"^DIC",9000010.18,9000010.18,0,"GL")
^AUPNVCPT(
"^DIC",9000010.18,9000010.18,"%D",0)
^^18^18^2960809^^^
"^DIC",9000010.18,9000010.18,"%D",1,0)
The V CPT file has been defined for joint use by the Indian Health Service
"^DIC",9000010.18,9000010.18,"%D",2,0)
and the Department of Veteran Affairs. This is the file used to store CPT
"^DIC",9000010.18,9000010.18,"%D",3,0)
related services performed at a visit.  Data must exist for a patient and
"^DIC",9000010.18,9000010.18,"%D",4,0)
a visit before data can be entered in the V CPT file.
"^DIC",9000010.18,9000010.18,"%D",5,0)
 
"^DIC",9000010.18,9000010.18,"%D",6,0)
This file is used in the VA to identify procedures that were done to a
"^DIC",9000010.18,9000010.18,"%D",7,0)
patient at an encounter or occassion of service.  The procedures may
"^DIC",9000010.18,9000010.18,"%D",8,0)
have been performed by a primary or secondary provider of patient
"^DIC",9000010.18,9000010.18,"%D",9,0)
care.  Procedures checked off and scanned from ambulatory care encounter
"^DIC",9000010.18,9000010.18,"%D",10,0)
forms are stored here to record that they were done.  Results of
"^DIC",9000010.18,9000010.18,"%D",11,0)
procedures are not included.
"^DIC",9000010.18,9000010.18,"%D",12,0)
 
"^DIC",9000010.18,9000010.18,"%D",13,0)
This file is restricted to procedures that have a CPT code.  The V
"^DIC",9000010.18,9000010.18,"%D",14,0)
Treatment file is used to store procedures without CPT codes that do not
"^DIC",9000010.18,9000010.18,"%D",15,0)
fit into any other V-file category.
"^DIC",9000010.18,9000010.18,"%D",16,0)
 
"^DIC",9000010.18,9000010.18,"%D",17,0)
The Provider Narrative field represents the preferred text for this
"^DIC",9000010.18,9000010.18,"%D",18,0)
procedure as defined by the clinician.
"^DIC",9000010.18,"B","V CPT",9000010.18)

"^DIC",9000010.23,9000010.23,0)
V HEALTH FACTORS^9000010.23IP
"^DIC",9000010.23,9000010.23,0,"GL")
^AUPNVHF(
"^DIC",9000010.23,9000010.23,"%",0)
^1.005^^0
"^DIC",9000010.23,9000010.23,"%D",0)
^^6^6^2960809^^^^
"^DIC",9000010.23,9000010.23,"%D",1,0)
This file has been defined for joint use by the Indian Health Service and
"^DIC",9000010.23,9000010.23,"%D",2,0)
the Department of Veteran Affairs.
"^DIC",9000010.23,9000010.23,"%D",3,0)
 
"^DIC",9000010.23,9000010.23,"%D",4,0)
This is the file used for storing patient health factors identified at a
"^DIC",9000010.23,9000010.23,"%D",5,0)
visit. Data must exist in the Patient/IHS and Visit file for a patient's
"^DIC",9000010.23,9000010.23,"%D",6,0)
visit before data can be entered in the V Health Factor file.
"^DIC",9000010.23,"B","V HEALTH FACTORS",9000010.23)

"^DIC",9000010.71,9000010.71,0)
V STANDARD CODES^9000010.71
"^DIC",9000010.71,9000010.71,0,"GL")
^AUPNVSC(
"^DIC",9000010.71,9000010.71,"%",0)
^1.005
"^DIC",9000010.71,9000010.71,"%D",0)
^^4^4^3150901^
"^DIC",9000010.71,9000010.71,"%D",1,0)
The V STANDARD CODES file is used to store standardized codes other than
"^DIC",9000010.71,9000010.71,"%D",2,0)
CPT and ICD. This allows for more complete standardized documentation of
"^DIC",9000010.71,9000010.71,"%D",3,0)
the encounter.
"^DIC",9000010.71,9000010.71,"%D",4,0)

"^DIC",9000010.71,"B","V STANDARD CODES",9000010.71)

"^DIC",9999999.09,9999999.09,0)
EDUCATION TOPICS^9999999.09
"^DIC",9999999.09,9999999.09,0,"GL")
^AUTTEDT(
"^DIC",9999999.09,9999999.09,"%",0)
^1.005^1^1
"^DIC",9999999.09,9999999.09,"%",1,0)
PXRM
"^DIC",9999999.09,9999999.09,"%","B","PXRM",1)

"^DIC",9999999.09,9999999.09,"%D",0)
^^7^7^2960809^^^^
"^DIC",9999999.09,9999999.09,"%D",1,0)
This file defines the names of education topics to be tracked at your
"^DIC",9999999.09,9999999.09,"%D",2,0)
site. Education topics that are not to be used should be marked "Inactive"
"^DIC",9999999.09,9999999.09,"%D",3,0)
in the Active Status field.
"^DIC",9999999.09,9999999.09,"%D",4,0)
 
"^DIC",9999999.09,9999999.09,"%D",5,0)
Changes to this data dictionary should be coordinated thru the IHS DBA.
"^DIC",9999999.09,9999999.09,"%D",6,0)
 
"^DIC",9999999.09,9999999.09,"%D",7,0)
A x-ref on the MNEMONIC field was added to version 93.2.
"^DIC",9999999.09,"B","EDUCATION TOPICS",9999999.09)

"^DIC",9999999.15,9999999.15,0)
EXAM^9999999.15I
"^DIC",9999999.15,9999999.15,0,"GL")
^AUTTEXAM(
"^DIC",9999999.15,9999999.15,"%",0)
^1.005^1^1
"^DIC",9999999.15,9999999.15,"%",1,0)
PXRM
"^DIC",9999999.15,9999999.15,"%","B","PXRM",1)

"^DIC",9999999.15,9999999.15,"%D",0)
^^5^5^2960809^^^^
"^DIC",9999999.15,9999999.15,"%D",1,0)
This file is a list of Physical Exams that have been defined specifically
"^DIC",9999999.15,9999999.15,"%D",2,0)
for use in entering Examinations performed on an Outpatient or Inpatient
"^DIC",9999999.15,9999999.15,"%D",3,0)
Encounter.  
"^DIC",9999999.15,9999999.15,"%D",4,0)
 
"^DIC",9999999.15,9999999.15,"%D",5,0)
This file was developed by IHS and adopted by the VA. 
"^DIC",9999999.15,"B","EXAM",9999999.15)

"^DIC",9999999.64,9999999.64,0)
HEALTH FACTORS^9999999.64I
"^DIC",9999999.64,9999999.64,0,"GL")
^AUTTHF(
"^DIC",9999999.64,9999999.64,"%",0)
^1.005^1^1
"^DIC",9999999.64,9999999.64,"%",1,0)
GMTS
"^DIC",9999999.64,9999999.64,"%","B","GMTS",1)

"^DIC",9999999.64,9999999.64,"%D",0)
^1.001^4^4^3151222^^^^
"^DIC",9999999.64,9999999.64,"%D",1,0)
This file contains a descriptive name of health factors, and their health
"^DIC",9999999.64,9999999.64,"%D",2,0)
factor category.
"^DIC",9999999.64,9999999.64,"%D",3,0)
 
"^DIC",9999999.64,9999999.64,"%D",4,0)
Changes to this data dictionary should be coordinated thru the IHS DBA.
"^DIC",9999999.64,"B","HEALTH FACTORS",9999999.64)

**END**
**END**
